#by Shiro
Infra_AISpendCheck_Agriculture = {
    if = {
        limit = {
            always = yes
			[[cap]
                OR = {
                    NOT = { 
                       check_key = { lhs = Building_$type$ which = $cap$ } 
                    }
                   
                    NOT = { 
                       check_key = { lhs = BU_Prp$type$ value = 30 } 
                    }
                }
            ]
        }
        Infra_DoSpendAI_Agriculture = {  type = $type$ return = $return$ }
    }
}

Infra_DoSpendAI_Agriculture = {
	set_key = { lhs = Tmp_0 which = Building_$type$Up }
	set_key = { lhs = Tmp_7 which = Building_$type$Down }
	
	subtract_key = { lhs = Tmp_0 which = Tmp_7 } # how much the industry wants to expand vs shrink
    if = {
        limit = { #if wants to expand & it's profitable
            check_key = { lhs = Building_$type$Gross value = 0.001 }
            check_key = { lhs = Tmp_0 value = 0.01 }
        }
        set_key = { lhs = $return$ which = Tmp_0 } # Local Ai Willingness to Invest
        
        multiply_key = { lhs = $return$ which = pv_ce } # CE
        multiply_key = { lhs = $return$ value = 0.1 }
       
        if = {
            limit = {
                is_key_equal = { lhs = Building_$type$ which = Building_AgricultureMax }
            }
            multiply_key = { lhs = $return$ value = 0.05 }
        }
        if = {
            limit = {
                is_capital = yes
            }
            multiply_key = { lhs = $return$ value = 3.5 }
        }
        else_if = {
            limit = {
                any_province_in_state = {
                    is_capital_of = owner
                }
            }
            multiply_key = { lhs = $return$ value = 3 }
        }
        else_if = {
            limit = {
                NOT = { is_in_capital_area = yes }
            }
            multiply_key = { lhs = $return$ value = 0.5 }
        }
        
        set_key = { lhs = Tax_Tmp0 which = Tax_CostPropAgricultureRate }
        multiply_key = { lhs = Tax_Tmp0 value = 0.01 }
        change_key = { lhs = Tax_Tmp0 value = 1 }
        multiply_key = { lhs = $return$ which = Tax_Tmp0 }
        set_key = { lhs = Tax_Tmp0 value = 0 }
        
        trigger_switch = {
            on_trigger = has_province_flag 
            AgricultureInvestment6 = { multiply_key = { lhs = $return$ value = 0.006 } clr_province_flag = AgricultureInvestment6 }
            AgricultureInvestment8 = { multiply_key = { lhs = $return$ value = 0.004 } clr_province_flag = AgricultureInvestment8 }
        }
        
        
        if = { # reduce score by size -> prevents financial collapses
            limit = {
                check_key = { lhs = Building_$type$ value = 800 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 1200 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 1600 }
                    }
                    multiply_key = { lhs = $return$ value = 0.05 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.15 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.25 }
            }
        }
        else_if = {
            limit = {
                check_key = { lhs = Building_$type$ value = 350 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 500 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 650 }
                    }
                    multiply_key = { lhs = $return$ value = 0.3 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.4 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.5 }
            }
        }
    }
    else = {
        set_key = { lhs = $return$ value = 0 }
    }
}
Infra_AISpendCheck_Forestry = {
    if = {
        limit = {
            always = yes
			[[cap]
                OR = {
                    NOT = { 
                       check_key = { lhs = Building_$type$ which = $cap$ } 
                    }
                   
                    NOT = { 
                       check_key = { lhs = BU_Prp$type$ value = 30 } 
                    }
                }
            ]
        }
        Infra_DoSpendAI_Forestry = {  type = $type$ return = $return$ }
    }
}

Infra_DoSpendAI_Forestry = {
	set_key = { lhs = Tmp_0 which = Building_$type$Up }
	set_key = { lhs = Tmp_7 which = Building_$type$Down }
	
	subtract_key = { lhs = Tmp_0 which = Tmp_7 } # how much the industry wants to expand vs shrink
    if = {
        limit = { #if wants to expand & it's profitable
            check_key = { lhs = Building_$type$Gross value = 0.001 }
            check_key = { lhs = Tmp_0 value = 0.01 }
        }
        set_key = { lhs = $return$ which = Tmp_0 } # Local Ai Willingness to Invest
        
        multiply_key = { lhs = $return$ which = pv_ce } # CE
        multiply_key = { lhs = $return$ value = 0.1 }
        
        if = {
            limit = {
                is_key_equal = { lhs = Building_$type$ which = Building_ForestryMax }
            }
            multiply_key = { lhs = $return$ value = 0.05 }
        }
        if = {
            limit = {
                is_capital = yes
            }
            multiply_key = { lhs = $return$ value = 3.5 }
        }
        else_if = {
            limit = {
                any_province_in_state = {
                    is_capital_of = owner
                }
            }
            multiply_key = { lhs = $return$ value = 3 }
        }
        else_if = {
            limit = {
                NOT = { is_in_capital_area = yes }
            }
            multiply_key = { lhs = $return$ value = 0.5 }
        }
        
        set_key = { lhs = Tax_Tmp0 which = Tax_CostPropForestryRate }
        multiply_key = { lhs = Tax_Tmp0 value = 0.01 }
        change_key = { lhs = Tax_Tmp0 value = 1 }
        multiply_key = { lhs = $return$ which = Tax_Tmp0 }
        set_key = { lhs = Tax_Tmp0 value = 0 }
        
        trigger_switch = {
            on_trigger = has_province_flag 
            ForestryInvestment6 = { multiply_key = { lhs = $return$ value = 0.006 } clr_province_flag = ForestryInvestment6 }
            ForestryInvestment8 = { multiply_key = { lhs = $return$ value = 0.004 } clr_province_flag = ForestryInvestment8 }
        }
           
        if = { # reduce score by size -> prevents financial collapses
            limit = {
                check_key = { lhs = Building_$type$ value = 800 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 1200 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 1600 }
                    }
                    multiply_key = { lhs = $return$ value = 0.05 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.15 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.25 }
            }
        }
        else_if = {
            limit = {
                check_key = { lhs = Building_$type$ value = 350 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 500 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 650 }
                    }
                    multiply_key = { lhs = $return$ value = 0.3 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.4 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.5 }
            }
        }
    }
    else = {
        set_key = { lhs = $return$ value = 0 }
    }
}
Infra_AISpendCheck_Extraction = {
    if = {
        limit = {
            always = yes
			[[cap]
                OR = {
                    NOT = { 
                       check_key = { lhs = Building_$type$ which = $cap$ } 
                    }
                   
                    NOT = { 
                       check_key = { lhs = BU_Prp$type$ value = 30 } 
                    }
                }
            ]
        }
        Infra_DoSpendAI_Extraction = {  type = $type$ return = $return$ }
    }
}

Infra_DoSpendAI_Extraction = {
	set_key = { lhs = Tmp_0 which = Building_$type$Up }
	set_key = { lhs = Tmp_7 which = Building_$type$Down }
	
	subtract_key = { lhs = Tmp_0 which = Tmp_7 } # how much the industry wants to expand vs shrink
    if = {
        limit = { #if wants to expand & it's profitable
            check_key = { lhs = Building_$type$Gross value = 0.001 }
            check_key = { lhs = Tmp_0 value = 0.01 }
        }
        set_key = { lhs = $return$ which = Tmp_0 } # Local Ai Willingness to Invest
        
        multiply_key = { lhs = $return$ which = pv_ce } # CE
        multiply_key = { lhs = $return$ value = 0.1 }
        
        if = {
            limit = {
                is_key_equal = { lhs = Building_$type$ which = Building_ExtractionMax }
            }
            multiply_key = { lhs = $return$ value = 0.05 }
        }
        if = {
            limit = {
                is_capital = yes
            }
            multiply_key = { lhs = $return$ value = 3.5 }
        }
        else_if = {
            limit = {
                any_province_in_state = {
                    is_capital_of = owner
                }
            }
            multiply_key = { lhs = $return$ value = 3 }
        }
        else_if = {
            limit = {
                NOT = { is_in_capital_area = yes }
            }
            multiply_key = { lhs = $return$ value = 0.5 }
        }
        
        set_key = { lhs = Tax_Tmp0 which = Tax_CostPropExtractionRate }
        multiply_key = { lhs = Tax_Tmp0 value = 0.01 }
        change_key = { lhs = Tax_Tmp0 value = 1 }
        multiply_key = { lhs = $return$ which = Tax_Tmp0 }
        set_key = { lhs = Tax_Tmp0 value = 0 }
        
        trigger_switch = {
            on_trigger = has_province_flag 
            ExtractionInvestment6 = { multiply_key = { lhs = $return$ value = 0.006 } clr_province_flag = ExtractionInvestment6 }
            ExtractionInvestment8 = { multiply_key = { lhs = $return$ value = 0.004 } clr_province_flag = ExtractionInvestment8 }
        }
        
        
        if = { # reduce score by size -> prevents financial collapses
            limit = {
                check_key = { lhs = Building_$type$ value = 800 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 1200 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 1600 }
                    }
                    multiply_key = { lhs = $return$ value = 0.05 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.15 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.25 }
            }
        }
        else_if = {
            limit = {
                check_key = { lhs = Building_$type$ value = 350 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 500 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 650 }
                    }
                    multiply_key = { lhs = $return$ value = 0.3 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.4 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.5 }
            }
        }
    }
    else = {
        set_key = { lhs = $return$ value = 0 }
    }
}
Infra_AISpendCheck_Fishery = {
    if = {
        limit = {
            always = yes
			[[cap]
                OR = {
                    NOT = { 
                       check_key = { lhs = Building_$type$ which = $cap$ } 
                    }
                   
                    NOT = { 
                       check_key = { lhs = BU_Prp$type$ value = 30 } 
                    }
                }
            ]
        }
        Infra_DoSpendAI_Fishery = {  type = $type$ return = $return$ }
    }
}

Infra_DoSpendAI_Fishery = {
	set_key = { lhs = Tmp_0 which = Building_$type$Up }
	set_key = { lhs = Tmp_7 which = Building_$type$Down }
	
	subtract_key = { lhs = Tmp_0 which = Tmp_7 } # how much the industry wants to expand vs shrink
    if = {
        limit = { #if wants to expand & it's profitable
            check_key = { lhs = Building_$type$Gross value = 0.001 }
            check_key = { lhs = Tmp_0 value = 0.01 }
        }
        set_key = { lhs = $return$ which = Tmp_0 } # Local Ai Willingness to Invest
        
        multiply_key = { lhs = $return$ which = pv_ce } # CE
        multiply_key = { lhs = $return$ value = 0.1 }
        
        if = {
            limit = {
                NOT = { check_key = { lhs = BU_Gross$type$ value = 0.001 } }
            }
            multiply_key = { lhs = $return$ value = 0.05 }
        }		
        
        if = {
            limit = {
                is_key_equal = { lhs = Building_$type$ which = Building_FisheryMax }
            }
            multiply_key = { lhs = $return$ value = 0.05 }
        }
        if = {
            limit = {
                is_capital = yes
            }
            multiply_key = { lhs = $return$ value = 3.5 }
        }
        else_if = {
            limit = {
                any_province_in_state = {
                    is_capital_of = owner
                }
            }
            multiply_key = { lhs = $return$ value = 3 }
        }
        else_if = {
            limit = {
                NOT = { is_in_capital_area = yes }
            }
            multiply_key = { lhs = $return$ value = 0.5 }
        }

        set_key = { lhs = Tax_Tmp0 which = Tax_CostPropFisheryRate }
        multiply_key = { lhs = Tax_Tmp0 value = 0.01 }
        change_key = { lhs = Tax_Tmp0 value = 1 }
        multiply_key = { lhs = $return$ which = Tax_Tmp0 }
        set_key = { lhs = Tax_Tmp0 value = 0 }
        
        trigger_switch = {
            on_trigger = has_province_flag 
            FisheryInvestment6 = { multiply_key = { lhs = $return$ value = 0.006 } clr_province_flag = FisheryInvestment6 }
            FisheryInvestment8 = { multiply_key = { lhs = $return$ value = 0.004 } clr_province_flag = FisheryInvestment8 }
        }
           
        if = { # reduce score by size -> prevents financial collapses
            limit = {
                check_key = { lhs = Building_$type$ value = 800 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 1200 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 1600 }
                    }
                    multiply_key = { lhs = $return$ value = 0.05 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.15 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.25 }
            }
        }
        else_if = {
            limit = {
                check_key = { lhs = Building_$type$ value = 350 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 500 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 650 }
                    }
                    multiply_key = { lhs = $return$ value = 0.3 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.4 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.5 }
            }
        }
    }
    else = {
        set_key = { lhs = $return$ value = 0 }
    }
}
Infra_AISpendCheck_Industrial = {
    if = {
        limit = {
            always = yes
			[[cap]
                OR = {
                    NOT = { 
                       check_key = { lhs = Building_$type$ which = $cap$ } 
                    }
                   
                    NOT = { 
                       check_key = { lhs = BU_Prp$type$ value = 30 } 
                    }
                }
            ]
            check_key = { lhs = ProdU_Throughput value = 65 }
        }
        Infra_DoSpendAI_Industrial = {  type = $type$ return = $return$ }
    }
}

Infra_DoSpendAI_Industrial = {
	set_key = { lhs = Tmp_0 which = Building_$type$Up }
	set_key = { lhs = Tmp_7 which = Building_$type$Down }
	
	subtract_key = { lhs = Tmp_0 which = Tmp_7 } # how much the industry wants to expand vs shrink
    if = {
        limit = { #if wants to expand & it's profitable
            check_key = { lhs = Building_$type$Gross value = 0.001 }
            check_key = { lhs = Tmp_0 value = 0.01 }
        }
        set_key = { lhs = $return$ which = Tmp_0 } # Local Ai Willingness to Invest
        
        multiply_key = { lhs = $return$ which = pv_ce } # CE
        multiply_key = { lhs = $return$ value = 0.1 }
        
        #if = {
        #    limit = { 
        #        owner = { ai = yes }
        #    }
        #    multiply_key = { lhs = $return$ value = 0.4 } # because of industrial
        #}
        
        if = {
            limit = {
                is_capital = yes
            }
            multiply_key = { lhs = $return$ value = 5 }
        }
        else_if = {
            limit = {
                is_in_capital_area = yes
            }
            multiply_key = { lhs = $return$ value = 4 }
        }
        else_if = {
            limit = {
                NOT = { is_in_capital_area = yes }
            }
            multiply_key = { lhs = $return$ value = 0.5 }
        }

        set_key = { lhs = Tax_Tmp0 which = Tax_CostPropIndustrialRate }
        multiply_key = { lhs = Tax_Tmp0 value = 0.01 }
        change_key = { lhs = Tax_Tmp0 value = 1 }
        multiply_key = { lhs = $return$ which = Tax_Tmp0 }
        set_key = { lhs = Tax_Tmp0 value = 0 }
        
        trigger_switch = {
            on_trigger = has_province_flag 
            IndustrialInvestment6 = { multiply_key = { lhs = $return$ value = 0.005 } clr_province_flag = IndustrialInvestment6 }
            IndustrialInvestment8 = { multiply_key = { lhs = $return$ value = 0.003 } clr_province_flag = IndustrialInvestment8 }
        }
        
        
        if = { # reduce score by size -> prevents financial collapses
            limit = {
                check_key = { lhs = Building_$type$ value = 800 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 1200 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 1600 }
                    }
                    multiply_key = { lhs = $return$ value = 0.05 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.15 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.25 }
            }
        }
        else_if = {
            limit = {
                check_key = { lhs = Building_$type$ value = 350 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 500 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 650 }
                    }
                    multiply_key = { lhs = $return$ value = 0.3 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.4 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.5 }
            }
        }
    }
    else = {
        set_key = { lhs = $return$ value = 0 }
    }
}
Infra_AISpendCheck_Academic = {
    Infra_AI_SpendCheck_Academic_Helper = yes       #New scripted_effect to check for Academic Infrastructure thoughput. 
    if = {
        limit = {
            always = yes
			[[cap]              # cap does not check for academic it seems to me as there is no cap for academic. Where this scripted effect is called cap argument is not given
                OR = {
                    NOT = { 
                       check_key = { lhs = Building_$type$ which = $cap$ } 
                    }
                   
                    NOT = { 
                       check_key = { lhs = BU_Prp$type$ value = 30 } 
                    }
                }
            ]
            check_key = { lhs = Tmp_0 value = 65 }      #Don't invest in academic in a certain province if throughput is below 65
        }
        Infra_DoSpendAI_Academic = {  type = $type$ return = $return$ }
    }
    set_key = { lhs = Tmp_0 value = 0 }
}

Infra_AI_SpendCheck_Academic_Helper = {
    set_key = { lhs = Tmp_0 value = 0 }         #Set temporary key to zero first to prevent the check for it's value above to spit errors if the industry does not exist
	if = {
		limit = {
             is_key_equal = { lhs = Prod_S0 value = 30 }
		}
		change_key = { lhs = Tmp_0 which = Prod_S0Throughput }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S1 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S1Throughput }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S2 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S2Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S3 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S3Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S4 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S4Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S5 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S5Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S6 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S6Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S7 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S7Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S8 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S8Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S9 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S9Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S10 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S10Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S11 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S11Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S12 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S12Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S13 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S13Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S14 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S14Throughput }
	}
    else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S15 value = 30 }
		}
        change_key = { lhs = Tmp_0 which = Prod_S15Throughput }
	}
}

Infra_DoSpendAI_Academic = {
	set_key = { lhs = Tmp_0 which = Building_$type$Up }
	set_key = { lhs = Tmp_7 which = Building_$type$Down }
	
	subtract_key = { lhs = Tmp_0 which = Tmp_7 } # how much the industry wants to expand vs shrink
    if = {
        limit = { #if wants to expand and is profitable
            check_key = { lhs = Tmp_0 value = 0.01 }
            check_key = { lhs = Building_$type$Gross value = 0.001 }
        }
        set_key = { lhs = $return$ which = Tmp_0 } # Local Ai Willingness to Invest
        
        multiply_key = { lhs = $return$ which = pv_ce } # CE
        multiply_key = { lhs = $return$ value = 0.1 }
        
        if = {
            limit = { 
                owner = { ai = yes }
            }
            multiply_key = { lhs = $return$ value = 0.75 } #because of academic
        }
        
        if = {
            limit = {
                is_capital = yes
            }
            multiply_key = { lhs = $return$ value = 2 }
        }
        else_if = {
            limit = {
                any_province_in_state = {
                    is_capital_of = owner
                }
            }
            multiply_key = { lhs = $return$ value = 1.5 }
        }
        else_if = {
            limit = {
                NOT = { is_in_capital_area = yes }
            }
            multiply_key = { lhs = $return$ value = 0.5 }
        }

        set_key = { lhs = Tax_Tmp0 which = Tax_CostPropAcademicRate }
        multiply_key = { lhs = Tax_Tmp0 value = 0.01 }
        change_key = { lhs = Tax_Tmp0 value = 1 }
        multiply_key = { lhs = $return$ which = Tax_Tmp0 }
        set_key = { lhs = Tax_Tmp0 value = 0 }
        
        trigger_switch = {
            on_trigger = has_province_flag 
            AcademicInvestment6 = { multiply_key = { lhs = $return$ value = 0.006 } clr_province_flag = AcademicInvestment6 }
            AcademicInvestment8 = { multiply_key = { lhs = $return$ value = 0.004 } clr_province_flag = AcademicInvestment8 }
        }
        
        if = { # reduce score by size -> prevents financial collapses
            limit = {
                check_key = { lhs = Building_$type$ value = 800 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 1200 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 1600 }
                    }
                    multiply_key = { lhs = $return$ value = 0.05 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.15 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.25 }
            }
        }
        else_if = {
            limit = {
                check_key = { lhs = Building_$type$ value = 350 }
            }
            if = {
                limit = {
                    check_key = { lhs = Building_$type$ value = 500 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Building_$type$ value = 650 }
                    }
                    multiply_key = { lhs = $return$ value = 0.3 }
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.4 }
                }
            }
            else = {
                multiply_key = { lhs = $return$ value = 0.5 }
            }
        }
    }
    else = {
        set_key = { lhs = $return$ value = 0 }
    }
}
Do_InvestAI = {
    if = { 
        limit = {
            check_key = { lhs = $return$ value = 0.001 }
        }
           
        set_key = { lhs = Tmp_9 which = PREV } # set owner's residual budget
        set_key = { lhs = Tmp_8 which = Tmp_9 } 
        
            # use the proportionate residual amount corresponding to the original score
		multiply_key = { lhs = $score$ value = 0.01 }
        multiply_key = { lhs = Tmp_8 which = $score$ } # Tmp_8 is how much of the residual budget the property will try to spend
        
            # substract from owner's residual budget
        subtract_key = { lhs = Tmp_9 which = Tmp_8 }
        
            # re set owner's residual budget
        PREV = {
            set_key = { lhs = Tmp_9 which = PREV }
        }
            # add residual budget to the actual investment budget
        change_key =  { lhs = $return$ which = Tmp_8 }
        
        
        set_key = { lhs = Public_Tmp11 which = Building_$type$ }
        multiply_key = { lhs = Public_Tmp11 value = 0.25 } # maximum possible investment depending on building size
        if = {
            limit = { # if investment is higher than the cap 
                check_key = { lhs = $return$ which = Public_Tmp11 }
            }
                # save investment target
            set_key = { lhs = Tmp_8 which = $return$ }
            
                # set real investment to maximum limit
            set_key = { lhs = $return$ which = Public_Tmp11 }
            
                # re calculate residual budget for this case
            subtract_key = { lhs = Tmp_8 which = $return$ }
            
                # add it to total budget
            change_key = { lhs = Tmp_9 which = Tmp_8 }
            
                # set it to owner
            PREV = {
                set_key = { lhs = Tmp_9 which = PREV }
            }
        }
         if = { # if investment is higher than 75
            limit = {
				NOT = { is_year = 1450 }
                check_key = { lhs = $return$ value = 75 }
            }
                # re calculate residual budget
            set_key = { lhs = Tmp_0 which = $return$ }
            subtract_key = { lhs = Tmp_0 value = 75 }
            
                # add it to new residual
            change_key = { lhs = Tmp_9 which = Tmp_0 }
            
                # set it to owner
            PREV = {
                set_key = { lhs = Tmp_9 which = PREV }
            }
            
            set_key = { lhs = $return$ value = 75 }
        }
		else_if = { # if investment is higher than 100
            limit = {
				NOT = { is_year = 1550 }
                check_key = { lhs = $return$ value = 100 }
            }
                # re calculate residual budget
            set_key = { lhs = Tmp_0 which = $return$ }
            subtract_key = { lhs = Tmp_0 value = 100 }
            
                # add it to new residual
            change_key = { lhs = Tmp_9 which = Tmp_0 }
            
                # set it to owner
            PREV = {
                set_key = { lhs = Tmp_9 which = PREV }
            }
            
            set_key = { lhs = $return$ value = 100 }
        }
		else_if = { # if investment is higher than 150
            limit = {
				NOT = { is_year = 1650 }
                check_key = { lhs = $return$ value = 150 }
            }
                # re calculate residual budget
            set_key = { lhs = Tmp_0 which = $return$ }
            subtract_key = { lhs = Tmp_0 value = 150 }
            
                # add it to new residual
            change_key = { lhs = Tmp_9 which = Tmp_0 }
            
                # set it to owner
            PREV = {
                set_key = { lhs = Tmp_9 which = PREV }
            }
            
            set_key = { lhs = $return$ value = 150 }
        }
		else_if = { # if investment is higher than 200
            limit = {
				check_key = { lhs = $return$ value = 200 }
            }
                # re calculate residual budget
            set_key = { lhs = Tmp_0 which = $return$ }
            subtract_key = { lhs = Tmp_0 value = 200 }
            
                # add it to new residual
            change_key = { lhs = Tmp_9 which = Tmp_0 }
            
                # set it to owner
            PREV = {
                set_key = { lhs = Tmp_9 which = PREV }
            }
            
            set_key = { lhs = $return$ value = 200 }
        }
        
        ##Investment happens
        change_key = { lhs = Building_$type$Wealth which = $return$ }
            # Add to what has to be removed from the country treasury
        PREV = {
            set_key = { lhs = $return$ which = PREV }
            change_key = { lhs = Public_Tmp7 which = $return$ }
        }
        
        set_key = { lhs = Tmp_0 value = 100 }
        subtract_key = { lhs = Tmp_0 which = Prov_BULoy }
        multiply_key = { lhs = Tmp_0 which = Prov_BUPow }
        divide_key = { lhs = Tmp_0 value = 10000 }
        multiply_key = { lhs = $return$ which = Tmp_0 }
        multiply_key = { lhs = $return$ value = 0.1 }
        if = {
            limit = {
                owner = {
                    ruler_has_personality = midas_touched_personality
                }
            }
            multiply_key = { lhs = $return$ value = 1.5 }
        }
        change_key = { lhs = Building_$type$ShareBU which = $return$ }
    }
}
Do_Invest_Player = {
    if = { 
        limit = {
            check_key = { lhs = $return$ value = 0.001 }
        }
        
        set_province_flag = invested
        set_key = { lhs = Tmp_9 which = PREV } # set owner's residual budget
        set_key = { lhs = Tmp_8 which = Tmp_9 } 
        
            # use the proportionate residual amount corresponding to the original score
		multiply_key = { lhs = $score$ value = 0.01 }
        multiply_key = { lhs = Tmp_8 which = $score$ } # Tmp_8 is how much of the residual budget the property will try to spend
        
            # substract from owner's residual budget
        subtract_key = { lhs = Tmp_9 which = Tmp_8 }
        
            # re set owner's residual budget
        PREV = {
            set_key = { lhs = Tmp_9 which = PREV }
        }
            # add residual budget to the actual investment budget
        change_key =  { lhs = $return$ which = Tmp_8 }
        
        
        set_key = { lhs = Tmp_1 which = Building_$type$ }
        multiply_key = { lhs = Tmp_1 value = 0.22 } # maximum possible investment depending on building size
        if = {
            limit = { # if investment is higher than the cap 
                check_key = { lhs = $return$ which = Tmp_1 }
            }
                # save investment target
            set_key = { lhs = Tmp_8 which = $return$ }
            
                # set real investment to maximum limit
            set_key = { lhs = $return$ which = Tmp_1 }
            
                # re calculate residual budget for this case
            subtract_key = { lhs = Tmp_8 which = $return$ }
            
                # add it to total budget
            change_key = { lhs = Tmp_9 which = Tmp_8 }
            
                # set it to owner
            PREV = {
                set_key = { lhs = Tmp_9 which = PREV }
            }
        }
        if = { # if investment is higher than 75
            limit = {
				NOT = { is_year = 1450 }
                check_key = { lhs = $return$ value = 75 }
            }
                # re calculate residual budget
            set_key = { lhs = Tmp_0 which = $return$ }
            subtract_key = { lhs = Tmp_0 value = 75 }
            
                # add it to new residual
            change_key = { lhs = Tmp_9 which = Tmp_0 }
            
                # set it to owner
            PREV = {
                set_key = { lhs = Tmp_9 which = PREV }
            }
            
            set_key = { lhs = $return$ value = 75 }
        }
		else_if = { # if investment is higher than 
            limit = {
				NOT = { is_year = 1550 }
                check_key = { lhs = $return$ value = 100 }
            }
                # re calculate residual budget
            set_key = { lhs = Tmp_0 which = $return$ }
            subtract_key = { lhs = Tmp_0 value = 100 }
            
                # add it to new residual
            change_key = { lhs = Tmp_9 which = Tmp_0 }
            
                # set it to owner
            PREV = {
                set_key = { lhs = Tmp_9 which = PREV }
            }
            
            set_key = { lhs = $return$ value = 100 }
        }
		else_if = { # if investment is higher than 
            limit = {
				NOT = { is_year = 1650 }
                check_key = { lhs = $return$ value = 150 }
            }
                # re calculate residual budget
            set_key = { lhs = Tmp_0 which = $return$ }
            subtract_key = { lhs = Tmp_0 value = 150 }
            
                # add it to new residual
            change_key = { lhs = Tmp_9 which = Tmp_0 }
            
                # set it to owner
            PREV = {
                set_key = { lhs = Tmp_9 which = PREV }
            }
            
            set_key = { lhs = $return$ value = 150 }
        }
		else_if = { # if investment is higher than 75
            limit = {
				check_key = { lhs = $return$ value = 200 }
            }
                # re calculate residual budget
            set_key = { lhs = Tmp_0 which = $return$ }
            subtract_key = { lhs = Tmp_0 value = 200 }
            
                # add it to new residual
            change_key = { lhs = Tmp_9 which = Tmp_0 }
            
                # set it to owner
            PREV = {
                set_key = { lhs = Tmp_9 which = PREV }
            }
            
            set_key = { lhs = $return$ value = 200 }
        }
		
        
        ##Investment happens
        change_key = { lhs = Building_$type$Wealth which = $return$ }
            # Save investment for player
        
        set_key = { lhs = Building_$type$Invest which = $return$ } 
        AAA = {
            set_key = { lhs = $type$_InvestYear which = Current_Year }
            PREV = { set_key = { lhs = $type$_InvestYear which = PREV } }
        }
            # Add to what has to be removed from the country treasury
        PREV = {
            set_key = { lhs = $return$ which = PREV }
            change_key = { lhs = Public_Tmp7 which = $return$ }
        }
        
        set_key = { lhs = Tmp_0 value = 100 }
        subtract_key = { lhs = Tmp_0 which = Prov_BULoy }
        multiply_key = { lhs = Tmp_0 which = Prov_BUPow }
        divide_key = { lhs = Tmp_0 value = 10000 }
        multiply_key = { lhs = $return$ which = Tmp_0 }
        multiply_key = { lhs = $return$ value = 0.1 }
        
        change_key = { lhs = Building_$type$ShareBU which = $return$ }
    }
}