# Economy \ Trade \ Misc
# By KJH

TN_GetDmndBudgetAll = {
    ### NOTE, DirectBuy only supports up to FoodStep4
    TN_GetDmndBudget = {
        class = SF
        div = 6.5
    }
    TN_GetDmndBudget = {
        class = NM 
        div = 6.5
    }
    TN_GetDmndBudget = {
        class = RE
        div = 9
    }
    TN_GetDmndBudget = {
        class = NO 
        div = 17
    }
    TN_GetDmndBudget = {
        class = BG
        div = 20
    }
    TN_GetDmndBudget = {
        class = CL 
        div = 16
    }
    set_key = { lhs = SF_DirectBuy1 value = 0 }
    set_key = { lhs = SF_DirectFill1 value = 0 }
    set_key = { lhs = SF_DirectSpend1 value = 0 }
    set_key = { lhs = NM_DirectBuy1 value = 0 }
    set_key = { lhs = NM_DirectFill1 value = 0 }
    set_key = { lhs = NM_DirectSpend1 value = 0 }
    set_key = { lhs = NO_DirectBuy1 value = 0 }
    set_key = { lhs = NO_DirectBuyFromSF1 value = 0 }
    set_key = { lhs = NO_DirectBuyFromNM1 value = 0 }
    set_key = { lhs = NO_DirectFill1 value = 0 }
    set_key = { lhs = NO_DirectSpend1 value = 0 }
    set_key = { lhs = CL_DirectBuy1 value = 0 }
    set_key = { lhs = CL_DirectBuyFromSF1 value = 0 }
    set_key = { lhs = CL_DirectFill1 value = 0 }
    set_key = { lhs = CL_DirectSpend1 value = 0 }
    
    set_key = { lhs = SF_DirectBuy2 value = 0 }
    set_key = { lhs = SF_DirectFill2 value = 0 }
    set_key = { lhs = SF_DirectSpend2 value = 0 }
    set_key = { lhs = NM_DirectBuy2 value = 0 }
    set_key = { lhs = NM_DirectFill2 value = 0 }
    set_key = { lhs = NM_DirectSpend2 value = 0 }
    set_key = { lhs = NO_DirectBuy2 value = 0 }
    set_key = { lhs = NO_DirectBuyFromSF2 value = 0 }
    set_key = { lhs = NO_DirectBuyFromNM2 value = 0 }
    set_key = { lhs = NO_DirectFill2 value = 0 }
    set_key = { lhs = NO_DirectSpend2 value = 0 }
    set_key = { lhs = CL_DirectBuy2 value = 0 }
    set_key = { lhs = CL_DirectBuyFromSF2 value = 0 }
    set_key = { lhs = CL_DirectFill2 value = 0 }
    set_key = { lhs = CL_DirectSpend2 value = 0 }
    
    set_key = { lhs = SF_DirectBuy4 value = 0 }
    set_key = { lhs = SF_DirectFill4 value = 0 }
    set_key = { lhs = SF_DirectSpend4 value = 0 }
    set_key = { lhs = NM_DirectBuy4 value = 0 }
    set_key = { lhs = NM_DirectFill4 value = 0 }
    set_key = { lhs = NM_DirectSpend4 value = 0 }
    set_key = { lhs = NO_DirectBuy4 value = 0 }
    set_key = { lhs = NO_DirectBuyFromSF4 value = 0 }
    set_key = { lhs = NO_DirectBuyFromNM4 value = 0 }
    set_key = { lhs = NO_DirectFill4 value = 0 }
    set_key = { lhs = NO_DirectSpend4 value = 0 }
    set_key = { lhs = CL_DirectBuy4 value = 0 }
    set_key = { lhs = CL_DirectBuyFromSF4 value = 0 }
    set_key = { lhs = CL_DirectFill4 value = 0 }
    set_key = { lhs = CL_DirectSpend4 value = 0 }
    
    set_key = { lhs = SF_DirectBuy5 value = 0 }
    set_key = { lhs = SF_DirectFill5 value = 0 }
    set_key = { lhs = SF_DirectSpend5 value = 0 }
    set_key = { lhs = NM_DirectBuy5 value = 0 }
    set_key = { lhs = NM_DirectFill5 value = 0 }
    set_key = { lhs = NM_DirectSpend5 value = 0 }
    set_key = { lhs = NO_DirectBuy5 value = 0 }
    set_key = { lhs = NO_DirectBuyFromSF5 value = 0 }
    set_key = { lhs = NO_DirectBuyFromNM5 value = 0 }
    set_key = { lhs = NO_DirectFill5 value = 0 }
    set_key = { lhs = NO_DirectSpend5 value = 0 }
    set_key = { lhs = CL_DirectBuy5 value = 0 }
    set_key = { lhs = CL_DirectBuyFromSF5 value = 0 }
    set_key = { lhs = CL_DirectFill5 value = 0 }
    set_key = { lhs = CL_DirectSpend5 value = 0 }
    
    ### Calc and store food base price
    TN_DirectBuyPriceMath = { output=Modi_Tmp0 BasePrice=2.5 prod=1 elite=yes } ### BASE Good PRICE
    ### Calc and store salt base price
    TN_DirectBuyPriceMath = { output=Modi_Tmp1 BasePrice=3.5 prod=2 elite=yes } ### BASE Good PRICE
    ### Calc and store fiber base price
    TN_DirectBuyPriceMath = { output=Modi_Tmp2 BasePrice=2 prod=4 elite=yes } ### BASE Good PRICE
    ### Calc and store fuel base price
    TN_DirectBuyPriceMath = { output=Modi_Tmp3 BasePrice=2 prod=5 elite=yes } ### BASE Good PRICE
    ### Calc and store raw base price
    #TN_DirectBuyPriceMath = { output=Modi_Tmp3 BasePrice=2 prod=6 } ### BASE Good PRICE

    # Elites first, let them take what they need
    # Nomadic chiefs are not as extractive
    TN_GetDmndEliteDirect = { class = NO worker = NM good=1 BasePrice=Modi_Tmp0 DirectBuyPerc=1.0 Scalar100=NM_Ratio elite1 = NO }
    TN_GetDmndEliteDirect = { class = NO worker = NM good=2 BasePrice=Modi_Tmp1 DirectBuyPerc=1.0 Scalar100=NM_Ratio elite1 = NO }
    TN_GetDmndEliteDirect = { class = NO worker = NM good=4 BasePrice=Modi_Tmp2 DirectBuyPerc=1.0 Scalar100=NM_Ratio elite1 = NO }
    TN_GetDmndEliteDirect = { class = NO worker = NM good=5 BasePrice=Modi_Tmp3 DirectBuyPerc=1.0 Scalar100=NM_Ratio elite1 = NO }
    # Nobles on the other hand will use feudalism if present to its fullest extent
    TN_GetDmndEliteDirect = { class = NO worker = SF good=1 BasePrice=Modi_Tmp0 DirectBuyPerc=2.0 Scalar100=NO_RuralPowerScalar elite1 = NO elite2 = CL }
    TN_GetDmndEliteDirect = { class = NO worker = SF good=2 BasePrice=Modi_Tmp1 DirectBuyPerc=1.0 Scalar100=NO_RuralPowerScalar elite1 = NO elite2 = CL } ### salt is mostly exported
    TN_GetDmndEliteDirect = { class = NO worker = SF good=4 BasePrice=Modi_Tmp2 DirectBuyPerc=1.0 Scalar100=NO_RuralPowerScalar elite1 = NO elite2 = CL }
    TN_GetDmndEliteDirect = { class = NO worker = SF good=5 BasePrice=Modi_Tmp3 DirectBuyPerc=1.0 Scalar100=NO_RuralPowerScalar elite1 = NO elite2 = CL }
    #TN_GetDmndEliteDirect = { class = NO worker = SF good=6 BasePrice=Modi_Tmp3 DirectBuyPerc=1.0 Scalar100=NO_RuralPowerScalar elite1 = NO elite2 = CL }
    
    ### Only Tax empowered Clergy allow mass DirectBuy of peasant goods
    ### Clergy calc, to factor in Rights
    set_key = { lhs = Tmp_3 which = Prov_CLPow }
    multiply_key = { lhs = Tmp_3 value = 0.01 } # 0-100 scale -> 0-1 scale
    set_key = { lhs = Tmp_4 which = Tmp_3 }
    multiply_key = { lhs = Tmp_3 which = Tmp_3 }
    multiply_key = { lhs = Tmp_3 value = 0.666 }
    multiply_key = { lhs = Tmp_4 value = 0.333 }
    change_key = { lhs = Tmp_3 which = Tmp_4 }
	if = {
		limit = {
			owner = { # Charity dues exempt clergy
				NOT = { Rights_CLTax3HasGreater = yes }
			}
		}
		if = {
			limit = {
				owner = {
					Rights_CLTax1Has = yes
				}
			}
			set_key = { lhs = Tax_TmpBase value = 0.2 }
		}
		else = {
			set_key = { lhs = Tax_TmpBase value = 0.1 }
		}
		multiply_key = { lhs = Tax_TmpBase which = Tmp_3 } ## Semi-exponential clergy power
    }
    else = { ### without that, its just a 1% tithe
        set_key = { lhs = Tax_TmpBase which = CL_PrpResources }
        multiply_key = { lhs = Tax_TmpBase value = 0.01 } ## 100-1 scale 
		multiply_key = { lhs = Tax_TmpBase which = Tmp_3 } ## Semi-exponential clergy power
    }
    # overall Clergy will use their power, but the maximume extent of it is not as severe
    TN_GetDmndEliteDirect = { class = CL worker = SF good=1 BasePrice=Modi_Tmp0 DirectBuyPerc=1.5 Scalar=Tax_TmpBase elite1 = NO elite2 = CL }
    TN_GetDmndEliteDirect = { class = CL worker = SF good=2 BasePrice=Modi_Tmp1 DirectBuyPerc=1.0 Scalar=Tax_TmpBase elite1 = NO elite2 = CL } ## salt is exported
    TN_GetDmndEliteDirect = { class = CL worker = SF good=4 BasePrice=Modi_Tmp2 DirectBuyPerc=1.0 Scalar=Tax_TmpBase elite1 = NO elite2 = CL }
    TN_GetDmndEliteDirect = { class = CL worker = SF good=5 BasePrice=Modi_Tmp3 DirectBuyPerc=1.0 Scalar=Tax_TmpBase elite1 = NO elite2 = CL }
    #TN_GetDmndEliteDirect = { class = CL worker = SF good=6 BasePrice=Modi_Tmp3 DirectBuyPerc=1.0 Scalar=Tax_TmpBase elite1 = NO elite2 = CL }

    
    ### Calc and store food base price
    TN_DirectBuyPriceMath = { output=Modi_Tmp0 BasePrice=2.5 } ### BASE Good PRICE
    ### Calc and store salt base price
    TN_DirectBuyPriceMath = { output=Modi_Tmp1 BasePrice=3.5 } ### BASE Good PRICE
    ### Calc and store fiber base price
    TN_DirectBuyPriceMath = { output=Modi_Tmp2 BasePrice=2 } ### BASE Good PRICE
    ### Calc and store fuel base price
    TN_DirectBuyPriceMath = { output=Modi_Tmp3 BasePrice=2 } ### BASE Good PRICE
    # Then workers, who have to feed off the scraps left over
    # Peasants consume their food and their clothes, and a small amount of the rest
    TN_GetDmndWorkerDirect = { class = SF good=1 BasePrice=Modi_Tmp0 BaseDirectBuyPerc=0.85 MaxDirectBuyPerc=0.85 ScaleFactor=1.0 ScalingBuy=no elite1 = NO elite2 = CL }
    TN_GetDmndWorkerDirect = { class = SF good=2 BasePrice=Modi_Tmp1 BaseDirectBuyPerc=0.2 MaxDirectBuyPerc=0.2 ScaleFactor=1.0 ScalingBuy=no elite1 = NO elite2 = CL } ### a small amount of salt, enough for initial fulfil is consumed
    TN_GetDmndWorkerDirect = { class = SF good=4 BasePrice=Modi_Tmp2 BaseDirectBuyPerc=0.5 MaxDirectBuyPerc=1.0 ScaleFactor=0.3 elite1 = NO elite2 = CL } ### half their life, then export
    TN_GetDmndWorkerDirect = { class = SF good=5 BasePrice=Modi_Tmp3 BaseDirectBuyPerc=0.5 MaxDirectBuyPerc=1.0 ScaleFactor=0.3 elite1 = NO elite2 = CL } ###  a small amount of fuel, enough for initial fulfil is consumed
    #TN_GetDmndWorkerDirect = { class = SF good=6 BasePrice=Modi_Tmp4 BaseDirectBuyPerc=0.2 MaxDirectBuyPerc=0.2 ScaleFactor=1.0 ScalingBuy=no elite1 = NO elite2 = CL } ### a small amount of salt, enough for initial fulfil is consumed

    # Nomads try and consume all their goods as much as possible
    TN_GetDmndWorkerDirect = { class = NM good=1 BasePrice=Modi_Tmp0 BaseDirectBuyPerc=1.0 MaxDirectBuyPerc=2.0 ScaleFactor=0.75 elite1 = NO }
    TN_GetDmndWorkerDirect = { class = NM good=2 BasePrice=Modi_Tmp1 BaseDirectBuyPerc=1.0 MaxDirectBuyPerc=1.5 ScaleFactor=0.5 elite1 = NO }
    TN_GetDmndWorkerDirect = { class = NM good=4 BasePrice=Modi_Tmp2 BaseDirectBuyPerc=1.0 MaxDirectBuyPerc=2.0 ScaleFactor=0.75 elite1 = NO }
    TN_GetDmndWorkerDirect = { class = NM good=5 BasePrice=Modi_Tmp3 BaseDirectBuyPerc=1.0 MaxDirectBuyPerc=2.0 ScaleFactor=0.75 elite1 = NO }

    set_key = { lhs = Class_DirectBuy1 which = SF_DirectBuy1 }
    change_key = { lhs = Class_DirectBuy1 which = NO_DirectBuyFromSF1 }
    change_key = { lhs = Class_DirectBuy1 which = CL_DirectBuyFromSF1 }
    change_key = { lhs = Class_DirectBuy1 which = NM_DirectBuy1 }
    change_key = { lhs = Class_DirectBuy1 which = NO_DirectBuyFromNM1 }

    set_key = { lhs = Class_DirectBuy2 which = SF_DirectBuy2 }
    change_key = { lhs = Class_DirectBuy2 which = NO_DirectBuyFromSF2 }
    change_key = { lhs = Class_DirectBuy2 which = CL_DirectBuyFromSF2 }
    change_key = { lhs = Class_DirectBuy2 which = NM_DirectBuy2 }
    change_key = { lhs = Class_DirectBuy2 which = NO_DirectBuyFromNM2 }

    set_key = { lhs = Class_DirectBuy4 which = SF_DirectBuy4 }
    change_key = { lhs = Class_DirectBuy4 which = NO_DirectBuyFromSF4 }
    change_key = { lhs = Class_DirectBuy4 which = CL_DirectBuyFromSF4 }
    change_key = { lhs = Class_DirectBuy4 which = NM_DirectBuy4 }
    change_key = { lhs = Class_DirectBuy4 which = NO_DirectBuyFromNM4 }

    set_key = { lhs = Class_DirectBuy5 which = SF_DirectBuy5 }
    change_key = { lhs = Class_DirectBuy5 which = NO_DirectBuyFromSF5 }
    change_key = { lhs = Class_DirectBuy5 which = CL_DirectBuyFromSF5 }
    change_key = { lhs = Class_DirectBuy5 which = NM_DirectBuy5 }
    change_key = { lhs = Class_DirectBuy5 which = NO_DirectBuyFromNM5 }
    
    set_key = { lhs = Class_DirectSpend1 which = SF_DirectSpend1 }
    change_key = { lhs = Class_DirectSpend1 which = NM_DirectSpend1 }
    change_key = { lhs = Class_DirectSpend1 which = CL_DirectSpend1 }
    change_key = { lhs = Class_DirectSpend1 which = NO_DirectSpend1 }
    
    set_key = { lhs = Class_DirectSpend2 which = SF_DirectSpend2 }
    change_key = { lhs = Class_DirectSpend2 which = NM_DirectSpend2 }
    change_key = { lhs = Class_DirectSpend2 which = CL_DirectSpend2 }
    change_key = { lhs = Class_DirectSpend2 which = NO_DirectSpend2 }
    
    set_key = { lhs = Class_DirectSpend4 which = SF_DirectSpend4 }
    change_key = { lhs = Class_DirectSpend4 which = NM_DirectSpend4 }
    change_key = { lhs = Class_DirectSpend4 which = CL_DirectSpend4 }
    change_key = { lhs = Class_DirectSpend4 which = NO_DirectSpend4 }
    
    set_key = { lhs = Class_DirectSpend5 which = SF_DirectSpend5 }
    change_key = { lhs = Class_DirectSpend5 which = NM_DirectSpend5 }
    change_key = { lhs = Class_DirectSpend5 which = CL_DirectSpend5 }
    change_key = { lhs = Class_DirectSpend5 which = NO_DirectSpend5 }

    set_key = { lhs = Class_Produce1 which = SF_Produce1 }
    change_key = { lhs = Class_Produce1 which = NM_Produce1 }
    set_key = { lhs = Class_Produce2 which = SF_Produce2 }
    change_key = { lhs = Class_Produce2 which = NM_Produce2 }
    set_key = { lhs = Class_Produce4 which = SF_Produce4 }
    change_key = { lhs = Class_Produce4 which = NM_Produce4 }
    set_key = { lhs = Class_Produce5 which = SF_Produce5 }
    change_key = { lhs = Class_Produce5 which = NM_Produce5 }
}

TN_GetDmndAll = {
    TN_GetDmndBudgetAll = yes ## Get Budgets and DirectFulfil amounts
    # Get level of over/under consumption based on wealth
    TN_GetDmnd = {
        class = SF
        edu = 0.005 
        DirectBuy1 = yes DirectBuy2 = yes DirectBuy4 = yes DirectBuy5 = yes
        FoodMult=0.5 LifeMult=0.5 ComfortMult=0.5 LuxuryMult=0.333
        FoodStep1=0.9 LifeStep1=0.5
        FoodStep2=1.1 LifeStep2=1.0 ComfortStep2=0.4 LuxuryStep2=0.01
        FoodStep3=1.0 LifeStep3=1.0 ComfortStep3=0.65 LuxuryStep3=0.35
        FoodStep4=1.0 LifeStep4=1.0 ComfortStep4=0.75 LuxuryStep4=0.5
        FoodStep5=1.0 LifeStep5=1.0 ComfortStep5=1.0 LuxuryStep5=0.75
        ComfortStep6=1.0 LuxuryStep6=1.0
        ComfortStep7=2.0 LuxuryStep7=2.0
        ComfortStep8=2.0 LuxuryStep8=2.0
    }
    TN_GetDmnd = {
        class = NM 
        edu = 0.005 
        DirectBuy1 = yes DirectBuy2 = yes DirectBuy4 = yes DirectBuy5 = yes
        FoodMult=0.5 LifeMult=0.5 ComfortMult=0.25 LuxuryMult=0.25
        FoodStep1=0.9 LifeStep1=0.5
        FoodStep2=1.1 LifeStep2=1.0 ComfortStep2=0.4 LuxuryStep2=0.1
        FoodStep3=1.0 LifeStep3=1.0 ComfortStep3=0.6 LuxuryStep3=0.35
        FoodStep4=1.0 LifeStep4=1.0 ComfortStep4=0.75 LuxuryStep4=0.5
        FoodStep5=1.0 LifeStep5=1.0 ComfortStep5=1.0 LuxuryStep5=0.75
        ComfortStep6=1.0 LuxuryStep6=1.0
        ComfortStep7=1.0 LuxuryStep7=1.0
        ComfortStep8=2.0 LuxuryStep8=2.0
    }
    TN_GetDmnd = {
        class = RE 
        edu = 0.005 
        FoodMult=0.5 LifeMult=0.5 ComfortMult=0.5 LuxuryMult=0.333
        FoodStep1=1.0 LifeStep1=0.5
        FoodStep2=1.0 LifeStep2=1.0 ComfortStep2=0.4 LuxuryStep2=0.01
        FoodStep3=1.0 LifeStep3=1.0 ComfortStep3=0.6 LuxuryStep3=0.35
        FoodStep4=1.0 LifeStep4=1.0 ComfortStep4=0.75 LuxuryStep4=0.5
        FoodStep5=1.0 LifeStep5=1.0 ComfortStep5=1.0 LuxuryStep5=0.75
        ComfortStep6=1.0 LuxuryStep6=1.0
        ComfortStep7=1.0 LuxuryStep7=1.0
        ComfortStep8=2.0 LuxuryStep8=2.0
    }
    TN_GetDmnd = {
        class = NO 
        edu = 0.005 
        DirectBuy1 = yes DirectBuy2 = yes DirectBuy4 = yes DirectBuy5 = yes
        FoodMult=1.0 LifeMult=4.0 ComfortMult=10.0 LuxuryMult=20.0
        FoodStep1=1.0 LifeStep1=1.0
        FoodStep2=1.0 LifeStep2=0.5 ComfortStep2=0.5 LuxuryStep2=0.1
        FoodStep3=1.0 LifeStep3=0.5 ComfortStep3=0.65 LuxuryStep3=0.35
        FoodStep4=1.5 LifeStep4=0.5 ComfortStep4=0.75 LuxuryStep4=0.5
        FoodStep5=1.5 LifeStep5=0.5 ComfortStep5=0.9 LuxuryStep5=0.75
        ComfortStep6=1.0 LuxuryStep6=1.0
        ComfortStep7=1.0 LuxuryStep7=1.0
        ComfortStep8=2.0 LuxuryStep8=2.0
    }
    TN_GetDmnd = {
        class = BG 
        edu = 0.005 
        FoodMult=1.0 LifeMult=4.0 ComfortMult=10.0 LuxuryMult=20.0
        FoodStep1=1.0 LifeStep1=1.0
        FoodStep2=1.0 LifeStep2=0.5 ComfortStep2=0.5 LuxuryStep2=0.1
        FoodStep3=1.0 LifeStep3=0.5 ComfortStep3=0.65 LuxuryStep3=0.35
        FoodStep4=1.5 LifeStep4=0.5 ComfortStep4=0.75 LuxuryStep4=0.5
        FoodStep5=1.5 LifeStep5=0.5 ComfortStep5=0.9 LuxuryStep5=0.75
        ComfortStep6=1.0 LuxuryStep6=1.0
        ComfortStep7=1.0 LuxuryStep7=1.0
        ComfortStep8=2.0 LuxuryStep8=2.0
    }
    TN_GetDmnd = {
        class = CL 
        edu = 0.005 
        FoodMult=1.0 LifeMult=4.0 ComfortMult=10.0 LuxuryMult=10.0
        DirectBuy1 = yes DirectBuy2 = yes DirectBuy4 = yes DirectBuy5 = yes
        FoodStep1=1.0 LifeStep1=0.5
        FoodStep2=1.0 LifeStep2=0.5 ComfortStep2=0.5 LuxuryStep2=0.1
        FoodStep3=1.0 LifeStep3=0.5 ComfortStep3=0.65 LuxuryStep3=0.35
        FoodStep4=1.5 LifeStep4=0.5 ComfortStep4=0.75 LuxuryStep4=0.5
        FoodStep5=1.5 LifeStep5=0.5 ComfortStep5=0.9 LuxuryStep5=0.75
        ComfortStep6=1.0 LuxuryStep6=1.0
        ComfortStep7=1.0 LuxuryStep7=1.0
        ComfortStep8=2.0 LuxuryStep8=2.0
    }
}

TN_GetDmndBudget = {
    set_key = { lhs = $class$_FillFood value = 0 }
    set_key = { lhs = $class$_FillLife value = 0 }
    set_key = { lhs = $class$_FillLifeC value = 0 }
    set_key = { lhs = $class$_FillComfort value = 0 }
    set_key = { lhs = $class$_FillLuxury value = 0 }
    set_key = { lhs = $class$_FillKnowledge value = 0 }
    set_key = { lhs = $class$_Dole value = 0 }

    if = {
        limit = {
            check_key = { lhs = $class$_Total value = 0.001 }
            check_key = { lhs = $class$_Wealth value = 0.1 }
        }
		# How much a class is planning to spend
        set_key = { lhs = $class$_BudgetFulfil which = $class$_Wealth }
        divide_key = { lhs = $class$_BudgetFulfil value = $div$ }
		
    }
    else = {
        set_key = { lhs = $class$_BudgetFulfil value = 0 }
    }
}


TN_GetDmndWorkerDirect = {
    if = {
        limit = {
            check_key = { lhs = $class$_Produce$good$ value = 0.001 }
            check_key = { lhs = $class$_BudgetFulfil value = 0.1 }
        }
        ### Deduct what elite classes already bought
        set_key = { lhs = Tmp_4 which = $class$_Produce$good$ }
        [[elite1] subtract_key = { lhs = Tmp_4 which = $elite1$_DirectBuyFrom$class$$good$ } ]
        [[elite2] subtract_key = { lhs = Tmp_4 which = $elite2$_DirectBuyFrom$class$$good$ } ]
        [[elite3] subtract_key = { lhs = Tmp_4 which = $elite3$_DirectBuyFrom$class$$good$ } ]
        multiply_key = { lhs = Tmp_4 value = 0.95 } ### always leave 5% on the table
        ### The rest we can tap, as its our own produce
        if = {
            limit = { NOT = { check_key = { lhs = Tmp_4 value = 0.01 } } }
            set_key = { lhs = $class$_DirectBuy$good$ value = 0 }
            set_key = { lhs = $class$_DirectFill$good$ value = 0 }
        }
        else ={
            # How much 100% fulfilment will cost
            TN_GetDmndProd = { prod=$good$ class=$class$ return = Tmp_3 }

            ### Calc Direct Buy Perc
            set_key = { lhs = Tmp_5 which = Tmp_4 }
            divide_key = { lhs = Tmp_5 which = Tmp_3 }
            
            if = {
                limit = {
                    check_key = { lhs = Tmp_5 value = $BaseDirectBuyPerc$ } # if we cant?
                    [[ScalingBuy] always = $ScalingBuy$ ]
                }
                change_key = { lhs = Tmp_5 value = 0.01 }
                if = {
                    limit = {
                        check_key = { lhs = Tmp_5 value = $MaxDirectBuyPerc$ } # if we cant?
                    }
                    set_key = { lhs = Tmp_5 value = $MaxDirectBuyPerc$ }
                }
                subtract_key = { lhs = Tmp_5 value = $BaseDirectBuyPerc$ }

                set_key = { lhs = Tmp_6 value = $MaxDirectBuyPerc$ }
                subtract_key = { lhs = Tmp_6 value = $BaseDirectBuyPerc$ }
                
                divide_key = { lhs = Tmp_5 which = Tmp_6 }
                
                set_key = { lhs = Tmp_7 value = 100 }
                subtract_key = { lhs = Tmp_7 which = Prov_TRPow }
                multiply_key = { lhs = Tmp_7 value = 0.01 }
                multiply_key = { lhs = Tmp_7 value = $ScaleFactor$ }
                set_key = { lhs = Tmp_8 value = 1 }
                multiply_key = { lhs = Tmp_8 which = Prov_TRPow }
                multiply_key = { lhs = Tmp_8 value = 0.01 }
                change_key = { lhs = Tmp_8 which = Tmp_7 }
                multiply_key = { lhs = Tmp_5 which = Tmp_8 }

                change_key = { lhs = Tmp_5 value = $BaseDirectBuyPerc$ }
            }
            else = {
                set_key = { lhs = Tmp_5 value = $BaseDirectBuyPerc$ }
            }

            set_key = { lhs = Tmp_1 which = Tmp_3 }
            multiply_key = { lhs = Tmp_1 which = Tmp_5 } ### % of Good Demand
            ### Tmp_1 is now the total amount of goods we are demanded
            # Also how much will this cost
            set_key = { lhs = Tmp_2 which = Tmp_1 }
            multiply_key = { lhs = Tmp_2 which = $BasePrice$ } ### BASE Good PRICE
            ### Tmp_2 is now the value of these goods

            # First, can we afford this?
            if = {
                limit = {
                    check_key = { lhs = Tmp_2 which = $class$_BudgetFulfil } # if we cant?
                }
                # Bring Good demanded down, demand will be Wealth / BasePrice), aka Good for that value
                set_key = { lhs = Tmp_1 which = $class$_BudgetFulfil }
                divide_key = { lhs = Tmp_1 which = $BasePrice$ }
                ### make this our new Tmp_1, the total amount of food in our budget
            }

            set_key = { lhs = $class$_DirectBuy$good$ which = Tmp_1 }
            # Now to see how much we can direct eat
            if = {
                limit = {
                    check_key = { lhs = Tmp_4 which = Tmp_1 } # If we produce more than we need, then great, 100% of DirectBuy% is met. Thats our fulfil
                }
                ## Dont change DirectBuy, we can buy all of it
                set_key = { lhs = $class$_DirectFill$good$ which = Tmp_5 }
            }
            else = { # if we dont, then we will eat all of our produce
                set_key = { lhs = $class$_DirectBuy$good$ which = Tmp_4 }
                set_key = { lhs = $class$_DirectFill$good$ which = $class$_DirectBuy$good$ } # Fulfil will be what we can consume / how much we actually want at 1x
                divide_key = { lhs = $class$_DirectFill$good$ which = Tmp_3 }
            }

            # Consider this wealth spent, dont factor it in for the rest of demand
            set_key = { lhs = Tmp_2 which = $class$_DirectBuy$good$ }
            multiply_key = { lhs = Tmp_2 which = $BasePrice$ } ### BASE Good PRICE
            subtract_key = { lhs = $class$_BudgetFulfil which = Tmp_2 }
            change_key = { lhs = $class$_DirectSpend$good$ which = Tmp_2 }
        }
    }
}
TN_GetDmndEliteDirect = {
    if = {
        limit = {
            check_key = { lhs = $worker$_Produce$good$ value = 0.001 }
            check_key = { lhs = $class$_BudgetFulfil value = 0.1 }
        }

        ### How much produce can we actually tap, usually scaled down by a Scalar (100 being 100 scale)
        set_key = { lhs = Tmp_4 which = $worker$_Produce$good$ }
        [[Scalar100]
        if = {
            limit = {
                NOT = { check_key = { lhs = $Scalar100$ value = 100 } }
            }
            multiply_key = { lhs = Tmp_4 value = 0.01 } ### Overflow
            multiply_key = { lhs = Tmp_4 which = $Scalar100$ }
        }
        ]
        [[Scalar]
        if = {
            limit = {
                NOT = { check_key = { lhs = $Scalar$ value = 1.0 } }
            }
            multiply_key = { lhs = Tmp_4 which = $Scalar$ }
        }
        ]
        ### Still need to factor out what other elite classes already bought
        [[elite1] subtract_key = { lhs = Tmp_4 which = $elite1$_DirectBuyFrom$worker$$good$ } ]
        [[elite2] subtract_key = { lhs = Tmp_4 which = $elite2$_DirectBuyFrom$worker$$good$ } ]
        [[elite3] subtract_key = { lhs = Tmp_4 which = $elite3$_DirectBuyFrom$worker$$good$ } ]
        multiply_key = { lhs = Tmp_4 value = 0.95 } ### always leave 5% on the table
        if = {
            limit = { NOT = { check_key = { lhs = Tmp_4 value = 0.01 } } }
            set_key = { lhs = $class$_DirectBuyFrom$worker$$good$ value = 0 }
            set_key = { lhs = Tmp_5 value = 0 }
        }
        else = {
            set_key = { lhs = Tmp_0 value = $DirectBuyPerc$ }
            subtract_key = { lhs = Tmp_0 which = $class$_DirectFill$good$ } ### how much have we already fulfilled, factor that out. can be repeat demanded from multiple classes
            # How much 100% fulfilment will cost
            TN_GetDmndProd = { prod=$good$ class=$class$ return = Tmp_3 }
            set_key = { lhs = Tmp_1 which = Tmp_3 }
            multiply_key = { lhs = Tmp_1 which = Tmp_0 } ### % of Good Demand
            ### Tmp_1 is now the total amount of goods we are demanded
    
            # Also how much will this cost
            set_key = { lhs = Tmp_2 which = Tmp_1 }
            multiply_key = { lhs = Tmp_2 which = $BasePrice$ } ### BASE Good PRICE
            ### Tmp_2 is now the value of these goods
            
            set_key = { lhs = Tmp_6 which = $class$_BudgetFulfil }
            multiply_key = { lhs = Tmp_6 value = 0.65 } ### Leave a buffer
            # First, can we afford this?
            if = {
                limit = {
                    check_key = { lhs = Tmp_2 which = Tmp_6 } # if we cant?
                }
                # Bring Good demanded down, demand will be Wealth / BasePrice), aka Good for that value
                set_key = { lhs = Tmp_1 which = Tmp_6 }
                divide_key = { lhs = Tmp_1 which = $BasePrice$ }
                ### make this our new Tmp_1, the total amount of food in our budget
            }

            set_key = { lhs = $class$_DirectBuyFrom$worker$$good$ which = Tmp_1 } ### set it to Tmp_1, the total amount of food we can buy
            # Now to see how much we can direct eat, Tmp_5 is DirectFill here
            if = {
                limit = {
                    check_key = { lhs = Tmp_4 which = Tmp_1 } # If what we can access produces more than we need, then great, 100% of DirectBuy% is met. Thats our fulfil
                }
                ## Dont change DirectBuy, we can buy all of it
                set_key = { lhs = Tmp_5 which = Tmp_0 }
            }
            else = { # if we dont, then we will eat all of their produce we can access
                set_key = { lhs = $class$_DirectBuyFrom$worker$$good$ which = Tmp_4 }
                set_key = { lhs = Tmp_5 which = $class$_DirectBuyFrom$worker$$good$ } # Fulfil will be what we can consume / how much we actually want at 1x
                divide_key = { lhs = Tmp_5 which = Tmp_3 }
            }

            # Consider this wealth spent, dont factor it in for the rest of demand
            set_key = { lhs = Tmp_2 which = $class$_DirectBuyFrom$worker$$good$ }
            multiply_key = { lhs = Tmp_2 which = $BasePrice$ } ### BASE Good PRICE
            subtract_key = { lhs = $class$_BudgetFulfil which = Tmp_2 }
            change_key = { lhs = $class$_DirectSpend$good$ which = Tmp_2 }

            change_key = { lhs = $class$_DirectBuy$good$ which = $class$_DirectBuyFrom$worker$$good$ }
            change_key = { lhs = $class$_DirectFill$good$ which = Tmp_5 }
        }
    }
}
TN_GetDmndDirectHelper = {
    if = {
        limit = {
            check_key = { lhs = $DirectVar$ which = $StepVar$ } 
        }
        subtract_key = { lhs = $DirectVar$ which = $StepVar$ }
        set_key = { lhs = $StepVar$ value = 0 }
    }
    else = {
        subtract_key = { lhs = $StepVar$ which = $DirectVar$ }
        set_key = { lhs = $DirectVar$ value = 0 }
    }
}

TN_GetDmndStepHelper = {
    [[PrevBudget]
    subtract_key = { lhs = $PrevBudget$_BudgetFulfil which = Tmp_9 }
    set_key = { lhs = Tmp_9 value = 0 }

    change_key = { lhs = $PrevBudget$_FillFood which = Modi_Tmp0 } # Step,  Food %
    change_key = { lhs = $PrevBudget$_FillLife which = Modi_Tmp4 } # Step,  Life %
    change_key = { lhs = $PrevBudget$_FillComfort which = Modi_Tmp9 } # Step,  Comfort %
    change_key = { lhs = $PrevBudget$_FillLuxury which = Tax_Tmp4 } # Step,  Luxury %
    ]
    set_key = { lhs = Modi_Tmp0 value = 0 }
    set_key = { lhs = Modi_Tmp4 value = 0 }
    set_key = { lhs = Modi_Tmp9 value = 0 }
    set_key = { lhs = Tax_Tmp4 value = 0 }

    [[FoodStep]
    set_key = { lhs = Modi_Tmp0 value = $FoodStep$ } # Step, extra Food %
    multiply_key = { lhs = Modi_Tmp0 value = $FoodMult$ } # Apply class ramping
    TN_GetDmndDirectHelper = { StepVar=Modi_Tmp0 DirectVar=Modi_Tmp5 }
    set_key = { lhs = Tmp_8 which = Tmp_1 }
    multiply_key = { lhs = Tmp_8 which = Modi_Tmp0 }
    change_key = { lhs = Tmp_9 which = Tmp_8 }
    ]
    [[LifeStep]
    set_key = { lhs = Modi_Tmp1 value = $LifeStep$ } # Step, extra Life %
    multiply_key = { lhs = Modi_Tmp1 value = $LifeMult$ } # Apply class ramping
    TN_GetDmndDirectHelper = { StepVar=Modi_Tmp1 DirectVar=Modi_Tmp6 }
    set_key = { lhs = Modi_Tmp2 value = $LifeStep$ }
    multiply_key = { lhs = Modi_Tmp2 value = $LifeMult$ } # Apply class ramping
    TN_GetDmndDirectHelper = { StepVar=Modi_Tmp2 DirectVar=Modi_Tmp7 }
    set_key = { lhs = Modi_Tmp3 value = $LifeStep$ }
    multiply_key = { lhs = Modi_Tmp3 value = $LifeMult$ } # Apply class ramping
    TN_GetDmndDirectHelper = { StepVar=Modi_Tmp3 DirectVar=Modi_Tmp8 }
    set_key = { lhs = Tmp_8 which = Tmp_2 }
    multiply_key = { lhs = Tmp_8 which = Modi_Tmp1 }
    change_key = { lhs = Tmp_9 which = Tmp_8 }
    set_key = { lhs = Tmp_8 which = Public_Tmp1 }
    multiply_key = { lhs = Tmp_8 which = Modi_Tmp2 }
    change_key = { lhs = Tmp_9 which = Tmp_8 }
    set_key = { lhs = Tmp_8 which = Tmp_3 }
    multiply_key = { lhs = Tmp_8 which = Modi_Tmp3 }
    change_key = { lhs = Tmp_9 which = Tmp_8 }
    
    ## Calc how much DirectBuy has taken out
    set_key = { lhs = Tmp_0 which = Modi_Tmp1 }
    multiply_key = { lhs = Tmp_0 which = Tax_Tmp1 }
    set_key = { lhs = Modi_Tmp4 which = Tmp_0 }
    set_key = { lhs = Tmp_0 which = Modi_Tmp2 }
    multiply_key = { lhs = Tmp_0 which = Tax_Tmp2 }
    change_key = { lhs = Modi_Tmp4 which = Tmp_0 }
    set_key = { lhs = Tmp_0 which = Modi_Tmp3 }
    multiply_key = { lhs = Tmp_0 which = Tax_Tmp3 }
    change_key = { lhs = Modi_Tmp4 which = Tmp_0 }
    ]

    [[ComfortStep]
    set_key = { lhs = Modi_Tmp9 value = $ComfortStep$ }
    multiply_key = { lhs = Modi_Tmp9 value = $ComfortMult$ } # Apply class ramping
    set_key = { lhs = Tmp_8 which = Tmp_4 }
    change_key = { lhs = Tmp_8 which = Public_Tmp2 }
    change_key = { lhs = Tmp_8 which = Public_Tmp6 }
    multiply_key = { lhs = Tmp_8 which = Modi_Tmp9 } # Step, extra Comfort %
    change_key = { lhs = Tmp_9 which = Tmp_8 }
    ]
    [[LuxuryStep]
    set_key = { lhs = Tax_Tmp4 value = $LuxuryStep$ }
    multiply_key = { lhs = Tax_Tmp4 value = $LuxuryMult$ } # Apply class ramping
    set_key = { lhs = Tmp_8 which = Tmp_6 }
    change_key = { lhs = Tmp_8 which = Tmp_7 }
    change_key = { lhs = Tmp_8 which = Public_Tmp3 }
    change_key = { lhs = Tmp_8 which = Public_Tmp5 }
    multiply_key = { lhs = Tmp_8 which = Tax_Tmp4 } # Step, extra Luxury %
    change_key = { lhs = Tmp_9 which = Tmp_8 }
    ]
}

TN_GetDmndApplyBudgeting = {
    divide_key = { lhs = $class$_BudgetFulfil which = Tmp_9 }
    [[Food]
    if = {
        limit = { always = $Food$ }
        set_key = { lhs = Tmp_8 which = $class$_BudgetFulfil }
        multiply_key = { lhs = Tmp_8 which = Modi_Tmp0 } # Step, extra Food %
        change_key = { lhs = $class$_FillFood which = Tmp_8 }
    }
    ]
    [[Life]
    if = {
        limit = { always = $Life$ }
        set_key = { lhs = Tmp_8 which = $class$_BudgetFulfil }
        multiply_key = { lhs = Tmp_8 which = Modi_Tmp4 } # Step, extra Food %
        change_key = { lhs = $class$_FillLife which = Tmp_8 }
    }
    ]
    [[Comfort]
    if = {
        limit = { always = $Comfort$ }
        set_key = { lhs = Tmp_8 which = $class$_BudgetFulfil }
        multiply_key = { lhs = Tmp_8 which = Modi_Tmp9 } # Step, extra Food %
        change_key = { lhs = $class$_FillComfort which = Tmp_8 }
    }
    ]
    [[Luxury]
    if = {
        limit = { always = $Luxury$ }
        set_key = { lhs = Tmp_8 which = $class$_BudgetFulfil }
        multiply_key = { lhs = Tmp_8 which = Tax_Tmp4 } # Step, extra Food %
        change_key = { lhs = $class$_FillLuxury which = Tmp_8 }
    }
    ]
}

# Set intial value for 4 fulfillment variables
# Initial value represents how much they want to fill up
# Actual fulfillment is that multiplied by how much was actually fulfilled
TN_GetDmnd = {
    set_key = { lhs = $class$_FillFood value = 0 }
    set_key = { lhs = $class$_FillLife value = 0 }
    set_key = { lhs = $class$_FillComfort value = 0 }
    set_key = { lhs = $class$_FillLuxury value = 0 }
    if = {
        limit = {
            check_key = { lhs = $class$_BudgetFulfil value = 0.001 }
        }

        set_key = { lhs = Tmp_9 value = 0 }
		# How much 100% fulfillment will cost
        TN_GetDmndProd = { prod=1 class=$class$ return = Tmp_1 }
        TN_GetDmndProd = { prod=2 class=$class$ return = Tmp_2 }
        TN_GetDmndProd = { prod=4 class=$class$ return = Public_Tmp1 }
        TN_GetDmndProd = { prod=5 class=$class$ return = Tmp_3 }
        TN_GetDmndProd = { prod=6 class=$class$ return = Public_Tmp6 }
        TN_GetDmndProd = { prod=9 class=$class$ return = Tmp_6 }
        TN_GetDmndProd = { prod=10 class=$class$ return = Public_Tmp3 }
        TN_GetDmndProd = { prod=21 class=$class$ return = Tmp_4 }
        TN_GetDmndProd = { prod=23 class=$class$ return = Public_Tmp2 }
        TN_GetDmndProd = { prod=24 class=$class$ return = Public_Tmp5 }
        TN_GetDmndProd = { prod=25 class=$class$ return = Tmp_7 }

        ### Precalc what % of life each good fulfils
        set_key = { lhs = Tax_Tmp0 value = 0 }
        change_key = { lhs = Tax_Tmp0 which = Tmp_2 }
        change_key = { lhs = Tax_Tmp0 which = Public_Tmp1 }
        change_key = { lhs = Tax_Tmp0 which = Tmp_3 }
        set_key = { lhs = Tax_Tmp1 which = Tmp_2 }
        if = {
            limit = { check_key = { lhs = Tax_Tmp1 value = 0.001 } }
            divide_key = { lhs = Tax_Tmp1 which = Tax_Tmp0 }
        }
        set_key = { lhs = Tax_Tmp2 which = Public_Tmp1 }
        if = {
            limit = { check_key = { lhs = Tax_Tmp2 value = 0.001 } }
            divide_key = { lhs = Tax_Tmp2 which = Tax_Tmp0 }
        }
        set_key = { lhs = Tax_Tmp3 which = Tmp_3 }
        if = {
            limit = { check_key = { lhs = Tax_Tmp3 value = 0.001 } }
            divide_key = { lhs = Tax_Tmp3 which = Tax_Tmp0 }
        }
		
        multiply_key = { lhs = Tmp_1 which = TN_ProvPrc1 }
        multiply_key = { lhs = Tmp_2 which = TN_ProvPrc2 }
        multiply_key = { lhs = Public_Tmp1 which = TN_ProvPrc4 }
        multiply_key = { lhs = Tmp_3 which = TN_ProvPrc5 }
        multiply_key = { lhs = Public_Tmp6 which = TN_ProvPrc6 }
        multiply_key = { lhs = Tmp_6 which = TN_ProvPrc9 }
        multiply_key = { lhs = Public_Tmp3 which = TN_ProvPrc10 }
        multiply_key = { lhs = Tmp_4 which = TN_ProvPrc21 }
        multiply_key = { lhs = Public_Tmp2 which = TN_ProvPrc23 }
        multiply_key = { lhs = Public_Tmp5 which = TN_ProvPrc24 }
        multiply_key = { lhs = Tmp_7 which = TN_ProvPrc25 }

        set_key = { lhs = Modi_Tmp0 value = 0 }
        set_key = { lhs = Modi_Tmp4 value = 0 }
        set_key = { lhs = Modi_Tmp9 value = 0 }
        set_key = { lhs = Tax_Tmp4 value = 0 }
        set_key = { lhs = Modi_Tmp5 value = 0 }
        set_key = { lhs = Modi_Tmp6 value = 0  }
        set_key = { lhs = Modi_Tmp7 value = 0 }
        set_key = { lhs = Modi_Tmp8 value = 0 }
        # Load in Direct Fill values
        [[DirectBuy1]
        if = {
            limit = { always = $DirectBuy1$ }
            set_key = { lhs = Modi_Tmp5 which = $class$_DirectFill1 }
        } ]
        [[DirectBuy2]
        if = {
            limit = { always = $DirectBuy2$ }
            set_key = { lhs = Modi_Tmp6 which = $class$_DirectFill2 }
        } ]
        [[DirectBuy4]
        if = {
            limit = { always = $DirectBuy4$ }
            set_key = { lhs = Modi_Tmp7 which = $class$_DirectFill4 }
        } ]
        [[DirectBuy5]
        if = {
            limit = { always = $DirectBuy5$ }
            set_key = { lhs = Modi_Tmp8 which = $class$_DirectFill5 }
        } ]
		
		# What happens below is, classes calculate how much it would cost for each step of demand
		# Then, they subtract their budgete with that expected cost
		# If budget is still positive, move onto next step
		# If not, stop
        TN_GetDmndStepHelper = { FoodStep=$FoodStep1$ FoodMult=1.0 LifeStep=$LifeStep1$ LifeMult=1.0 }

        if = {
            limit = { 
                check_key = { lhs = $class$_BudgetFulfil which = Tmp_9 } # If budget > cost so far
            }
            TN_GetDmndStepHelper = { PrevBudget=$class$ FoodStep=$FoodStep2$ FoodMult=$FoodMult$ LifeStep=$LifeStep2$ LifeMult=$LifeMult$ ComfortStep=$ComfortStep2$ ComfortMult=$ComfortMult$ LuxuryStep=$LuxuryStep2$ LuxuryMult=$LuxuryMult$ }
            if = {
                limit = { 
                    check_key = { lhs = $class$_BudgetFulfil which = Tmp_9 } # If budget > cost so far
                }
                TN_GetDmndStepHelper = { PrevBudget=$class$ FoodStep=$FoodStep3$ FoodMult=$FoodMult$ LifeStep=$LifeStep3$ LifeMult=$LifeMult$ ComfortStep=$ComfortStep3$ ComfortMult=$ComfortMult$ LuxuryStep=$LuxuryStep3$ LuxuryMult=$LuxuryMult$ }

                if = {
                    limit = {
                        check_key = { lhs = $class$_BudgetFulfil which = Tmp_9 } # If budget > cost so far
                    }
                    TN_GetDmndStepHelper = { PrevBudget=$class$ FoodStep=$FoodStep4$ FoodMult=$FoodMult$ LifeStep=$LifeStep4$ LifeMult=$LifeMult$ ComfortStep=$ComfortStep4$ ComfortMult=$ComfortMult$ LuxuryStep=$LuxuryStep4$ LuxuryMult=$LuxuryMult$ }

                    if = {
                        limit = {
                            check_key = { lhs = $class$_BudgetFulfil which = Tmp_9 } # If budget > cost so far
                        }
                        TN_GetDmndStepHelper = { PrevBudget=$class$ FoodStep=$FoodStep5$ FoodMult=$FoodMult$ LifeStep=$LifeStep5$ LifeMult=$LifeMult$ ComfortStep=$ComfortStep5$ ComfortMult=$ComfortMult$ LuxuryStep=$LuxuryStep5$ LuxuryMult=$LuxuryMult$ }
                        if = {
                            limit = {
                                check_key = { lhs = $class$_BudgetFulfil which = Tmp_9 } # If budget > cost so far
                            }
                            TN_GetDmndStepHelper = { PrevBudget=$class$ ComfortStep=$ComfortStep6$ ComfortMult=$ComfortMult$ LuxuryStep=$LuxuryStep6$ LuxuryMult=$LuxuryMult$ }
                            if = {
                                limit = {
                                    check_key = { lhs = $class$_BudgetFulfil which = Tmp_9 } # If budget > cost so far
                                }
                                TN_GetDmndStepHelper = { PrevBudget=$class$ ComfortStep=$ComfortStep7$ ComfortMult=$ComfortMult$ LuxuryStep=$LuxuryStep7$ LuxuryMult=$LuxuryMult$ }
                                if = {
                                    limit = {
                                        check_key = { lhs = $class$_BudgetFulfil which = Tmp_9 } # If budget > cost so far
                                    }
                                    TN_GetDmndStepHelper = { PrevBudget=$class$ ComfortStep=$ComfortStep8$ ComfortMult=$ComfortMult$ LuxuryStep=$LuxuryStep8$ LuxuryMult=$LuxuryMult$ }
                                    if = {
                                        limit = {
                                            check_key = { lhs = $class$_BudgetFulfil which = Tmp_9 }
                                        }
                                        TN_GetDmndStepHelper = { PrevBudget=$class$ }
                                    }
                                    else = { ## reduce new demand to whats budgeted
                                        TN_GetDmndApplyBudgeting = { class=$class$ Comfort=yes Luxury=yes }
                                    }
                                }
                                else = { ## reduce new demand to whats budgeted
                                    TN_GetDmndApplyBudgeting = { class=$class$ Comfort=yes Luxury=yes }
                                }
                            }
                            else = { ## reduce new demand to whats budgeted
                                TN_GetDmndApplyBudgeting = { class=$class$ Comfort=yes Luxury=yes }
                            }
                        }
                        else = { ## reduce new demand to whats budgeted
                            TN_GetDmndApplyBudgeting = { class=$class$ Food=yes Life=yes Comfort=yes Luxury=yes }
                        }
                    }
                    else = { ## reduce new demand to whats budgeted
                        TN_GetDmndApplyBudgeting = { class=$class$ Food=yes Life=yes Comfort=yes Luxury=yes }
                    }
                }
                else = { ## reduce new demand to whats budgeted
                    TN_GetDmndApplyBudgeting = { class=$class$ Food=yes Life=yes Comfort=yes Luxury=yes }
                }
            }
            else = { ## reduce new demand to whats budgeted
                TN_GetDmndApplyBudgeting = { class=$class$ Food=yes Life=yes Comfort=yes Luxury=yes }
            }
        }
        else = { ## reduce new demand to whats budgeted
            TN_GetDmndApplyBudgeting = { class=$class$ Food=yes Life=yes }
        }
		
        if = {
            limit = {
                check_key = { lhs = $class$_FillLife value = 0.1 } # Without life, no need for knowledge
            }
            # Knowledge fulfillment is special in that it has its own budget
            set_key = { lhs = $class$_FillKnowledge which = $class$_Wealth }
            multiply_key = { lhs = $class$_FillKnowledge value = $edu$ }
            if = {
                limit = {
                    NOT = { check_key = { lhs = $class$_FillLife value = 1.0 } } # Without life, no need for knowledge
                }
                multiply_key = { lhs = $class$_FillKnowledge which = $class$_FillLife }
            }

            if = {
                limit = {
                    check_key = { lhs = TN_ProvPrc41 value = 10 }
                }
                multiply_key = { lhs = $class$_FillKnowledge value = 10 }
                divide_key = { lhs = $class$_FillKnowledge which = TN_ProvPrc41 }
            }
            
            TN_GetDmndProd = { prod=41 class=$class$ return = Tmp_0 }
            multiply_key = { lhs = Tmp_0 which = TN_ProvPrc41 }

            if = {
                limit = {
                    check_key = { lhs = Tmp_0 value = 0.001 }
                }
                divide_key = { lhs = $class$_FillKnowledge which = Tmp_0 }

                if = {
                    limit = {
                        check_key = { lhs = $class$_FillKnowledge value = 2 }
                    }
                    set_key = { lhs = $class$_FillKnowledge value = 2 }
                }
            }
            else = {
                set_key = { lhs = $class$_FillKnowledge value = 1 }
            }
            change_key = { lhs = $class$_FillKnowledge value = 0.01 }
        }
        else = {
            set_key = { lhs = $class$_FillKnowledge value = 0 }
        }
		
		change_key = { lhs = $class$_FillFood value = 0.01 }
		change_key = { lhs = $class$_FillLife value = 0.01 }
		change_key = { lhs = $class$_FillComfort value = 0.01 }
		change_key = { lhs = $class$_FillLuxury value = 0.01 }
		
		# Grain dole
		set_key = { lhs = Public_Tmp1 value = 1 }
        [[DirectBuy1]
        subtract_key = { lhs = Public_Tmp1 which = $class$_DirectFill1 }
        ]
        if = {
            limit = {
                NOT = {
                    check_key = { lhs = $class$_FillFood which = Public_Tmp1 }
                }
            }
            set_key = { lhs = $class$_Dole which = Public_Tmp1 }
            subtract_key = { lhs = $class$_Dole which = $class$_FillFood }

            if = {
                limit = {
                    check_key = { lhs = $class$_Dole which = TN_Dole }
                }
                set_key = { lhs = $class$_Dole which = TN_Dole }
            }

            change_key = { lhs = $class$_FillFood which = $class$_Dole }
            set_key = { lhs = $class$_DoleD which = $class$_Dole }
            multiply_key = { lhs = $class$_DoleD value = 100 }
        }

		set_key = { lhs = Public_Tmp1 value = 0 }
		set_key = { lhs = Public_Tmp2 value = 0 }
		set_key = { lhs = Public_Tmp3 value = 0 }
		set_key = { lhs = Public_Tmp4 value = 0 }
    }
}

# Effects below contain information as to how much of each tradegood each classes consume as a base

# Edit for new produce 
# Food
TN_GetDmndProd = {
    TN_GetDmnd$prod$ = { return = $return$ }
    multiply_key = { lhs = $return$ which = $class$_Total }
    multiply_key = { lhs = $return$ which = Modi_$class$Demand }
    multiply_key = { lhs = $return$ which = Modi_$class$Demand$prod$ }
	multiply_key = { lhs = $return$ which = Modi_ClassDemand }
	multiply_key = { lhs = $return$ which = Modi_ClassDemand$prod$ }
    if = {
        limit = {
            NOT = { check_key = { lhs = $return$ value = 0 } }
        }
        set_key = { lhs = $return$ value = 0 }
    }
}
TN_GetDmnd1 = {
    set_key = { lhs = $return$ value = 0.11 }
}
# Salt
TN_GetDmnd2 = {
    set_key = { lhs = $return$ value = 0.025 }
}
# Fibre
TN_GetDmnd4 = {
    set_key = { lhs = $return$ value = 0.027 }
}

# Fuel
TN_GetDmnd5 = {
    set_key = { lhs = $return$ value = 0.01 }
}
# Raw
TN_GetDmnd6 = {
    set_key = { lhs = $return$ value = 0.002 }
}

# Exotics
TN_GetDmnd9 = {
    set_key = { lhs = $return$ value = 0.02 }
}

# Timber
TN_GetDmnd10 = {
    set_key = { lhs = $return$ value = 0.004 }
}

# Consumer Product
TN_GetDmnd21 = {
    set_key = { lhs = $return$ value = 0.02 }
}

# Naval
TN_GetDmnd23 = {
    set_key = { lhs = $return$ value = 0.005 }
}
# Industrial
TN_GetDmnd24 = {
    set_key = { lhs = $return$ value = 0.01 }
}

# Luxury Product
TN_GetDmnd25 = {
    set_key = { lhs = $return$ value = 0.007 }
}

# Knowledge
TN_GetDmnd41 = {
    set_key = { lhs = $return$ value = 0.01 }
}

### Applied in SYS-API for perf
set_key = { lhs = LHMA value = 1 }
TN_GetDmndTemp = {
	Land_HeatingMonths = { Month=Jan Freeze=0 Cold=10 Norm=15 Warm=20 }
	Land_HeatingMonths = { Month=Feb Freeze=0 Cold=10 Norm=15 Warm=20 }
	Land_HeatingMonths = { Month=Mar Freeze=0 Cold=10 Norm=15 Warm=20 }
	Land_HeatingMonths = { Month=Apr Freeze=0 Cold=10 Norm=15 Warm=20 }
	Land_HeatingMonths = { Month=May Freeze=0 Cold=10 Norm=15 Warm=20 }
	Land_HeatingMonths = { Month=Jun Freeze=0 Cold=10 Norm=15 Warm=20 }
	Land_HeatingMonths = { Month=Jul Freeze=0 Cold=10 Norm=15 Warm=20 }
	Land_HeatingMonths = { Month=Aug Freeze=0 Cold=10 Norm=15 Warm=20 }
	Land_HeatingMonths = { Month=Sep Freeze=0 Cold=10 Norm=15 Warm=20 }
	Land_HeatingMonths = { Month=Oct Freeze=0 Cold=10 Norm=15 Warm=20 }
	Land_HeatingMonths = { Month=Nov Freeze=0 Cold=10 Norm=15 Warm=20 }
	Land_HeatingMonths = { Month=Dec Freeze=0 Cold=10 Norm=15 Warm=20 }
	
	multiply_key = { lhs = $return$ value = LHMA }
}

#	if = { # Lower than Norm
#		limit = {
#			NOT = { check_key = { lhs = Land_AvgTemp value = $Norm$ } }
#		}
#		if = {
#			limit = {
#				NOT = {
#					check_key = { lhs = Land_AvgTemp value = 0.1 }
#				}
#			}
#			multiply_key = { lhs = $return$ value = 2 }
#		}
#		else = {
#			set_key = { lhs = Tmp_5 value = $Norm$ }
#			subtract_key = { lhs = Tmp_5 which = Land_AvgTemp }
#
#			divide_key = { lhs = Tmp_5 value = $Norm$ }
#			#multiply_key = { lhs = Tmp_5 value = 0.75 }
#			change_key = { lhs = Tmp_5 value = 1 }
#			multiply_key = { lhs = $return$ which = Tmp_5 }
#
#			set_key = { lhs = Tmp_5 value = 0 }
#		}
#	}
#	else = {
#		if = {
#			limit = {
#				check_key = { lhs = Land_AvgTemp value = $Max$ }
#			}
#			multiply_key = { lhs = $return$ value = 0.2 }
#		}
#		else = {
#			set_key = { lhs = Tmp_5 which = Land_AvgTemp }
#			subtract_key = { lhs = Tmp_5 value = $Norm$ }
#			set_key = { lhs = Tmp_6 value = $Max$ }
#			subtract_key = { lhs = Tmp_6 value = $Norm$ }
#
#			divide_key = { lhs = Tmp_5 which = Tmp_6 }
#			
#			set_key = { lhs = Tmp_6 value = 1 }
#			subtract_key = { lhs = Tmp_6 which = Tmp_5 }
#			
#			multiply_key = { lhs = Tmp_6 value = 0.8 }
#			change_key = { lhs = Tmp_6 value = 0.2 }
#			multiply_key = { lhs = $return$ which = Tmp_6 }
#
#			set_key = { lhs = Tmp_5 value = 0 }
#			set_key = { lhs = Tmp_6 value = 0 }
#		}
#	}
#}