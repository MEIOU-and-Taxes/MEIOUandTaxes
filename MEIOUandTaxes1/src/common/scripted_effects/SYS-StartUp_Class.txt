StartUp_InitRural = {
	set_key = { lhs = SF_Total value = 100 }
	subtract_key = { lhs = SF_Total which = NM_Ratio }
	multiply_key = { lhs = SF_Total value = 0.01 }

	multiply_key = { lhs = SF_Total which = $pop$ }

	if = {
		limit = {
			is_capital = yes
			NOT = { check_key = { lhs = SF_Total value = 10 } }
			NOT = { check_key = { lhs = NM_Ratio value = 35 } }
		}
		set_key = { lhs = SF_Total value = 10 }
	}
	if = {
		limit = {
			check_key = { lhs = NM_Ratio value = 0.001 }
		}
		set_key = { lhs = NM_Total which = NM_Ratio }
		multiply_key = { lhs = NM_Total which = $pop$ }
		multiply_key = { lhs = NM_Total value = 0.01 }
	}
	else = {
		set_key = { lhs = NM_Total value = 0 }
	}
}

StartUp_InitUrban = {
	if = {
		limit = {
			check_key = { lhs = $pop$ value = 0.1 }
		}
		set_key = { lhs = RE_Total which = $pop$ }
	}
	else = {
		set_key = { lhs = $pop$ value = 0 }
	}
}

StartUp_InitUpperHelper = {
	if = {
		limit = {
			check_key = { lhs = $from$_Total value = 1 }
		}
		set_key = { lhs = Tmp_4 which = $from$_Total }
		multiply_key = { lhs = Tmp_4 value = $rate$ }
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 0.001 }
			}
			multiply_key = { lhs = Tmp_4 which = Tmp_0 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_1 value = 0.001 }
			}
			change_key = { lhs = Tmp_4 which = Tmp_1 }
		}
		change_key = { lhs = $return$ which = Tmp_4 }

		set_key = { lhs = Tmp_4 value = 0 }
	}
	set_key = { lhs = Tmp_0 value = 1 }
}
StartUp_InitUpperSubHelper = {
	if = {
		limit = {
			check_key = { lhs = $from$_Total value = 0.001 }
		}
		set_key = { lhs = Tmp_0 which = $from$_Total }
		divide_key = { lhs = Tmp_0 which = Tmp_2 }
		change_key = { lhs = Tmp_1 which = Tmp_0 }
	}
}

StartUp_InitUpper = {
	set_key = { lhs = Tmp_2 which = SF_Total }
	change_key = { lhs = Tmp_2 which = RE_Total }
	change_key = { lhs = Tmp_2 which = NM_Total }
	set_key = { lhs = Tmp_0 value = 1 }
	set_key = { lhs = Tmp_1 value = 0 }
	set_key = { lhs = NO_Total value = 0 }

	if = { # Blood
		limit = {
			OR = {
				isValidProv = no
				owner = {
					has_reform = Pol_Nobility1
					#is_key_equal = { lhs = Pol_Nobility value = 0 } 
				}
			}
		}
		StartUp_InitUpperHelper = {
			from = SF
			rate = 0.02
			return = NO_Total
		}
		StartUp_InitUpperHelper = {
			from = NM
			rate = 0.005
			return = NO_Total
		}
		StartUp_InitUpperHelper = {
			from = RE
			rate = 0.02
			return = NO_Total
		}
	}
	else_if = { # Possession
		limit = {
			owner = { 
				has_reform = Pol_Nobility2
				#is_key_equal = { lhs = Pol_Nobility value = 1 } 
			}
		}
		StartUp_InitUpperHelper = {
			from = SF
			rate = 0.02
			return = NO_Total
		}
		StartUp_InitUpperHelper = {
			from = NM
			rate = 0.005
			return = NO_Total
		}
		StartUp_InitUpperHelper = {
			from = RE
			rate = 0.02
			return = NO_Total
		}
	}
	else_if = { # Office
		limit = {
			owner = {
				has_reform = Pol_Nobility3
				#is_key_equal = { lhs = Pol_Nobility value = 2 } 
			}
		}
		set_key = { lhs = Tmp_0 which = Prov_BUPow }
		multiply_key = { lhs = Tmp_0 value = 0.005 }
		change_key = { lhs = Tmp_0 value = 1 }
		StartUp_InitUpperHelper = {
			from = SF
			rate = 0.01
			return = NO_Total
		}
		StartUp_InitUpperHelper = {
			from = NM
			rate = 0.005
			return = NO_Total
		}
		StartUp_InitUpperHelper = {
			from = RE
			rate = 0.01
			return = NO_Total
		}
	}
	else = { # None
		StartUp_InitUpperHelper = {
			from = SF
			rate = 0.005
			return = NO_Total
		}
		StartUp_InitUpperHelper = {
			from = NM
			rate = 0.005
			return = NO_Total
		}
		StartUp_InitUpperHelper = {
			from = RE
			rate = 0.005
			return = NO_Total
		}
	}
	if = {
		limit = {
			NOT = {
				check_key = { lhs = NO_Total value = 0.03 }
			}
		}
		set_key = { lhs = NO_Total value = 0.03 }
	}

	set_key = { lhs = Tmp_0 value = 1 }
	set_key = { lhs = Tmp_1 value = 0 }
	set_key = { lhs = CL_Total value = 0 }

	if = {
		limit = {
			isValidProv = yes
			owner = { Rights_CLHie1Has = yes }
		}
		StartUp_InitUpperHelper = {
			from = SF
			rate = 0.01
			return = CL_Total
		}
		StartUp_InitUpperHelper = {
			from = RE
			rate = 0.01
			return = CL_Total
		}
	}
	else_if = {
		limit = {
			isValidProv = yes
			owner = { Rights_CLHie2Has = yes }
		}
		StartUp_InitUpperHelper = {
			from = SF
			rate = 0.008
			return = CL_Total
		}
		StartUp_InitUpperHelper = {
			from = RE
			rate = 0.008
			return = CL_Total
		}
	}
	else = {
		StartUp_InitUpperHelper = {
			from = SF
			rate = 0.006
			return = CL_Total
		}
		StartUp_InitUpperHelper = {
			from = RE
			rate = 0.006
			return = CL_Total
		}
	}
	if = {
		limit = {
			NOT = {
				check_key = { lhs = CL_Total value = 0.04 }
			}
		}
		set_key = { lhs = CL_Total value = 0 }
	}

	set_key = { lhs = Tmp_0 value = 1 }
	set_key = { lhs = Tmp_1 value = 0 }
	set_key = { lhs = BG_Total value = 0 }

	trigger_switch = {
		on_trigger = has_province_flag

		TN_Minor = {
			change_key = { lhs = Tmp_1 value = 0.1 }
			if = {
				limit = {
					has_province_flag = TN_Port
				}
				change_key = { lhs = Tmp_1 value = 0.05 }
			}
		}
		TN_Important = {
			change_key = { lhs = Tmp_1 value = 0.2 }
			if = {
				limit = {
					has_province_flag = TN_Port
				}
				change_key = { lhs = Tmp_1 value = 0.05 }
			}
		}
		TN_Major = {
			change_key = { lhs = Tmp_1 value = 0.3 }
			if = {
				limit = {
					has_province_flag = TN_Port
				}
				change_key = { lhs = Tmp_1 value = 0.1 }
			}
		}
	}
	if = {
		limit = {
			NOT = { has_province_flag = TN_Minor }
			NOT = { has_province_flag = TN_Important }
			NOT = { has_province_flag = TN_Major }
			check_key = { lhs = RE_Total value = 1.5 }
		}
		change_key = { lhs = Tmp_1 value = 0.08 }
	}
	if = {
		limit = {
			OR = {
				province_id = 1402
				province_id = 1380
				province_id = 384
				province_id = 509
				province_id = 105
				province_id = 236
				province_id = 137
				province_id = 442
				province_id = 2745
				province_id = 3843
				province_id = 451
				province_id = 3213
				province_id = 445
				province_id = 3287
				province_id = 2257
				province_id = 396
				province_id = 398
				province_id = 431
				province_id = 1396
				province_id = 2869
				province_id = 350
				province_id = 2863
				province_id = 1533
				province_id = 5492
				province_id = 5494
				province_id = 710
				province_id = 670
				province_id = 145
				province_id = 2865
				province_id = 337
				province_id = 340
				province_id = 454
				province_id = 3292
				province_id = 4743
				province_id = 2254
				province_id = 699
				province_id = 1041
				province_id = 697
				province_id = 5469
				province_id = 2418
				province_id = 613
				province_id = 604
				province_id = 596
				province_id = 370
				province_id = 2612
				province_id = 138
				province_id = 3873
				province_id = 3383
				province_id = 3384
				province_id = 1437
				province_id = 2574
				province_id = 328
				province_id = 3395
				province_id = 3795
				province_id = 1299
				province_id = 2573
				province_id = 2274
				province_id = 2749
				province_id = 164
				province_id = 1425
				province_id = 154
				province_id = 2381
				province_id = 160
				province_id = 136
				province_id = 4034
				province_id = 3870
				province_id = 1320
				province_id = 3102
				province_id = 2114
				province_id = 2114
				province_id = 2713
				province_id = 3238
				province_id = 2510
				province_id = 5460
				province_id = 670
				province_id = 692
				province_id = 5435
				province_id = 2480
				province_id = 2613
				province_id = 1172
				province_id = 667
				province_id = 663
				province_id = 2083
				province_id = 1586
				province_id = 1177
				province_id = 82
				province_id = 976
				province_id = 63
				province_id = 1468
				province_id = 3233
				province_id = 2361
				province_id = 3892
				province_id = 1568
				province_id = 3041
				province_id = 1426
				province_id = 3781
				province_id = 156
				province_id = 146
				province_id = 320
				province_id = 419
				province_id = 3805
				province_id = 5075
				province_id = 5076
				province_id = 2227
				province_id = 405
				province_id = 4234
				province_id = 3094
				province_id = 5318
				province_id = 550
				province_id = 5242
				province_id = 3915
				province_id = 649
				province_id = 2097
				province_id = 617
				province_id = 1313
				province_id = 2635
				province_id = 1211
				province_id = 360
				province_id = 1213
				province_id = 1208
				province_id = 1574
				province_id = 3044
				province_id = 2650
				province_id = 2544
				province_id = 359
				province_id = 363
				province_id = 3709
				province_id = 1300
				province_id = 2318
				province_id = 2417
				province_id = 612
				province_id = 3226
				province_id = 3215
				province_id = 560
				province_id = 542
				province_id = 529
				province_id = 2716
				province_id = 2653
				province_id = 4097
				province_id = 460
				province_id = 379
				province_id = 83
				province_id = 1274
				province_id = 2436
				province_id = 73
				province_id = 81
				province_id = 134
				province_id = 268
				province_id = 3752
				province_id = 1359
				province_id = 2380
				province_id = 1350
				province_id = 110
				province_id = 125
				province_id = 2531
				province_id = 2856
				province_id = 2359
				province_id = 4006
				province_id = 1365
				province_id = 85
				province_id = 1372
				province_id = 245
				province_id = 248
				province_id = 375
				province_id = 373
				province_id = 53
				province_id = 1
				province_id = 16
				province_id = 6
				province_id = 2755
				province_id = 1357
				province_id = 1374
				province_id = 201
				province_id = 2514
				province_id = 196
				province_id = 845
				province_id = 843
				province_id = 842
				province_id = 3529
				province_id = 1553
				province_id = 1135
				province_id = 1132
				province_id = 2921
				province_id = 1546
				province_id = 2924
				province_id = 2790
				province_id = 2787
				province_id = 2888
				province_id = 1131
				province_id = 2919
				province_id = 3033
				province_id = 192
				province_id = 1131
				province_id = 1293
				province_id = 1292
				province_id = 1307
				province_id = 280
				province_id = 378
				province_id = 2551
				province_id = 5074
				province_id = 1755
				province_id = 325
				province_id = 2636
				province_id = 3167
				province_id = 2687
				province_id = 5316
				province_id = 2557
				province_id = 2694
				province_id = 3296
				province_id = 685
				province_id = 2252
				province_id = 672
				province_id = 601
				province_id = 2324
				province_id = 2395
				province_id = 2418
				province_id = 615
				province_id = 636
				province_id = 629
				province_id = 640
				province_id = 595
				province_id = 2828
				province_id = 627
				province_id = 641
				province_id = 638
				province_id = 3928
				province_id = 648
				province_id = 649
				province_id = 1228
				province_id = 5242
				province_id = 2904
				province_id = 2760
				province_id = 1561
				province_id = 2888
				province_id = 260
				province_id = 1550
				province_id = 1546
				province_id = 2921
				province_id = 1130
				province_id = 1114
				province_id = 2770
				province_id = 3204
				province_id = 5323
				province_id = 1117
				province_id = 5009
				province_id = 1495
				province_id = 1130
				province_id = 5008
				province_id = 2354
				province_id = 1079
				province_id = 457
				province_id = 410
				province_id = 44
				province_id = 45
				province_id = 2426
				province_id = 600
				province_id = 2216
				province_id = 1015
				province_id = 3164
				province_id = 223
				province_id = 1532
				province_id = 1522
				province_id = 2936
				province_id = 480
				province_id = 5045
				province_id = 343
				province_id = 1013
				province_id = 592
				province_id = 535
				province_id = 3157
				province_id = 4047
				province_id = 1199
				province_id = 1053
				province_id = 2272
				province_id = 680
				province_id = 2632
				province_id = 525
				province_id = 2706
				province_id = 519
				province_id = 447
				province_id = 429
				province_id = 662
				province_id = 660
				province_id = 2690
				province_id = 5341
				province_id = 3184
				province_id = 2689
				province_id = 2415
				province_id = 2201
				province_id = 2200
				province_id = 2410
				province_id = 2204
				province_id = 2645
				province_id = 2599
				province_id = 737
				province_id = 2461
				province_id = 2287
				province_id = 2284
				province_id = 2291
				province_id = 3943
				province_id = 2683
				province_id = 507
				province_id = 5304
				province_id = 541
				province_id = 3173
				province_id = 1190
				province_id = 3244
				province_id = 3242
				province_id = 4685
				province_id = 4680
				province_id = 4666
				province_id = 4794
				province_id = 2446
				province_id = 4649
				province_id = 4883
				province_id = 4604
				province_id = 5528
				province_id = 4878
				province_id = 4862
				province_id = 4869
				province_id = 3797
				province_id = 272
				province_id = 301
				province_id = 298
				province_id = 2377
				province_id = 131
				province_id = 1450
				province_id = 5728
				province_id = 158
				province_id = 5726
				province_id = 2236
				province_id = 259
				province_id = 256
				province_id = 2398
				province_id = 3768
				province_id = 321
				province_id = 2575
				province_id = 3392
				province_id = 418
				province_id = 426
				province_id = 417
				province_id = 4563
				province_id = 4058
				province_id = 324
				province_id = 5806
				province_id = 3772
			}
		}
		change_key = { lhs = Tmp_1 value = 0.15 }
	}
	if = {
		limit = {
			OR = {
				province_id = 1325
				province_id = 2373
				province_id = 4075
				province_id = 3876
				province_id = 1435
				province_id = 2334
				province_id = 176
				province_id = 846
				province_id = 3799
				province_id = 3874
				province_id = 356
				province_id = 402
				province_id = 2665
				province_id = 385
				province_id = 2272
				province_id = 2163
				province_id = 2113
				province_id = 577
				province_id = 451
				province_id = 5318
				province_id = 3226
				province_id = 414
				province_id = 3843
				province_id = 457
				province_id = 436
				province_id = 454
				province_id = 4035
				province_id = 2913
				province_id = 3237
				province_id = 2264
				province_id = 2355
				province_id = 2279
				province_id = 526
				province_id = 334
				province_id = 1497
				province_id = 1221
				province_id = 1554
				province_id = 1337
				province_id = 3311
				province_id = 2477
				province_id = 3811
				province_id = 425
				province_id = 2220
				province_id = 5273
				province_id = 3532
				province_id = 2642
				province_id = 2648
				province_id = 708
				province_id = 5376
				province_id = 735
				province_id = 2283
				province_id = 2682
				province_id = 549
				province_id = 559
				province_id = 3177
				province_id = 2627
				province_id = 2673
				province_id = 1176
				province_id = 2976
				province_id = 2974
				province_id = 2910
				province_id = 1112
				province_id = 2904
				province_id = 4795
				province_id = 2578
				province_id = 995
				province_id = 323
				province_id = 147
			}
		}
		change_key = { lhs = Tmp_1 value = 0.2 }
	}
	if = {
		limit = {
			OR = {
				province_id = 457
				province_id = 112
				province_id = 101
				province_id = 44
				province_id = 45
				province_id = 2163
				province_id = 3506
				province_id = 2263
				province_id = 2740
				province_id = 414
				province_id = 382
				province_id = 358
				province_id = 82
				province_id = 1006
				province_id = 2415
				province_id = 1497
				province_id = 1117
				province_id = 2113
				province_id = 1344
				province_id = 410
				province_id = 388
				province_id = 2272
				province_id = 2759
				province_id = 515
				province_id = 537
				province_id = 2121
				province_id = 3157
				province_id = 568
				province_id = 1053
				province_id = 416
				province_id = 558
				province_id = 1471
				province_id = 2696
				province_id = 1550
				province_id = 1187
				province_id = 309
				province_id = 2311
				province_id = 230
			}
		}
		change_key = { lhs = Tmp_1 value = 0.3 }
	}

	StartUp_InitUpperHelper = {
		from = RE
		rate = 0.003
		return = BG_Total
	}

	if = {
		limit = {
			OR = {
				province_id = 361
				province_id = 183
			}
		}
		multiply_key = { lhs = BG_Total value = 0.75 }
	}
	else_if = {
		limit = {
			OR = {
				province_id = 2150
				province_id = 1089
			}
		}
		multiply_key = { lhs = BG_Total value = 0.85 }
	}
	if = {
		limit = {
			OR = {
				continent = indian_continent
				continent = asia
				superregion = japan_superregion
				region = vietnam_region
			}
		}
		multiply_key = { lhs = BG_Total value = 1.2 }
	}

	if = {
		limit = {
			is_capital = yes
		}
		set_key = { lhs = Tmp_1 value = 0.2 }

		#StartUp_InitUpperHelper = {
		#	from = SF
		#	rate = 0
		#	return = BG_Total
		#}
	}
	if = {
		limit = {
			OR = {
				NOT = { check_key = { lhs = BG_Total value = 0.03 } }
				NOT = { check_key = { lhs = RE_Total value = 0.1 } }
			}
		}
		set_key = { lhs = BG_Total value = 0 }
	}
	
	set_key = { lhs = Tmp_0 value = 0 }
	set_key = { lhs = Tmp_1 value = 0 }
	
	set_key = { lhs = Tmp_1 value = 0 }
	StartUp_InitUpperSubHelper = { from = NO }
	StartUp_InitUpperSubHelper = { from = BG }
	StartUp_InitUpperSubHelper = { from = CL }
	set_key = { lhs = Tmp_0 value = 1 }
	subtract_key = { lhs = Tmp_0 which = Tmp_1 }
    multiply_key = { lhs = SF_Total which = Tmp_0 }
    multiply_key = { lhs = NM_Total which = Tmp_0 }
    multiply_key = { lhs = RE_Total which = Tmp_0 }
}
StartUp_CalcWealth = {
	set_key = { lhs = Public_Tmp1 which = SF_Total }
	set_key = { lhs = Public_Tmp2 which = NM_Total }
    set_key = { lhs = Public_Tmp3 which = RE_Total }
    set_key = { lhs = Public_Tmp4 which = NO_Total }
    set_key = { lhs = Public_Tmp5 which = CL_Total }
    set_key = { lhs = Public_Tmp6 which = BG_Total }

	# Peasants
    multiply_key = { lhs = Public_Tmp1 value = 4 } # Modify in constants.txt `INIT_WEALTH_PER_CAPITA_SF~value`
	if = {
		limit = {
			check_key = { lhs = SF_Total value = 5 }
		}
		change_key = { lhs = Public_Tmp1 value = 30 }
	}
	else = {
		change_key = { lhs = Public_Tmp1 value = 15 }
	}
			
	# Nomads
	multiply_key = { lhs = Public_Tmp2 value = 3 } # Modify in constants.txt `INIT_WEALTH_PER_CAPITA_NM~value`
	if = {
		limit = {
			check_key = { lhs = NM_Total value = 1 }
		}
		change_key = { lhs = Public_Tmp2 value = 10 }
	}

	# Residents
	if = {
		limit = {
			check_key = { lhs = RE_Total value = 100 }
		}
		subtract_key = { lhs = Public_Tmp3 value = 100 }
   		multiply_key = { lhs = Public_Tmp3 value = 10 }
		change_key = { lhs = Public_Tmp3 value = 1700 }
	}
	else = {
   		multiply_key = { lhs = Public_Tmp3 value = 16 } # Modify in constants.txt `INIT_WEALTH_PER_CAPITA_RE~value`
	}
	if = {
		limit = {
			check_key = { lhs = RE_Total value = 1 }
		}
		change_key = { lhs = Public_Tmp3 value = 50 }
	}

	# Nobles
	multiply_key = { lhs = Public_Tmp4 value = 240 } # Modify in constants.txt `INIT_WEALTH_PER_CAPITA_NO~value`

	# Clergy
    multiply_key = { lhs = Public_Tmp5 value = 160 } # Modify in constants.txt `INIT_WEALTH_PER_CAPITA_CL~value`

	# Burghers
    multiply_key = { lhs = Public_Tmp6 value = 500 } # Modify in constants.txt `INIT_WEALTH_PER_CAPITA_BG~value`
	
	# Balance multiplier?
    multiply_key = { lhs = Public_Tmp1 value = 1.15 } # Modify in constants.txt `INIT_WEALTH_ALL_CLASSES_BALANCE_MULTIPLIER~value`
    multiply_key = { lhs = Public_Tmp2 value = 1.15 } # Modify in constants.txt `INIT_WEALTH_ALL_CLASSES_BALANCE_MULTIPLIER~value`
    multiply_key = { lhs = Public_Tmp3 value = 1.15 } # Modify in constants.txt `INIT_WEALTH_ALL_CLASSES_BALANCE_MULTIPLIER~value`
    multiply_key = { lhs = Public_Tmp4 value = 1.15 } # Modify in constants.txt `INIT_WEALTH_ALL_CLASSES_BALANCE_MULTIPLIER~value`
    multiply_key = { lhs = Public_Tmp5 value = 1.15 } # Modify in constants.txt `INIT_WEALTH_ALL_CLASSES_BALANCE_MULTIPLIER~value`
    multiply_key = { lhs = Public_Tmp6 value = 1.15 } # Modify in constants.txt `INIT_WEALTH_ALL_CLASSES_BALANCE_MULTIPLIER~value`
	
	# Nomad balancing for peasants and clergy
	set_key = { lhs = Tmp_2 value = 100 }
	subtract_key = { lhs = Tmp_2 which = NM_Ratio }
	multiply_key = { lhs = Tmp_2 value = 0.005 }
	change_key = { lhs = Tmp_2 value = 0.5 }
	multiply_key = { lhs = Public_Tmp1 which = Tmp_2 }
	multiply_key = { lhs = Public_Tmp5 which = Tmp_2 }
}

StartUp_SetWealth = {
	if = {
		limit = {
			always = $override$
		}
		set_key = { lhs = SF_Wealth which = Public_Tmp1 }
		set_key = { lhs = NM_Wealth which = Public_Tmp2 }
		set_key = { lhs = RE_Wealth which = Public_Tmp3 }
		set_key = { lhs = NO_Wealth which = Public_Tmp4 }
		set_key = { lhs = CL_Wealth which = Public_Tmp5 }
		set_key = { lhs = BG_Wealth which = Public_Tmp6 }
	}
	else = {
		StartUp_SetWealthHelper = { class=SF TmpVar=Public_Tmp1 weight1=$weight1$ weight2=$weight2$ }
		StartUp_SetWealthHelper = { class=NM TmpVar=Public_Tmp2 weight1=$weight1$ weight2=$weight2$ }
		StartUp_SetWealthHelper = { class=RE TmpVar=Public_Tmp3 weight1=$weight1$ weight2=$weight2$ }
		StartUp_SetWealthHelper = { class=NO TmpVar=Public_Tmp4 weight1=$weight1$ weight2=$weight2$ }
		StartUp_SetWealthHelper = { class=CL TmpVar=Public_Tmp5 weight1=$weight1$ weight2=$weight2$ }
		StartUp_SetWealthHelper = { class=BG TmpVar=Public_Tmp6 weight1=$weight1$ weight2=$weight2$ }
	}
}

StartUp_SetWealthHelper = {
	set_key = { lhs = Tmp_2 which = $class$_Wealth }
	multiply_key = { lhs = Tmp_2 value = $weight1$ }
	change_key = { lhs = Tmp_2 which = $TmpVar$ }
	change_key = { lhs = Tmp_2 value = 0.1 }
	divide_key = { lhs = Tmp_2 value = $weight2$ } # heavily weight current wealth
}

StartUp_InitClass = {
	if = {
		limit = {
			OR = {
				region = canada_region
				region = great_lakes_region
				region = northeast_america_region
				region = southeast_america_region
				region = mississippi_region
				region = great_plains_region
				region = cascadia_region
				region = california_region
				region = texas_region
				region = maritimes_region
				region = zacatecas_region
				area = nicaragua_area
				area = honduras_area
				area = eastern_llanos
				area = western_llanos
				area = panama_area
				region = guyana_region
				region = carribeans_region
				region = brazil_region
				region = la_plata_region
				region = chile_region
				region = papua_region
				region = australia_region
				province_id = 831
				province_id = 2165
			}
			NOT = { area = jalisco_area }
		}
		if = {
			limit = {
				OR = {
					region = great_plains_region
					area = hudson_bay_area
					region = california_region
					region = cascadia_region
					region = carribeans_region
					area = cote_nord_area
					area = newfoundland_area
					area = lower_acadia_area
					area = upper_guyana_area
					region = brazil_region
					region = la_plata_region
					region = australia_region
					area = southern_chile_area
					area = central_chile_area
					area = rio_grande_area
					area = northeast_mexico_area
					area = sonora_area
					province_id = 881
					province_id = 882
					province_id = 880
				}
				NOT = { area = amazon_area }
				NOT = { area = guapore_area }
				NOT = { area = hispaniola_area }
				NOT = { area = grao_para_area }
				NOT = { province_id = 1483 }
				NOT = { province_id = 3492 }
				NOT = { province_id = 2346 }
				NOT = { province_id = 1469 }
				NOT = { area = inland_australia_area } # Evidence of agricultural practice for Aboriginals
			}
			set_key = { lhs = NM_Ratio value = 100 }
		}
		else_if = {
			limit = {
				OR = {
					area = amazon_area
					area = guapore_area
				}
			}
			set_key = { lhs = NM_Ratio value = 20 }
		}
		else_if = {
			limit = {
				area = zacatecas_area
			}
			set_key = { lhs = NM_Ratio value = 65 }
		}
		else = {
			set_key = { lhs = NM_Ratio value = 40 }
		}
	}
	change_key = { lhs = starting_rural_pop value = 0.1 }
	if = {
		limit = {
			NOT = { check_key = { lhs = starting_rural_pop value = 5 } }
		}
		set_key = { lhs = starting_rural_pop value = 5 }
	}
	
	StartUp_InitRural = {
		pop = starting_rural_pop
	}
	if = {
		limit = {
			check_key = { lhs = SF_Total value = 1 }
			NOT = { check_key = { lhs = SF_Total value = 4 } }
			check_key = { lhs = NM_Total value = 16 }
		}
		set_key = { lhs = SF_Total value = 4 }
	}
	else_if = {
		limit = {
			NOT = { check_key = { lhs = SF_Total value = 2 } }
			check_key = { lhs = NM_Total value = 2 }
		}
		change_key = { lhs = NM_Total which = SF_Total }
		set_key = { lhs = NM_Ratio value = 100 }
		set_key = { lhs = SF_Total value = 0 }
	}
	if = {
		limit = {
			NOT = { check_key = { lhs = SF_Total value = 4 } }
			check_key = { lhs = SF_Total value = 0.01 }
		}
		set_key = { lhs = SF_Total value = 4 }
	}
	if = {
		limit = {
			check_key = { lhs = NM_Total value = 0.01 }
			NOT = { check_key = { lhs = NM_Total value = 3 } }
		}
		set_key = { lhs = NM_Total value = 3 }
	}

	set_key = { lhs = Tmp_0 which = SF_Total }

	if = {
		limit = {
			is_capital = yes
		}
		multiply_key = { lhs = Tmp_0 value = 0.02 }
		change_key = { lhs = Tmp_0 value = 0.1 }
	}
	else_if = {
		limit = {
			OR = {
				is_city = yes
				is_colony = yes
			}
		}
		multiply_key = { lhs = Tmp_0 value = 0.01 }
	}
	else = {
		set_key = { lhs = Tmp_0 value = 0 }
	}

	if = {
		limit = {
			check_key = { lhs = Tmp_0 value = 1 }
		}
		set_key = { lhs = Tmp_0 value = 1 }
	}

	if = {
		limit = {
			check_key = { lhs = Tmp_0 value = 0.001 }
		}
		POP_GetRandomRange = {
			to = 0.1 from = 0
			return = Tmp_1
		}
	}
	change_key = { lhs = Tmp_0 which = Tmp_1 }

	change_key = { lhs = Tmp_0 which = starting_urban_pop }

	if = {
		limit = {
			NOT = {
				check_key = { lhs = Tmp_0 value = 1.1 }
			}
		}
		set_key = { lhs = Tmp_0 value = 0 }
	}
	else_if = {
		limit = {
			NOT = {
				check_key = { lhs = Tmp_0 value = 2.5 }
			}
		}
		set_key = { lhs = Tmp_0 value = 2.5 }
	}

	StartUp_InitUrban = {
		pop = Tmp_0
	}
	if = {
		limit = {
			NOT = { check_key = { lhs = RE_Total value = 1 } }
		}
		set_key = { lhs = RE_Total value = 0 }
	}

	set_key = { lhs = Tmp_0 value = 0 }
	set_key = { lhs = Tmp_1 value = 0 }

	StartUp_InitUpper = yes
	
	POP_SetClass = yes

	StartUp_CalcWealth = yes
	StartUp_SetWealth = { override = yes weight1=1 weight2=1 }

	set_key = { lhs = SF_MPPerc value = 10 }
	if = {
		limit = {
			is_capital = yes
			check_key = { lhs = SF_Total value = 4 }
		}
		set_key = { lhs = Tmp_9 value = 3 }
		divide_key = { lhs = Tmp_9 which = SF_Total }
		multiply_key = { lhs = Tmp_9 value = 100 }
		change_key = { lhs = SF_MPPerc which = Tmp_9 }
	}
	set_key = { lhs = NM_MPPerc value = 20 }
	set_key = { lhs = RE_MPPerc value = 10 }
	set_key = { lhs = NO_MPPerc value = 25 }
	set_key = { lhs = BG_MPPerc value = 10 }
	set_key = { lhs = CL_MPPerc value = 10 }

	set_key = { lhs = starting_rural_pop value = 0 }
	set_key = { lhs = starting_rural_pop_1850 value = 0 }
	set_key = { lhs = starting_urban_pop value = 0 }
	set_key = { lhs = starting_urban_pop_1850 value = 0 }
}