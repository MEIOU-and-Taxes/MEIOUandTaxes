Dev_ScaleDown = {
    if = {
        limit = {
			check_key = { lhs = $return$ value = 1 }
		}
		set_key = { lhs = Tmp_1 which = $return$ }
		divide_key = { lhs = Tmp_1 value = 60 }
		if = {
			limit = {
				check_key = { lhs = Tmp_1 value = 1 }
			}
			set_key = { lhs = Tmp_1 value = 1 }
		}
		multiply_key = { lhs = Tmp_1 which = Tmp_1 }
		set_key = { lhs = Tmp_0 value = 1 }
		subtract_key = { lhs = Tmp_0 which = Tmp_1 }
		multiply_key = { lhs = Tmp_0 value = 0.5 }
		change_key = { lhs = Tmp_0 value = 0.5 }
		multiply_key = { lhs = $return$ which = Tmp_0 }
		
		set_key = { lhs = Tmp_1 which = $return$ }
		divide_key = { lhs = Tmp_1 value = 120 }
		if = {
			limit = {
				check_key = { lhs = Tmp_1 value = 1 }
			}
			set_key = { lhs = Tmp_1 value = 1 }
		}
		multiply_key = { lhs = Tmp_1 which = Tmp_1 }
		set_key = { lhs = Tmp_0 value = 1 }
		subtract_key = { lhs = Tmp_0 which = Tmp_1 }
		multiply_key = { lhs = Tmp_0 value = 0.5 }
		change_key = { lhs = Tmp_0 value = 0.5 }
		multiply_key = { lhs = $return$ which = Tmp_0 }
		
		set_key = { lhs = Tmp_1 which = $return$ }
		divide_key = { lhs = Tmp_1 value = 240 }
		if = {
			limit = {
				check_key = { lhs = Tmp_1 value = 1 }
			}
			set_key = { lhs = Tmp_1 value = 1 }
		}
		multiply_key = { lhs = Tmp_1 which = Tmp_1 }
		set_key = { lhs = Tmp_0 value = 1 }
		subtract_key = { lhs = Tmp_0 which = Tmp_1 }
		multiply_key = { lhs = Tmp_0 value = 0.5 }
		change_key = { lhs = Tmp_0 value = 0.5 }
		multiply_key = { lhs = $return$ which = Tmp_0 }
		
		set_key = { lhs = Tmp_1 which = $return$ }
		divide_key = { lhs = Tmp_1 value = 500 }
		if = {
			limit = {
				check_key = { lhs = Tmp_1 value = 1 }
			}
			set_key = { lhs = Tmp_1 value = 1 }
		}
		multiply_key = { lhs = Tmp_1 which = Tmp_1 }
		set_key = { lhs = Tmp_0 value = 1 }
		subtract_key = { lhs = Tmp_0 which = Tmp_1 }
		multiply_key = { lhs = Tmp_0 value = 0.5 }
		change_key = { lhs = Tmp_0 value = 0.5 }
		multiply_key = { lhs = $return$ which = Tmp_0 }
	}
}

Dev_DoUncolonised = {
    if = {
        limit = {
            NOT = {
                check_key = { lhs = Dev_Rural value = 1 }
            }
        }
        set_key = { lhs = Dev_Rural value = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_key = { lhs = Dev_Notables value = 0 }
            }
        }
        set_key = { lhs = Dev_Notables value = 0 }
    }
    if = {
        limit = {
            NOT = {
                check_key = { lhs = Dev_Urban value = 0 }
            }
        }
        set_key = { lhs = Dev_Urban value = 0 }
    }

    set_key = { lhs = Dev_Total which = Dev_Notables }
    change_key = { lhs = Dev_Total which = Dev_Urban }
    change_key = { lhs = Dev_Total which = Dev_Rural }

	Dev_Set = { inp = Dev_Notables type = base_tax }
	Dev_Set = { inp = Dev_Urban type = base_production }
	Dev_Set = { inp = Dev_Rural type = base_manpower }
}

Dev_DoMain = {
    Dev_GetNotables = { return = Public_Tmp1 }
    Dev_GetUrban = { return = Public_Tmp2 }
    Dev_GetRural = { return = Public_Tmp3 }

    if = {
        limit = { check_key = { lhs = Public_Tmp1 value = 0.001 } }
        divide_key = { lhs = Public_Tmp1 value = 14 }
    }
    if = {
        limit = { check_key = { lhs = Public_Tmp2 value = 0.001 } }
        divide_key = { lhs = Public_Tmp2 value = 14 }
    }
    if = {
        limit = { check_key = { lhs = Public_Tmp3 value = 0.001 } }
        divide_key = { lhs = Public_Tmp3 value = 14 }
    }
	
	Dev_ScaleDown = { return=Public_Tmp1 }
	Dev_ScaleDown = { return=Public_Tmp2 }
	Dev_ScaleDown = { return=Public_Tmp3 }
	
	#Merges elite into urban
    #change_key = { lhs = Public_Tmp2 which = Public_Tmp1 }
    #set_key = { lhs = Public_Tmp1 value = 0 }

    if = {
        limit = {
			always = $iterate$
		}
		multiply_key = { lhs = Dev_Notables value = 9 }
		multiply_key = { lhs = Dev_Urban value = 9 }
		multiply_key = { lhs = Dev_Rural value = 9 }

		change_key = { lhs = Dev_Notables which = Public_Tmp1 }
		change_key = { lhs = Dev_Urban which = Public_Tmp2 }
		change_key = { lhs = Dev_Rural which = Public_Tmp3 }

		divide_key = { lhs = Dev_Notables value = 10 }
		divide_key = { lhs = Dev_Urban value = 10 }
		divide_key = { lhs = Dev_Rural value = 10 }
	}
	else = {
		set_key = { lhs = Dev_Notables which = Public_Tmp1 }
		set_key = { lhs = Dev_Urban which = Public_Tmp2 }
		set_key = { lhs = Dev_Rural which = Public_Tmp3 }
	}

    change_key = { lhs = Dev_Rural value = 0.1 }

    # Modify Dev to not have decimal digits
    divide_key = { lhs = Dev_Rural value = 1000 }
    multiply_key = { lhs = Dev_Rural value = 1000 }
    divide_key = { lhs = Dev_Urban value = 1000 }
    multiply_key = { lhs = Dev_Urban value = 1000 }
    divide_key = { lhs = Dev_Notables value = 1000 }
    multiply_key = { lhs = Dev_Notables value = 1000 }


    # Check if dev is <= 0 (<= 1 for rural) set to minimum of 0/1
    if = {
        limit = {
            NOT = {
                check_key = { lhs = Dev_Rural value = 1 }
            }
        }
        set_key = { lhs = Dev_Rural value = 1 }
    }
    if = {
        limit = {
            NOT = {
                check_key = { lhs = Dev_Notables value = 0 }
            }
        }
        set_key = { lhs = Dev_Notables value = 0 }
    }
    if = {
        limit = {
            NOT = {
                check_key = { lhs = Dev_Urban value = 0 }
            }
        }
        set_key = { lhs = Dev_Urban value = 0 }
    }

    # Sum up total development
    set_key = { lhs = Dev_Total which = Dev_Notables }
    change_key = { lhs = Dev_Total which = Dev_Urban }
    change_key = { lhs = Dev_Total which = Dev_Rural }

	### disable for init
    if = {
        limit = {
			NOT = { has_global_flag = POP_Sim }
        }
		Dev_Set = { inp = Dev_Notables type = base_tax }
		Dev_Set = { inp = Dev_Urban type = base_production }
		Dev_Set = { inp = Dev_Rural type = base_manpower }
		DiploAnnex_Dev = yes
	}
    set_key = { lhs = Public_Tmp1 value = 0 }
    set_key = { lhs = Public_Tmp2 value = 0 }
    set_key = { lhs = Public_Tmp3 value = 0 }
}

Dev_GetRural = {
    set_key = { lhs = $return$ value = 0 }

    Dev_GetIncomeRural = { slot = 0 return = $return$ }
    Dev_GetIncomeRural = { slot = 1 return = $return$ }
    Dev_GetIncomeRural = { slot = 2 return = $return$ }
    Dev_GetIncomeRural = { slot = 3 return = $return$ }
    Dev_GetIncomeRural = { slot = 4 return = $return$ }
    Dev_GetIncomeRural = { slot = 5 return = $return$ }
    Dev_GetIncomeRural = { slot = 6 return = $return$ }
    Dev_GetIncomeRural = { slot = 7 return = $return$ }
    Dev_GetIncomeRural = { slot = 8 return = $return$ }
    Dev_GetIncomeRural = { slot = 9 return = $return$ }
    Dev_GetIncomeRural = { slot = 10 return = $return$ }
    Dev_GetIncomeRural = { slot = 11 return = $return$ }
    Dev_GetIncomeRural = { slot = 12 return = $return$ }
    Dev_GetIncomeRural = { slot = 13 return = $return$ }
    Dev_GetIncomeRural = { slot = 14 return = $return$ }
    Dev_GetIncomeRural = { slot = 15 return = $return$ }
	
	change_key = { lhs = $return$ which = SF_IncomeInnate }
	change_key = { lhs = $return$ which = NM_IncomeInnate }
}

Dev_GetUrban = {
    set_key = { lhs = $return$ value = 0 }

    Dev_GetIncomeUrban = { slot = 0 return = $return$ }
    Dev_GetIncomeUrban = { slot = 1 return = $return$ }
    Dev_GetIncomeUrban = { slot = 2 return = $return$ }
    Dev_GetIncomeUrban = { slot = 3 return = $return$ }
    Dev_GetIncomeUrban = { slot = 4 return = $return$ }
    Dev_GetIncomeUrban = { slot = 5 return = $return$ }
    Dev_GetIncomeUrban = { slot = 6 return = $return$ }
    Dev_GetIncomeUrban = { slot = 7 return = $return$ }
    Dev_GetIncomeUrban = { slot = 8 return = $return$ }
    Dev_GetIncomeUrban = { slot = 9 return = $return$ }
    Dev_GetIncomeUrban = { slot = 10 return = $return$ }
    Dev_GetIncomeUrban = { slot = 11 return = $return$ }
    Dev_GetIncomeUrban = { slot = 12 return = $return$ }
    Dev_GetIncomeUrban = { slot = 13 return = $return$ }
    Dev_GetIncomeUrban = { slot = 14 return = $return$ }
    Dev_GetIncomeUrban = { slot = 15 return = $return$ }
	change_key = { lhs = $return$ which = RE_IncomeInnate }
}

Dev_GetNotables = {
    set_key = { lhs = $return$ value = 0 }

    Dev_GetIncomeNotables = { slot = 0 return = $return$ }
    Dev_GetIncomeNotables = { slot = 1 return = $return$ }
    Dev_GetIncomeNotables = { slot = 2 return = $return$ }
    Dev_GetIncomeNotables = { slot = 3 return = $return$ }
    Dev_GetIncomeNotables = { slot = 4 return = $return$ }
    Dev_GetIncomeNotables = { slot = 5 return = $return$ }
    Dev_GetIncomeNotables = { slot = 6 return = $return$ }
    Dev_GetIncomeNotables = { slot = 7 return = $return$ }
    Dev_GetIncomeNotables = { slot = 8 return = $return$ }
    Dev_GetIncomeNotables = { slot = 9 return = $return$ }
    Dev_GetIncomeNotables = { slot = 10 return = $return$ }
    Dev_GetIncomeNotables = { slot = 11 return = $return$ }
    Dev_GetIncomeNotables = { slot = 12 return = $return$ }
    Dev_GetIncomeNotables = { slot = 13 return = $return$ }
    Dev_GetIncomeNotables = { slot = 14 return = $return$ }
    Dev_GetIncomeNotables = { slot = 15 return = $return$ }
	change_key = { lhs = $return$ which = NO_IncomeInnate }
	change_key = { lhs = $return$ which = BG_IncomeInnate }
	change_key = { lhs = $return$ which = CL_IncomeInnate }
}

Dev_Set = {
    export_to_key = { lhs = Tmp_0 value = $type$ }

    subtract_key = { lhs = Tmp_0 which = $inp$ }
    multiply_key = { lhs = Tmp_0 value = -1 }

    if = { limit = { check_key = { lhs = Tmp_0 value = 64 } } subtract_key = { lhs = Tmp_0 value = 64 } add_$type$ = 64 }
    if = { limit = { check_key = { lhs = Tmp_0 value = 32 } } subtract_key = { lhs = Tmp_0 value = 32 } add_$type$ = 32 }
    if = { limit = { check_key = { lhs = Tmp_0 value = 16 } } subtract_key = { lhs = Tmp_0 value = 16 } add_$type$ = 16 }
    if = { limit = { check_key = { lhs = Tmp_0 value = 8 } } subtract_key = { lhs = Tmp_0 value = 8 } add_$type$ = 8 }
    if = { limit = { check_key = { lhs = Tmp_0 value = 4 } } subtract_key = { lhs = Tmp_0 value = 4 } add_$type$ = 4 }
    if = { limit = { check_key = { lhs = Tmp_0 value = 2 } } subtract_key = { lhs = Tmp_0 value = 2 } add_$type$ = 2 }
    if = { limit = { check_key = { lhs = Tmp_0 value = 1 } } subtract_key = { lhs = Tmp_0 value = 1 } add_$type$ = 1 }

    if = {
        limit = {
            NOT = {
                check_key = { lhs = Tmp_0 value = 0 }
            }
        }
        multiply_key = { lhs = Tmp_0 value = -1 }

        if = { limit = { check_key = { lhs = Tmp_0 value = 64 } } subtract_key = { lhs = Tmp_0 value = 64 } add_$type$ = -64 }
        if = { limit = { check_key = { lhs = Tmp_0 value = 32 } } subtract_key = { lhs = Tmp_0 value = 32 } add_$type$ = -32 }
        if = { limit = { check_key = { lhs = Tmp_0 value = 16 } } subtract_key = { lhs = Tmp_0 value = 16 } add_$type$ = -16 }
        if = { limit = { check_key = { lhs = Tmp_0 value = 8 } } subtract_key = { lhs = Tmp_0 value = 8 } add_$type$ = -8 }
        if = { limit = { check_key = { lhs = Tmp_0 value = 4 } } subtract_key = { lhs = Tmp_0 value = 4 } add_$type$ = -4 }
        if = { limit = { check_key = { lhs = Tmp_0 value = 2 } } subtract_key = { lhs = Tmp_0 value = 2 } add_$type$ = -2 }
        if = { limit = { check_key = { lhs = Tmp_0 value = 1 } } subtract_key = { lhs = Tmp_0 value = 1 } add_$type$ = -1 }
    }

    set_key = { lhs = Tmp_0 value = 0 }
}

Dev_GetIncomeRural = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
			OR = {
				AND = {
					check_key = { lhs = Prod_S$slot$ value = 1 } 
					NOT = { check_key = { lhs = Prod_S$slot$ value = 24 } }
				}
				AND = {
					check_key = { lhs = Prod_S$slot$ value = 38 } 
					NOT = { check_key = { lhs = Prod_S$slot$ value = 39 } }
				}
				AND = {
					check_key = { lhs = Prod_S$slot$ value = 41 } 
					NOT = { check_key = { lhs = Prod_S$slot$ value = 43 } }
				}
			}

            check_key = { lhs = Prod_S$slot$Income value = 0.001 }
        }
        change_key = { lhs = $return$ which = Prod_S$slot$Income }
    }
}
Dev_GetIncomeUrban = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
			OR = {
				AND = {
					check_key = { lhs = Prod_S$slot$ value = 24 } 
					NOT = { check_key = { lhs = Prod_S$slot$ value = 29 } }
				}
				AND = {
					check_key = { lhs = Prod_S$slot$ value = 32 } 
					NOT = { check_key = { lhs = Prod_S$slot$ value = 38 } }
				}
				AND = {
					check_key = { lhs = Prod_S$slot$ value = 39 } 
					NOT = { check_key = { lhs = Prod_S$slot$ value = 41 } }
				}
			}

            check_key = { lhs = Prod_S$slot$Income value = 0.001 }
        }
        change_key = { lhs = $return$ which = Prod_S$slot$Income }
    }
}
Dev_GetIncomeNotables = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
            check_key = { lhs = Prod_S$slot$ value = 29 }

            NOT = { check_key = { lhs = Prod_S$slot$ value = 32 } }

            check_key = { lhs = Prod_S$slot$Income value = 0.001 }
        }
        change_key = { lhs = $return$ which = Prod_S$slot$Income }
    }
}