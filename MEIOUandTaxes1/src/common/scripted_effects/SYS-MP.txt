### Calculate new manpower percentage after recovery tick
# Formular = (((PreviousMPPerc / MaxMPPercentage)^2 - 1) * -1) * RecoverySpeed
# Output in $return$ = new manpower percentage
MP_GetMPPercRecov = {
    set_key = { lhs = $return$ which = $class$_MPPerc } # MP Fraction
    divide_key = { lhs = $return$ which = MP_Tmp } # MP Fraction divided by $max$
    multiply_key = { lhs = $return$ which = $return$ } # ^2 return
    subtract_key = { lhs = $return$ value = 1 }
    multiply_key = { lhs = $return$ value = -1 }
    multiply_key = { lhs = $return$ value = $speed$ }
	multiply_key = { lhs = $return$ value = Modi_MilRecovery }	#Restore multiplication by manpower_recovery_speed which
	multiply_key = { lhs = $return$ value = Modi_MilRecovery$class$ }
    set_key = { lhs = MP_Tmp value = 0 }
}

### Calculate theoretical manpower pool of fighting age men
# Inputs:
# $class$ = Class to be calculated
# $max$ = Maximum manpower percentage
# $speed$ = Speed of manpower recovery
# $capital$ = whether or not the capital familial estates are affected
# Output:
# $class$_MP: Capable manpower (fightning age men)
MP_DoClass = {
    if = { ## only calculate stuff if class exists and is large enough
        limit = {
            check_key = { lhs = $class$_Total value = 0.1 }
        }
		if = {
			limit = { # Fraction of current MP / Total Pops in [0,100] - calculated in MP_Refresh
				NOT = {	check_key = { lhs = $class$_MPPerc value = 0.01 } } # underflow prevention
			}
			set_key = { lhs = $class$_MPPerc value = 0.01 }
		}
		#else_if = {
		#	limit = {
		#		check_key = { lhs = $class$_MPPerc value = $max$ } # overflow prevention
		#	}
		#	set_key = { lhs = $class$_MPPerc value = $max$ }
		#}

   		set_key = { lhs = MP_Tmp value = $max$ } # Maximum MP Fraction
		multiply_key = { lhs = MP_Tmp which = Modi_Militarism }
		[[rural]
		if = {
			limit = {
				always = $rural$
			}
			multiply_key = { lhs = MP_Tmp which = Modi_MilitarismRural }
		}
		]
		[[urban]
		if = {
			limit = {
				always = $urban$
			}
			multiply_key = { lhs = MP_Tmp which = Modi_MilitarismUrban }
		}
		]
		[[notables]
		if = {
			limit = {
				always = $notables$
			}
			multiply_key = { lhs = MP_Tmp which = Modi_MilitarismNotables }
		}
		]
		[[capital]
		if = { ## If capital add familial estates MP to $max$
			limit = {
				is_capital = $capital$
				check_key = { lhs = $class$_Total value = 4 }
			}
			set_key = { lhs = Tmp_9 value = 3 }
			divide_key = { lhs = Tmp_9 which = $class$_Total }
			multiply_key = { lhs = Tmp_9 value = 100 }
			change_key = { lhs = MP_Tmp which = Tmp_9 }
		}
		]

		# Calculate the change in manpower percentage after recovery tick
		MP_GetMPPercRecov = {
			class = $class$
			speed = $speed$
			return = Tmp_9
		}

		# Not sure why this is here
		if = {
			limit = { # Fraction of current MP / Total Pops in [0,1] - calculated in MP_Refresh
				NOT = {	check_key = { lhs = $class$_MPPerc value = 0.01 } } # underflow prevention
			}
			set_key = { lhs = $class$_MPPerc value = 0.01 }
		}
		else_if = {
			limit = {
				check_key = { lhs = $class$_MPPerc value = 100 } # overflow prevention
			}
			set_key = { lhs = $class$_MPPerc value = 100 }
		}
		
		change_key = { lhs = $class$_MPPerc which = Tmp_9 } # Change MP Percentage by the calculated recovery

		# Calculate absolute $class$_MP value based on new percentage and total population
		set_key = { lhs = $class$_MP which = $class$_Total }
		multiply_key = { lhs = $class$_MP which = $class$_MPPerc }
		multiply_key = { lhs = $class$_MP value = 0.01 }

		if = {
			limit = {
				check_key = { lhs = $class$_MP which = $class$_Total } # overflow handling
			}
			set_key = { lhs = $class$_MP which = $class$_Total }
		}

		set_key = { lhs = Tmp_9 value = 0 }
	}
	else = {
		set_key = { lhs = $class$_MP value = 0 }
		set_key = { lhs = $class$_MPPerc value = 100 }
	}
}

MP_DoProv = {
    MP_DoClass = { class = SF max = 8 speed = 0.25 rural=yes capital=yes }
    MP_DoClass = { class = NM max = 12 speed = 0.5 } ## not rural because they dont need any more buffs for the love of god
    MP_DoClass = { class = RE max = 10 speed = 0.25 urban=yes capital=yes }
    MP_DoClass = { class = NO max = 30 speed = 0.35 notables=yes }
    MP_DoClass = { class = BG max = 10 speed = 0.25 notables=yes }
    MP_DoClass = { class = CL max = 10 speed = 0.25 notables=yes }
}

MP_DistribHelper = {
	if = {
		limit = {
			check_key = { lhs = $from$_MP$who$Cur value = 0 }
		}
		set_key = { lhs = Public_Tmp1 which = $from$_MP$who$Cur }
		multiply_key = { lhs = Public_Tmp1 which = $amount$ }
		if = {
			limit = {
				check_key = { lhs = Public_Tmp1 value = 0.001 }
			}
			divide_key = { lhs = Public_Tmp1 which = Public_Tmp0 }
		}
	}
	else = {
		set_key = { lhs = Public_Tmp1 value = 0 }
	}
	
	change_key = { lhs = $who$_MP which = Public_Tmp1 }
	change_key = { lhs = $from$_MP$who$Cur which = Public_Tmp1 }
	Public_ChangeClassVal = { class = $who$ type = which inp = Public_Tmp1 }
	
	if = {
		limit = {
			NOT = {
				check_key = { lhs = $who$_MP value = 0 }
			}
		}
		set_key = { lhs = $who$_MP value = 0 }
	}
	if = {
		limit = {
			NOT = {
				check_key = { lhs = $from$_MP$who$Cur value = 0 }
			}
		}
		set_key = { lhs = $from$_MP$who$Cur value = 0 }
	}
}

MP_Distrib = {
	set_key = { lhs = Public_Tmp0 value = 0 }
	
	[[who0] change_key = { lhs = Public_Tmp0 which = $from$_MP$who0$Cur } ]
	[[who1] change_key = { lhs = Public_Tmp0 which = $from$_MP$who1$Cur } ]
	[[who2] change_key = { lhs = Public_Tmp0 which = $from$_MP$who2$Cur } ]
	[[who3] change_key = { lhs = Public_Tmp0 which = $from$_MP$who3$Cur } ]
	[[who4] change_key = { lhs = Public_Tmp0 which = $from$_MP$who4$Cur } ]
	[[who5] change_key = { lhs = Public_Tmp0 which = $from$_MP$who5$Cur } ]
	[[who6] change_key = { lhs = Public_Tmp0 which = $from$_MP$who6$Cur } ]
	
	if = {
		limit = {
			check_key = { lhs = Public_Tmp0 value = 0.1 }
		}
		[[who0] MP_DistribHelper = { from = $from$ who = $who0$ amount = $amount$ } ]
		[[who1] MP_DistribHelper = { from = $from$ who = $who1$ amount = $amount$ } ]
		[[who2] MP_DistribHelper = { from = $from$ who = $who2$ amount = $amount$ } ]
		[[who3] MP_DistribHelper = { from = $from$ who = $who3$ amount = $amount$ } ]
		[[who4] MP_DistribHelper = { from = $from$ who = $who4$ amount = $amount$ } ]
		[[who5] MP_DistribHelper = { from = $from$ who = $who5$ amount = $amount$ } ]
		[[who6] MP_DistribHelper = { from = $from$ who = $who6$ amount = $amount$ } ]
	}
}

MP_Refresh = {
	if = {
		limit = {
			OR = {
				NOT = { check_key = { lhs = $class$_MP value = 0.001 } }
				NOT = { check_key = { lhs = $class$_Total value = 0.1 } }
			}
		}
		set_key = { lhs = $class$_MP value = 0 }
		set_key = { lhs = $class$_MPPerc value = 0 }
	}
	else = {
		set_key = { lhs = $class$_MPPerc which = $class$_MP }
		multiply_key = { lhs = $class$_MPPerc value = 100 }
		divide_key = { lhs = $class$_MPPerc which = $class$_Total }
	}

}

MP_AddHelper = {
    if = {
        limit = {
            check_key = { lhs = MP_MPChange value = $val$ }
        }
        subtract_key = { lhs = MP_MPChange value = $val$ }

        add_manpower = $val$
    }
}

MP_Add = {
    set_key = { lhs = MP_MPChange $type$ = $inp$ }

    if = {
        limit = {
            NOT = {
                has_country_flag = MP_Checked
            }
        }
        export_to_key = {
            lhs = MP_MP
            value = manpower
        }
    }

    change_key = { lhs = MP_MP which = MP_MPChange }

    MP_AddHelper = { val = 1024 }
    MP_AddHelper = { val = 512 }
    MP_AddHelper = { val = 256 }
    MP_AddHelper = { val = 128 }
    MP_AddHelper = { val = 64 }
    MP_AddHelper = { val = 32 }
    MP_AddHelper = { val = 16 }
    MP_AddHelper = { val = 8 }
    MP_AddHelper = { val = 4 }
    MP_AddHelper = { val = 2 }
    MP_AddHelper = { val = 1 }
}

MP_SubtHelper = {
    if = {
        limit = {
            check_key = { lhs = MP_MPChange value = $val$ }
        }
        subtract_key = { lhs = MP_MPChange value = $val$ }

        add_manpower = -$val$
    }
}

MP_Subt = {
    set_key = { lhs = MP_MPChange $type$ = $inp$ }

    if = {
        limit = {
            NOT = {
                has_country_flag = MP_Checked
            }
        }
        export_to_key = {
            lhs = MP_MP
            value = manpower
        }
    }

    subtract_key = { lhs = MP_MP which = MP_MPChange }

    MP_SubtHelper = { val = 1024 }
    MP_SubtHelper = { val = 512 }
    MP_SubtHelper = { val = 256 }
    MP_SubtHelper = { val = 128 }
    MP_SubtHelper = { val = 64 }
    MP_SubtHelper = { val = 32 }
    MP_SubtHelper = { val = 16 }
    MP_SubtHelper = { val = 8 }
    MP_SubtHelper = { val = 4 }
    MP_SubtHelper = { val = 2 }
    MP_SubtHelper = { val = 1 }
}

MP_RaisedCalc = {
	export_to_key = {
		lhs = MP_RaisedReg
		value = army_size
	}
	export_to_key = {
		lhs = MP_Tmp1
		value = trigger_value:num_of_mercenaries
	}
	subtract_key = { lhs = MP_RaisedReg which = MP_Tmp1 }
	
	every_owned_province = { #yes this doesn't capture queued units but remember this system also redistributes gains in manpower
		limit = {
			has_construction = army #this includes mercs under construction but so does num_of_mercenaries, thank god
			controlled_by = owner
		}
		PREV = {
			change_key = { lhs = MP_RaisedReg value = 1 }
		}
	}
	set_key = { lhs = MP_Tmp1 value = 0 }
}

MP_LossGainRecalc = {
	## Handle Yearly Manpower Loss/Gain
	MP_RaisedCalc = yes # get raised regiments
	export_to_key = {
		lhs = Tmp_0
		value = manpower
	}

	if = { # For humans add raised regiments to manpower
		limit = {
			ai = no
		}
		change_key = { lhs = Tmp_0 which = MP_RaisedReg }
	}
	
	export_to_key = {
		lhs = Tmp_1
		value = max_manpower
	}

	set_key = { lhs = Tmp_2 which = Tmp_0 } # Manpower (+ Raised Reg for humans)
	subtract_key = { lhs = Tmp_2 which = Tmp_1 } # Manpower - MaxManpower
	
	# If (Manpower + Raised Regiments) - Maxmanpower >= 0 --> Remove access manpower
	if = {
		limit = {
			check_key = { lhs = Tmp_2 value = 0.001 }
		}
		if = { limit = { check_key = { lhs = Tmp_2 value = 1048.576 } } subtract_key = { lhs = Tmp_2 value = 1048.576 } add_manpower = -1048.576 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 524.288 } } subtract_key = { lhs = Tmp_2 value = 524.288 } add_manpower = -524.288 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 262.144 } } subtract_key = { lhs = Tmp_2 value = 262.144 } add_manpower = -262.144 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 131.072 } } subtract_key = { lhs = Tmp_2 value = 131.072 } add_manpower = -131.072 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 65.536 } } subtract_key = { lhs = Tmp_2 value = 65.536 } add_manpower = -65.536 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 32.768 } } subtract_key = { lhs = Tmp_2 value = 32.768 } add_manpower = -32.768 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 16.384 } } subtract_key = { lhs = Tmp_2 value = 16.384 } add_manpower = -16.384 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 8.192 } } subtract_key = { lhs = Tmp_2 value = 8.192 } add_manpower = -8.192 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 4.096 } } subtract_key = { lhs = Tmp_2 value = 4.096 } add_manpower = -4.096 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 2.048 } } subtract_key = { lhs = Tmp_2 value = 2.048 } add_manpower = -2.048 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 1.024 } } subtract_key = { lhs = Tmp_2 value = 1.024 } add_manpower = -1.024 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.512 } } subtract_key = { lhs = Tmp_2 value = 0.512 } add_manpower = -0.512 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.256 } } subtract_key = { lhs = Tmp_2 value = 0.256 } add_manpower = -0.256 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.128 } } subtract_key = { lhs = Tmp_2 value = 0.128 } add_manpower = -0.128 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.064 } } subtract_key = { lhs = Tmp_2 value = 0.064 } add_manpower = -0.064 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.032 } } subtract_key = { lhs = Tmp_2 value = 0.032 } add_manpower = -0.032 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.016 } } subtract_key = { lhs = Tmp_2 value = 0.016 } add_manpower = -0.016 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.008 } } subtract_key = { lhs = Tmp_2 value = 0.008 } add_manpower = -0.008 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.004 } } subtract_key = { lhs = Tmp_2 value = 0.004 } add_manpower = -0.004 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.002 } } subtract_key = { lhs = Tmp_2 value = 0.002 } add_manpower = -0.002 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.001 } } subtract_key = { lhs = Tmp_2 value = 0.001 } add_manpower = -0.001 }
	}
	else_if = { # If (Manpower + Raised Regiments) - Maxmanpower < 0 --> replenish manpower by the result of the equation
		limit = {
			NOT = {	check_key = { lhs = Tmp_2 value = 0 } }
		}
		multiply_key = { lhs = Tmp_2 value = -1 }

		if = { limit = { check_key = { lhs = Tmp_2 value = 1048.576 } } subtract_key = { lhs = Tmp_2 value = 1048.576 } add_manpower = 1048.576 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 524.288 } } subtract_key = { lhs = Tmp_2 value = 524.288 } add_manpower = 524.288 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 262.144 } } subtract_key = { lhs = Tmp_2 value = 262.144 } add_manpower = 262.144 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 131.072 } } subtract_key = { lhs = Tmp_2 value = 131.072 } add_manpower = 131.072 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 65.536 } } subtract_key = { lhs = Tmp_2 value = 65.536 } add_manpower = 65.536 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 32.768 } } subtract_key = { lhs = Tmp_2 value = 32.768 } add_manpower = 32.768 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 16.384 } } subtract_key = { lhs = Tmp_2 value = 16.384 } add_manpower = 16.384 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 8.192 } } subtract_key = { lhs = Tmp_2 value = 8.192 } add_manpower = 8.192 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 4.096 } } subtract_key = { lhs = Tmp_2 value = 4.096 } add_manpower = 4.096 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 2.048 } } subtract_key = { lhs = Tmp_2 value = 2.048 } add_manpower = 2.048 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 1.024 } } subtract_key = { lhs = Tmp_2 value = 1.024 } add_manpower = 1.024 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.512 } } subtract_key = { lhs = Tmp_2 value = 0.512 } add_manpower = 0.512 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.256 } } subtract_key = { lhs = Tmp_2 value = 0.256 } add_manpower = 0.256 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.128 } } subtract_key = { lhs = Tmp_2 value = 0.128 } add_manpower = 0.128 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.064 } } subtract_key = { lhs = Tmp_2 value = 0.064 } add_manpower = 0.064 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.032 } } subtract_key = { lhs = Tmp_2 value = 0.032 } add_manpower = 0.032 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.016 } } subtract_key = { lhs = Tmp_2 value = 0.016 } add_manpower = 0.016 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.008 } } subtract_key = { lhs = Tmp_2 value = 0.008 } add_manpower = 0.008 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.004 } } subtract_key = { lhs = Tmp_2 value = 0.004 } add_manpower = 0.004 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.002 } } subtract_key = { lhs = Tmp_2 value = 0.002 } add_manpower = 0.002 }
		if = { limit = { check_key = { lhs = Tmp_2 value = 0.001 } } subtract_key = { lhs = Tmp_2 value = 0.001 } add_manpower = 0.001 }
	}

	export_to_key = {
		lhs = MP_MP
		value = manpower
	}

	change_key = { lhs = MP_MP which = MP_RaisedReg }
}

Combat_Penalties = {
	set_key = { lhs = Tmp_0 value = 0 }
	set_key = { lhs = Tmp_1 value = 0 }
	set_key = { lhs = Tmp_2 value = 0 }
	set_key = { lhs = Tmp_3 value = 0 }
	set_key = { lhs = Tmp_4 value = 0 }
	set_key = { lhs = Tmp_5 value = 0 }
	set_key = { lhs = Tmp_6 value = 0 }
	set_key = { lhs = Tmp_7 value = 0 }
	set_key = { lhs = Tmp_8 value = 0 } 
	set_key = { lhs = Tmp_9 value = 0 } #Weight	

	set_key = { lhs = Mil_Maint1  value = 0 }
	set_key = { lhs = Mil_Maint2  value = 0 }
	set_key = { lhs = Mil_Maint5  value = 0 }
	set_key = { lhs = Mil_Maint21 value = 0  }
	set_key = { lhs = Mil_Maint22 value = 0  }
	set_key = { lhs = Mil_Maint24 value = 0  }
	set_key = { lhs = Mil_Maint41 value = 0  }

	set_key = { lhs = Mil_Build1  value = 0 }
	set_key = { lhs = Mil_Build2  value = 0 }
	set_key = { lhs = Mil_Build5  value = 0 }
	set_key = { lhs = Mil_Build21 value = 0  }
	set_key = { lhs = Mil_Build22 value = 0  }
	set_key = { lhs = Mil_Build24 value = 0  }
	set_key = { lhs = Mil_Build41 value = 0  }

	every_owned_province = {
		export_to_key = { lhs = Tmp_8 value = base_manpower } # Manpower is the weight per prov
		set_key = { lhs = Tmp_0 which = Mil_Fill }
		multiply_key = { lhs = Tmp_0 which = Tmp_8 }		
		
		PREV = {
			change_key = { lhs = Tmp_0 which = PREV }
			change_key = { lhs = Tmp_8 which = PREV }

			change_key = { lhs = Mil_Maint1  which = PREV }
			change_key = { lhs = Mil_Maint2  which = PREV }
			change_key = { lhs = Mil_Maint5  which = PREV }
			change_key = { lhs = Mil_Maint21 which = PREV }
			change_key = { lhs = Mil_Maint22 which = PREV }
			change_key = { lhs = Mil_Maint24 which = PREV }
			change_key = { lhs = Mil_Maint41 which = PREV }

			change_key = { lhs = Mil_Build1  which = PREV }
			change_key = { lhs = Mil_Build2  which = PREV }
			change_key = { lhs = Mil_Build5  which = PREV }
			change_key = { lhs = Mil_Build21 which = PREV }
			change_key = { lhs = Mil_Build22 which = PREV }
			change_key = { lhs = Mil_Build24 which = PREV }
			change_key = { lhs = Mil_Build41 which = PREV }			
		}
	}
	# Goods demanded total
	change_key = { lhs = Mil_Maint1  which = Mil_Build1 }
	change_key = { lhs = Mil_Maint2  which = Mil_Build2 }
	change_key = { lhs = Mil_Maint5  which = Mil_Build5 }
	change_key = { lhs = Mil_Maint21 which = Mil_Build21 }
	change_key = { lhs = Mil_Maint22 which = Mil_Build22 }
	change_key = { lhs = Mil_Maint24 which = Mil_Build24 }
	change_key = { lhs = Mil_Maint41 which = Mil_Build41 }
	## For some reason we get a 0 for Maintenance values for Maint21,24,41
	## Build and Maint has to be in sum 0 here 
	
	Combat_PenaltiesHelper = { prod = 1 }
	Combat_PenaltiesHelper = { prod = 2 }
	Combat_PenaltiesHelper = { prod = 5 }
	Combat_PenaltiesHelper = { prod = 21 }
	Combat_PenaltiesHelper = { prod = 22 }
	Combat_PenaltiesHelper = { prod = 24 }
	Combat_PenaltiesHelper = { prod = 41 }
		
	###OldCodeHere
#	# Given by the state
#	set_key = { lhs = Mil_Fill1 which = TN_SectorExported1 }
#	set_key = { lhs = Mil_Fill2 which = TN_SectorExported2 }
#	set_key = { lhs = Mil_Fill5 which = TN_SectorExported5 }
#	set_key = { lhs = Mil_Fill21 which = TN_SectorExported21 }
#	set_key = { lhs = Mil_Fill22 which = TN_SectorExported22 }
#	set_key = { lhs = Mil_Fill24 which = TN_SectorExported23 }
#	set_key = { lhs = Mil_Fill41 which = TN_SectorExported24 }
#	# Mil_$prod$ is what was actually demanded originally.
#	# Fullfiled by the provs
#	divide_key = { lhs = Mil_1  which = Mil_Maint1 }
#	divide_key = { lhs = Mil_2  which = Mil_Maint2 }
#	divide_key = { lhs = Mil_5  which = Mil_Maint5 }
#	divide_key = { lhs = Mil_21 which = Mil_Maint21 }
#	divide_key = { lhs = Mil_22 which = Mil_Maint22 }
#	divide_key = { lhs = Mil_24 which = Mil_Maint24 }
#	divide_key = { lhs = Mil_41 which = Mil_Maint41 }
#	# Additional fullfilment by the State
#	divide_key = { lhs = Mil_Fill1  which = Mil_Maint1 }
#	divide_key = { lhs = Mil_Fill2  which = Mil_Maint2 }
#	divide_key = { lhs = Mil_Fill5  which = Mil_Maint5 }
#	divide_key = { lhs = Mil_Fill21 which = Mil_Maint21 }
#	divide_key = { lhs = Mil_Fill22 which = Mil_Maint22 }
#	divide_key = { lhs = Mil_Fill24 which = Mil_Maint24 }
#	divide_key = { lhs = Mil_Fill41 which = Mil_Maint41 }

	multiply_key = { lhs = Mil_1  value = 100 }
	multiply_key = { lhs = Mil_2  value = 100 }
	multiply_key = { lhs = Mil_5  value = 100 }
	multiply_key = { lhs = Mil_21 value = 100 }
	multiply_key = { lhs = Mil_22 value = 100 }
	multiply_key = { lhs = Mil_24 value = 100 }
	multiply_key = { lhs = Mil_41 value = 100 }	
	multiply_key = { lhs = Mil_Fill1  value = 100 }
	multiply_key = { lhs = Mil_Fill2  value = 100 }
	multiply_key = { lhs = Mil_Fill5  value = 100 }
	multiply_key = { lhs = Mil_Fill21 value = 100 }
	multiply_key = { lhs = Mil_Fill22 value = 100 }
	multiply_key = { lhs = Mil_Fill24 value = 100 }
	multiply_key = { lhs = Mil_Fill41 value = 100 }
	
	multiply_key = { lhs = Tmp_0 value = 100 }
    divide_key = { lhs = Tmp_0 which = Tmp_8 } # Mil_Fill

	# Display
	set_key = { lhs = Mil_Fill which = Tmp_0 }
	set_key = { lhs = TN_ProvFill1 which = Mil_1 }
	set_key = { lhs = TN_ProvFill2 which = Mil_2 }
	set_key = { lhs = TN_ProvFill5 which = Mil_5 }
	set_key = { lhs = TN_ProvFill21 which = Mil_21 }
	set_key = { lhs = TN_ProvFill22 which = Mil_22 }
	set_key = { lhs = TN_ProvFill24 which = Mil_24 }
	set_key = { lhs = TN_ProvFill41 which = Mil_41 }

	# Calculate the total
	set_key = { lhs = Tmp_1 which = Mil_1 }
	set_key = { lhs = Tmp_2 which = Mil_2 }
	set_key = { lhs = Tmp_3 which = Mil_5 }
	set_key = { lhs = Tmp_4 which = Mil_21 }
	set_key = { lhs = Tmp_5 which = Mil_22 }
	set_key = { lhs = Tmp_6 which = Mil_24 }
	set_key = { lhs = Tmp_7 which = Mil_41 }	

	change_key = { lhs = Tmp_1 which = Mil_Fill1 }
	change_key = { lhs = Tmp_2 which = Mil_Fill2 }
	change_key = { lhs = Tmp_3 which = Mil_Fill5 }
	change_key = { lhs = Tmp_4 which = Mil_Fill21 }
	change_key = { lhs = Tmp_5 which = Mil_Fill22 }
	change_key = { lhs = Tmp_6 which = Mil_Fill24 }
	change_key = { lhs = Tmp_7 which = Mil_Fill41 }

	#country_event = { id = Plague_Spawner.13 }

	if = {
		limit = { 
			NOT = { check_key = { lhs = Tmp_0 value = 100 } }
		}
		# Morale modifiers depend on Food, Salt, Fuel and Consumer
		multiply_key = { lhs = Tmp_1 value = 3.5 }
		multiply_key = { lhs = Tmp_2 value = 1.5 }
		change_key = { lhs = Tmp_1 which = Tmp_2 }
		change_key = { lhs = Tmp_1 which = Tmp_3 }
		change_key = { lhs = Tmp_1 which = Tmp_4 }		
		multiply_key = { lhs = Tmp_1 value = 0.143 } #divide_key = { lhs = Tmp_1 value = 7 }		
		
		if = {
			limit = {
				NOT = { check_key = { lhs = Tmp_1 value = 100 } }
			}
			change_key = { lhs = Tmp_1 which = Tmp_0 }
			divide_key = { lhs = Tmp_1 value = 2 }
			set_key = { lhs = TN_SectorTraffic1 which = Tmp_1 }
			if = {
				limit = {
					NOT = { check_key = { lhs = Tmp_1 value = 30 } }
				}
				set_key = { lhs = Tmp_9 value = 50 }
			}
			else = {
				set_key = { lhs = Tmp_9 value = 100 }
				subtract_key = { lhs = Tmp_9 which = Tmp_1 }
				subtract_key = { lhs = Tmp_9 value = 3 }
			}
			if = {
				limit = {
					check_key = { lhs = Tmp_9 value = 5.001 }
				}				
				Set_Penalties = { type = morale var = Tmp_9 }				
			}
		}

		# Discipline and siege penalties. Military and Industrial
		multiply_key = { lhs = Tmp_5 value = 3 }
		change_key = { lhs = Tmp_5 which = Tmp_6 }
		divide_key = { lhs = Tmp_5 value = 4 }		
		if = {
			limit = {
				NOT = { check_key = { lhs = Tmp_5 value = 100 } }
			}
			change_key = { lhs = Tmp_5 which = Tmp_0 }
			divide_key = { lhs = Tmp_5 value = 2 }
			set_key = { lhs = TN_SectorTraffic5 which = Tmp_5 }			
			if = {
				limit = {
					NOT = { check_key = { lhs = Tmp_5 value = 30 } }
				}
				set_key = { lhs = Tmp_9 value = 50 }
			}
			else = {
				set_key = { lhs = Tmp_9 value = 100 }
				subtract_key = { lhs = Tmp_9 which = Tmp_5 }
				subtract_key = { lhs = Tmp_9 value = 3 }
			}
			if = {
				limit = {
					check_key = { lhs = Tmp_9 value = 5.001 }
				}
				Set_Penalties = { type = discipline var = Tmp_9 }			
			}
		}

		# Knowledge related penalties. 
		if = {
			limit = {
				NOT = { check_key = { lhs = Tmp_7 value = 100 } }
			}
			change_key = { lhs = Tmp_7 which = Tmp_0 }
			divide_key = { lhs = Tmp_7 value = 2 }
			set_key = { lhs = TN_SectorTraffic41 which = Tmp_7 }
			if = {
				limit = {
					NOT = { check_key = { lhs = Tmp_7 value = 30 } }
				}
				set_key = { lhs = Tmp_9 value = 50 }
			}
			else = {
				set_key = { lhs = Tmp_9 value = 100 }
				subtract_key = { lhs = Tmp_9 which = Tmp_7 }
				subtract_key = { lhs = Tmp_9 value = 3 }				
			}
			if = {
				limit = {
					check_key = { lhs = Tmp_9 value = 5.001 }
				}
				Set_Penalties = { type = knowledge var = Tmp_9 }
			}
		}
	}
}

Combat_PenaltiesHelper = {
	if = { # make sure Mil_Maint is not 0
		limit = { 
			NOT = { is_key_equal = { lhs = Mil_Maint$prod$ value = 0 } }
		}
		# Given by the state
		set_key = { lhs = Mil_Fill$prod$ which = TN_SectorExported$prod$ }
		# Mil_$prod$ is what was actually demanded originally.
		# Fullfiled by the provs
		divide_key = { lhs = Mil_$prod$  which = Mil_Maint$prod$ }
		# Additional fullfilment by the State
		divide_key = { lhs = Mil_Fill$prod$  which = Mil_Maint$prod$ }
	}
}

Set_Penalties = {
	if = {
		limit = {
			check_key = { lhs = $var$ value = 53 }
		}
		if = {
			limit = {
				check_key = { lhs = $var$ value = 77 }
			}
			if = {
				limit = {
					check_key = { lhs = $var$ value = 89 }
				}
				if = {
					limit = {
						check_key = { lhs = $var$ value = 95 }
					}
					if = {
						limit = {
							check_key = { lhs = $var$ value = 98 }
						}
						add_country_modifier = { name = $type$_penalty_98 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_95 duration = 364 }
					}
				}
				else = {
					if = {
						limit = {
							check_key = { lhs = $var$ value = 92 }
						}
						add_country_modifier = { name = $type$_penalty_92 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_89 duration = 364 }
					}
				}
			}
			else = {
				if = {
					limit = {
						check_key = { lhs = $var$ value = 83 }
					}
					if = {
						limit = {
							check_key = { lhs = $var$ value = 86 }
						}
						add_country_modifier = { name = $type$_penalty_86 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_83 duration = 364 }
					}
				}
				else = {
					if = {
						limit = {
							check_key = { lhs = $var$ value = 80 }
						}
						add_country_modifier = { name = $type$_penalty_80 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_77 duration = 364 }
					}
				}
			}
		}
		else = {
			if = {
				limit = {
					check_key = { lhs = $var$ value = 65 }
				}
				if = {
					limit = {
						check_key = { lhs = $var$ value = 71 }
					}
					if = {
						limit = {
							check_key = { lhs = $var$ value = 74 }
						}
						add_country_modifier = { name = $type$_penalty_74 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_71 duration = 364 }
					}
				}
				else = {
					if = {
						limit = {
							check_key = { lhs = $var$ value = 68 }
						}
						add_country_modifier = { name = $type$_penalty_68 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_65 duration = 364 }
					}
				}
			}
			else = {
				if = {
					limit = {
						check_key = { lhs = $var$ value = 59 }
					}
					if = {
						limit = {
							check_key = { lhs = $var$ value = 62 }
						}
						add_country_modifier = { name = $type$_penalty_62 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_59 duration = 364 }
					}
				}
				else = {
					if = {
						limit = {
							check_key = { lhs = $var$ value = 56 }
						}
						add_country_modifier = { name = $type$_penalty_56 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_53 duration = 364 }
					}
				}
			}
		}
	}
	else = {
		if = {
			limit = {
				check_key = { lhs = $var$ value = 29 }
			}
			if = {
				limit = {
					check_key = { lhs = $var$ value = 41 }
				}
				if = {
					limit = {
						check_key = { lhs = $var$ value = 47 }
					}
					if = {
						limit = {
							check_key = { lhs = $var$ value = 50 }
						}
						add_country_modifier = { name = $type$_penalty_50 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_47 duration = 364 }
					}
				}
				else = {
					if = {
						limit = {
							check_key = { lhs = $var$ value = 44 }
						}
						add_country_modifier = { name = $type$_penalty_44 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_41 duration = 364 }
					}
				}
			}
			else = {
				if = {
					limit = {
						check_key = { lhs = $var$ value = 35 }
					}
					if = {
						limit = {
							check_key = { lhs = $var$ value = 38 }
						}
						add_country_modifier = { name = $type$_penalty_38 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_35 duration = 364 }
					}
				}
				else = {
					if = {
						limit = {
							check_key = { lhs = $var$ value = 32 }
						}
						add_country_modifier = { name = $type$_penalty_32 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_29 duration = 364 }
					}
				}
			}
		}
		else = {
			if = {
				limit = {
					check_key = { lhs = $var$ value = 17 }
				}
				if = {
					limit = {
						check_key = { lhs = $var$ value = 23 }
					}
					if = {
						limit = {
							check_key = { lhs = $var$ value = 26 }
						}
						add_country_modifier = { name = $type$_penalty_26 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_23 duration = 364 }
					}
				}
				else = {
					if = {
						limit = {
							check_key = { lhs = $var$ value = 20 }
						}
						add_country_modifier = { name = $type$_penalty_20 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_17 duration = 364 }
					}
				}
			}
			else = {
				if = {
					limit = {
						check_key = { lhs = $var$ value = 11 }
					}
					if = {
						limit = {
							check_key = { lhs = $var$ value = 14 }
						}
						add_country_modifier = { name = $type$_penalty_14 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_11 duration = 364 }
					}
				}
				else = {
					if = {
						limit = {
							check_key = { lhs = $var$ value = 8 }
						}
						add_country_modifier = { name = $type$_penalty_8 duration = 364 }
					}
					else = {
						add_country_modifier = { name = $type$_penalty_5 duration = 364 }
					}
				}
			}
		}
	}
}

Set_Funds_Based_On_Flag = {
	trigger_switch = {
		on_trigger = has_country_flag
		food = {
			change_key = { lhs = Nat_Capital1 which = Tmp_0 }
		}
		salt = {
			change_key = { lhs = Nat_Capital2 which = Tmp_0 }
		}
		fuel = {
			change_key = { lhs = Nat_Capital5 which = Tmp_0 }
		}
		consumer = {
			change_key = { lhs = Nat_Capital21 which = Tmp_0 }
		}
		military = {
			change_key = { lhs = Nat_Capital22 which = Tmp_0 }
		}
		industrial = {
			change_key = { lhs = Nat_Capital24 which = Tmp_0 }
		}
		knowledge = {
			change_key = { lhs = Nat_Capital41 which = Tmp_0 }
		}
	}
}

Effect_512_Helper = {
	trigger_switch = {
		on_trigger = has_country_flag
		food = {
			Effect_512_HelperHelper = { prod = 1 }
		}
		salt = {
			Effect_512_HelperHelper = { prod = 2 }
		}
		fuel = {
			Effect_512_HelperHelper = { prod = 5 }
		}
		consumer = {
			Effect_512_HelperHelper = { prod = 21 }
		}
		military = {
			Effect_512_HelperHelper = { prod = 22 }
		}
		industrial = {
			Effect_512_HelperHelper = { prod = 24 }
		}
		knowledge = {
			Effect_512_HelperHelper = { prod = 41 }
		}
	}
}

Effect_512_HelperHelper = {
	set_key = { lhs = Tmp_2 which = TN_SectorDmnd$prod$ }
	capital_scope = {
		owner = {
			set_key = { lhs = TN_ProvPrc$prod$ which = PREV }
			multiply_key = { lhs = TN_ProvPrc$prod$ value = 1.2 }
		}
	}
	set_key = { lhs = Tmp_1 which = Nat_Capital$prod$ }
	divide_key = { lhs = Tmp_1 which = TN_ProvPrc$prod$ }
	set_key = { lhs = Tmp_3 which = Tmp_0 }
	divide_key = { lhs = Tmp_3 which = TN_ProvPrc$prod$ }
	set_key = { lhs = Tmp_4 which = Tmp_1 }
	change_key = { lhs = Tmp_4 which = Tmp_3 }

	#calculate unfulfilled amount goods
	set_key = { lhs = Tmp_9 value = 100 }
	subtract_key = { lhs = Tmp_9 which = TN_ProvFill$prod$ }
	subtract_key = { lhs = Tmp_9 which = Mil_Fill$prod$ }
	multiply_key = { lhs = Tmp_9 value = 0.01 }
	
	set_key = { lhs = PublicHelper_Tmp1 which = Tmp_9 }
	multiply_key = { lhs = PublicHelper_Tmp1 which = Mil_Maint$prod$ }
	multiply_key = { lhs = Tmp_9 which = Mil_Build$prod$ }
	change_key = { lhs = Tmp_9 which = PublicHelper_Tmp1 }

	#Grab how much the country bought from the provinces
	set_key = { lhs = Tmp_8 value = 0 }
	every_owned_province = {
		limit = {
			has_province_flag = TN_SectorCent
		}
		set_key = { lhs = Tmp_8 which = Nat_Capital$prod$ }		
		PREV = {
			change_key = { lhs = Tmp_8 which = PREV }
		}		
	}
	# How much it gave to the army
	set_key = { lhs = Tmp_7 which = TN_SectorExported$prod$ }
}
