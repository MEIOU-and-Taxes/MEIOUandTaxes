###############################
## ECONOMIC PUBLIC FUNCTIONS ##
###############################

# class = Class that owns property
# prpType = Rural or Urban, which part of property is being effected
# varType = which or value, static or variable
# inp = value or variable to change by
Public_ChangeProperty = {
	change_key = { lhs = $class$_$prpType$Power $varType$ = $inp$ }

	if = {
		limit = {
			check_key = { lhs = $class$_$prpType$Power value = 5 }
		}
		set_key = { lhs = $class$_$prpType$Power value = 5 }
	}
	else_if = {
		limit = {
			NOT = {
				check_key = { lhs = $class$_$prpType$Power value = 0.2 }
			}
		}
		set_key = { lhs = $class$_$prpType$Power value = 0.2 }
	}
}

Public_AddProduceSlotVar = {
	set_province_flag = Prod_S$slot$
	set_key = { lhs = Prod_S$slot$ value = $prod$ }
    set_key = { lhs = Prod_S$slot$Wealth value = $wealth$ }
    
    set_key = { lhs = Prod_S$slot$Size which = $size$ }
    set_key = { lhs = Prod_S$slot$Soph value = $soph$ }

    Prod_AddProduceHelper$prod$ = {
        slot = $slot$
    }
	
	divide_key = { lhs = Prod_S$slot$SplyB1 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB2 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB4 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB5 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB6 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB9 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB10 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB21 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB22 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB23 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB24 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB25 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB41 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB51 value = 10 }
	
	divide_key = { lhs = Prod_S$slot$DmndB1 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB2 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB4 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB5 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB6 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB9 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB10 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB21 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB22 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB23 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB24 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB25 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB41 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB51 value = 10 }
	
	divide_key = { lhs = Prod_S$slot$DmndBR value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBUL value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBNM value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBNO value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBBG value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBCL value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBLT value = 10 }
}
Public_AddProduceSlotVar_2 = {
	set_province_flag = Prod_S$slot$
	set_key = { lhs = Prod_S$slot$ which = $prod$ }
    set_key = { lhs = Prod_S$slot$Wealth value = $wealth$ }
    
    set_key = { lhs = Prod_S$slot$Size which = $size$ }
    set_key = { lhs = Prod_S$slot$Soph value = $soph$ }
    
    if = {
        limit = {
            check_key = { lhs = $prod$ value = 22 }
        }
        if = {
            limit = {
                check_key = { lhs = $prod$ value = 32 }
            }
            if = {
                limit = {
                    check_key = { lhs = $prod$ value = 37 }
                }
                if = {
                    limit = {
                        check_key = { lhs = $prod$ value = 40 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 41 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = $prod$ value = 42 }
                            }
                            Prod_AddProduceHelper42 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper41 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper40 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 38 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = $prod$ value = 39 }
                            }
                            Prod_AddProduceHelper39 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper38 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper37 = { slot = $slot$ }
                    }
                }
            }
            else = {
                if = {
                    limit = {
                        check_key = { lhs = $prod$ value = 34 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 35 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = $prod$ value = 36 }
                            }
                            Prod_AddProduceHelper36 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper35 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper34 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 33 }
                        }
                        Prod_AddProduceHelper33 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper32 = { slot = $slot$ }
                    }
                }
            }
        }
        else = {
            if = {
                limit = {
                    check_key = { lhs = $prod$ value = 27 }
                }
                if = {
                    limit = {
                        check_key = { lhs = $prod$ value = 29 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 30 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = $prod$ value = 31 }
                            }
                            Prod_AddProduceHelper31 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper30 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper29 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 28 }
                        }
                        Prod_AddProduceHelper28 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper27 = { slot = $slot$ }
                    }
                }
            }
            else = {
                if = {
                    limit = {
                        check_key = { lhs = $prod$ value = 24 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 25 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = $prod$ value = 26 }
                            }
                            Prod_AddProduceHelper26 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper25 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper24 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 23 }
                        }
                        Prod_AddProduceHelper23 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper22 = { slot = $slot$ }
                    }
                }
            }
        }
    }
    else = {
        if = {
            limit = {
                check_key = { lhs = $prod$ value = 11 }
            }
            if = {
                limit = {
                    check_key = { lhs = $prod$ value = 16 }
                }
                if = {
                    limit = {
                        check_key = { lhs = $prod$ value = 19 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 20 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = $prod$ value = 21 }
                            }
                            Prod_AddProduceHelper21 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper20 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper19 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 17 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = $prod$ value = 18 }
                            }
                            Prod_AddProduceHelper18 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper17 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper16 = { slot = $slot$ }
                    }
                }
            }
            else = {
                if = {
                    limit = {
                        check_key = { lhs = $prod$ value = 13 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 14 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = $prod$ value = 15 }
                            }
                            Prod_AddProduceHelper15 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper14 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper13 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 12 }
                        }
                        Prod_AddProduceHelper12 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper11 = { slot = $slot$ }
                    }
                }
            }
        }
        else = {
            if = {
                limit = {
                    check_key = { lhs = $prod$ value = 6 }
                }
                if = {
                    limit = {
                        check_key = { lhs = $prod$ value = 8 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 9 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = $prod$ value = 10 }
                            }
                            Prod_AddProduceHelper10 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper9 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper8 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 7 }
                        }
                        Prod_AddProduceHelper7 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper6 = { slot = $slot$ }
                    }
                }
            }
            else = {
                if = {
                    limit = {
                        check_key = { lhs = $prod$ value = 3 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 4 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = $prod$ value = 5 }
                            }
                            Prod_AddProduceHelper5 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper4 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper3 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = $prod$ value = 2 }
                        }
                        Prod_AddProduceHelper2 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper1 = { slot = $slot$ }
                    }
                }
            }
        }
    }
	
	divide_key = { lhs = Prod_S$slot$SplyB1 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB2 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB4 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB5 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB6 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB9 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB10 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB21 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB22 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB23 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB24 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB25 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB41 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB51 value = 10 }
	
	divide_key = { lhs = Prod_S$slot$DmndB1 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB2 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB4 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB5 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB6 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB9 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB10 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB21 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB22 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB23 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB24 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB25 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB41 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB51 value = 10 }
	
	divide_key = { lhs = Prod_S$slot$DmndBR value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBUL value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBNM value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBNO value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBBG value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBCL value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBLT value = 10 }
    trigger_switch = {
        on_trigger = has_province_flag
        
        wants_to_open_slot = { add_province_modifier = { name = new_Slot$slot$ duration = 18250 hidden = yes } set_province_flag = rec_new_slot clr_province_flag = wants_to_open_slot }
    }
}

Public_AddProduceSlotVar_3 = {
	set_province_flag = Prod_S$slot$
	set_key = { lhs = Prod_S$slot$ value = $prod$ }
    set_key = { lhs = Prod_S$slot$Wealth value = $wealth$ }
    
    set_key = { lhs = Prod_S$slot$Size which = $size$ }
    set_key = { lhs = Prod_S$slot$Soph value = $soph$ }
}

Public_AddProduceSlotVar_4 = {
    if = {
        limit = {
            check_key = { lhs = Prod_S$slot$ value = 22 }
        }
        if = {
            limit = {
                check_key = { lhs = Prod_S$slot$ value = 32 }
            }
            if = {
                limit = {
                    check_key = { lhs = Prod_S$slot$ value = 37 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Prod_S$slot$ value = 40 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 41 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = Prod_S$slot$ value = 42 }
                            }
                            Prod_AddProduceHelper42 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper41 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper40 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 38 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = Prod_S$slot$ value = 39 }
                            }
                            Prod_AddProduceHelper39 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper38 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper37 = { slot = $slot$ }
                    }
                }
            }
            else = {
                if = {
                    limit = {
                        check_key = { lhs = Prod_S$slot$ value = 34 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 35 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = Prod_S$slot$ value = 36 }
                            }
                            Prod_AddProduceHelper36 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper35 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper34 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 33 }
                        }
                        Prod_AddProduceHelper33 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper32 = { slot = $slot$ }
                    }
                }
            }
        }
        else = {
            if = {
                limit = {
                    check_key = { lhs = Prod_S$slot$ value = 27 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Prod_S$slot$ value = 29 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 30 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = Prod_S$slot$ value = 31 }
                            }
                            Prod_AddProduceHelper31 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper30 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper29 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 28 }
                        }
                        Prod_AddProduceHelper28 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper27 = { slot = $slot$ }
                    }
                }
            }
            else = {
                if = {
                    limit = {
                        check_key = { lhs = Prod_S$slot$ value = 24 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 25 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = Prod_S$slot$ value = 26 }
                            }
                            Prod_AddProduceHelper26 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper25 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper24 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 23 }
                        }
                        Prod_AddProduceHelper23 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper22 = { slot = $slot$ }
                    }
                }
            }
        }
    }
    else = {
        if = {
            limit = {
                check_key = { lhs = Prod_S$slot$ value = 11 }
            }
            if = {
                limit = {
                    check_key = { lhs = Prod_S$slot$ value = 16 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Prod_S$slot$ value = 19 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 20 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = Prod_S$slot$ value = 21 }
                            }
                            Prod_AddProduceHelper21 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper20 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper19 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 17 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = Prod_S$slot$ value = 18 }
                            }
                            Prod_AddProduceHelper18 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper17 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper16 = { slot = $slot$ }
                    }
                }
            }
            else = {
                if = {
                    limit = {
                        check_key = { lhs = Prod_S$slot$ value = 13 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 14 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = Prod_S$slot$ value = 15 }
                            }
                            Prod_AddProduceHelper15 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper14 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper13 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 12 }
                        }
                        Prod_AddProduceHelper12 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper11 = { slot = $slot$ }
                    }
                }
            }
        }
        else = {
            if = {
                limit = {
                    check_key = { lhs = Prod_S$slot$ value = 6 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Prod_S$slot$ value = 8 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 9 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = Prod_S$slot$ value = 10 }
                            }
                            Prod_AddProduceHelper10 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper9 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper8 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 7 }
                        }
                        Prod_AddProduceHelper7 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper6 = { slot = $slot$ }
                    }
                }
            }
            else = {
                if = {
                    limit = {
                        check_key = { lhs = Prod_S$slot$ value = 3 }
                    }
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 4 }
                        }
                        if = {
                            limit = {
                                check_key = { lhs = Prod_S$slot$ value = 5 }
                            }
                            Prod_AddProduceHelper5 = { slot = $slot$ }
                        }
                        else = {
                            Prod_AddProduceHelper4 = { slot = $slot$ }
                        }
                    }
                    else = {
                        Prod_AddProduceHelper3 = { slot = $slot$ }
                    }
                }
                else = {
                    if = {
                        limit = {
                            check_key = { lhs = Prod_S$slot$ value = 2 }
                        }
                        Prod_AddProduceHelper2 = { slot = $slot$ }
                    }
                    else = {
                        Prod_AddProduceHelper1 = { slot = $slot$ }
                    }
                }
            }
        }
    }
	
	divide_key = { lhs = Prod_S$slot$SplyB1 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB2 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB4 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB5 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB6 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB9 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB10 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB21 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB22 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB23 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB24 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB25 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB41 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB51 value = 10 }
	
	divide_key = { lhs = Prod_S$slot$DmndB1 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB2 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB4 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB5 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB6 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB9 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB10 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB21 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB22 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB23 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB24 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB25 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB41 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB51 value = 10 }
	
	divide_key = { lhs = Prod_S$slot$DmndBR value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBUL value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBNM value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBNO value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBBG value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBCL value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBLT value = 10 }
}

Public_AddProduceVar = {
    if = {
        limit = {
			check_key = { lhs = $size$ value = 0.01 }
			
            Prod_NotHasProd = { Prod=$prod$ }
        }
        if = {
            limit = {
               NOT = { has_province_flag = Prod_S0 }
            }
            Public_AddProduceSlotVar = {
                slot = 0
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S1 }
            }
            Public_AddProduceSlotVar = {
                slot = 1
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S2 }
            }
            Public_AddProduceSlotVar = {
                slot = 2
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S3 }
            }
            Public_AddProduceSlotVar = {
                slot = 3
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S4 }
            }
            Public_AddProduceSlotVar = {
                slot = 4
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S5 }
            }
            Public_AddProduceSlotVar = {
                slot = 5
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S6 }
            }
            Public_AddProduceSlotVar = {
                slot = 6
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S7 }
            }
            Public_AddProduceSlotVar = {
                slot = 7
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S8 }
            }
            Public_AddProduceSlotVar = {
                slot = 8
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S9 }
            }
            Public_AddProduceSlotVar = {
                slot = 9
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S10 }
            }
            Public_AddProduceSlotVar = {
                slot = 10
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S11 }
            }
            Public_AddProduceSlotVar = {
                slot = 11
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S12 }
            }
            Public_AddProduceSlotVar = {
                slot = 12
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S13 }
            }
            Public_AddProduceSlotVar = {
                slot = 13
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S14 }
            }
            Public_AddProduceSlotVar = {
                slot = 14
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S15 }
            }
            Public_AddProduceSlotVar = {
                slot = 15
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
    }
}
#Adds product and size based on a var
Public_AddProduceVar_2 = {
    if = {
        limit = {
			check_key = { lhs = $size$ value = 0.01 }
			
            NOT = {
                is_key_equal = { lhs = Prod_S0 which = $prod$ }
                is_key_equal = { lhs = Prod_S1 which = $prod$ }
                is_key_equal = { lhs = Prod_S2 which = $prod$ }
                is_key_equal = { lhs = Prod_S3 which = $prod$ }
                is_key_equal = { lhs = Prod_S4 which = $prod$ }
                is_key_equal = { lhs = Prod_S5 which = $prod$ }
                is_key_equal = { lhs = Prod_S6 which = $prod$ }
                is_key_equal = { lhs = Prod_S7 which = $prod$ }
				is_key_equal = { lhs = Prod_S8 which = $prod$ }
				is_key_equal = { lhs = Prod_S9 which = $prod$ }
				is_key_equal = { lhs = Prod_S10 which = $prod$ }
				is_key_equal = { lhs = Prod_S11 which = $prod$ }
				is_key_equal = { lhs = Prod_S12 which = $prod$ }
				is_key_equal = { lhs = Prod_S13 which = $prod$ }
				is_key_equal = { lhs = Prod_S14 which = $prod$ }
				is_key_equal = { lhs = Prod_S15 which = $prod$ }
            }
        }
        if = {
            limit = {
               NOT = { has_province_flag = Prod_S0 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 0
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S1 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 1
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S2 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 2
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S3 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 3
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S4 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 4
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S5 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 5
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S6 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 6
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S7 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 7
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S8 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 8
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S9 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 9
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S10 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 10
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S11 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 11
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S12 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 12
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S13 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 13
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S14 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 14
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S15 }
            }
            Public_AddProduceSlotVar_2 = {
                slot = 15
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
    }
}

Public_AddProduceVar_3 = {
    if = {
        limit = {
			check_key = { lhs = $size$ value = 0.01 }
			
            Prod_NotHasProd = { Prod=$prod$ }
        }
        if = {
            limit = {
               NOT = { has_province_flag = Prod_S0 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 0
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S1 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 1
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S2 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 2
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S3 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 3
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S4 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 4
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S5 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 5
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S6 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 6
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S7 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 7
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S8 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 8
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S9 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 9
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S10 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 10
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S11 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 11
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S12 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 12
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S13 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 13
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S14 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 14
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S15 }
            }
            Public_AddProduceSlotVar_3 = {
                slot = 15
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
        }
    }
}

Public_AddProduceVar_4 = {
	if = {
		limit = {
			has_province_flag = Prod_S0
		}
		Public_AddProduceSlotVar_4 = {
			slot = 0
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S1
		}
		Public_AddProduceSlotVar_4 = {
			slot = 1
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S2
		}
		Public_AddProduceSlotVar_4 = {
			slot = 2
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S3
		}
		Public_AddProduceSlotVar_4 = {
			slot = 3
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S4
		}
		Public_AddProduceSlotVar_4 = {
			slot = 4
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S5
		}
		Public_AddProduceSlotVar_4 = {
			slot = 5
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S6
		}
		Public_AddProduceSlotVar_4 = {
			slot = 6
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S7
		}
		Public_AddProduceSlotVar_4 = {
			slot = 7
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S8
		}
		Public_AddProduceSlotVar_4 = {
			slot = 8
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S9
		}
		Public_AddProduceSlotVar_4 = {
			slot = 9
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S10
		}
		Public_AddProduceSlotVar_4 = {
			slot = 10
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S11
		}
		Public_AddProduceSlotVar_4 = {
			slot = 11
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S12
		}
		Public_AddProduceSlotVar_4 = {
			slot = 12
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S13
		}
		Public_AddProduceSlotVar_4 = {
			slot = 13
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S14
		}
		Public_AddProduceSlotVar_4 = {
			slot = 14
		}
	}
	if = {
		limit = {
			has_province_flag = Prod_S15
		}
		Public_AddProduceSlotVar_4 = {
			slot = 15
		}
	}
}
Public_AddProduceSlot = {
    
	set_province_flag = Prod_S$slot$
	set_key = { lhs = Prod_S$slot$ value = $prod$ }
    set_key = { lhs = Prod_S$slot$Wealth value = $wealth$ }
    set_key = { lhs = Prod_S$slot$Size value = $size$ }
    set_key = { lhs = Prod_S$slot$Soph value = $soph$ }
    
    Prod_AddProduceHelper$prod$ = {
        slot = $slot$
    }
    
    
	divide_key = { lhs = Prod_S$slot$SplyB1 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB2 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB4 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB5 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB6 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB9 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB10 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB21 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB22 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB23 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB24 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB25 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB41 value = 10 }
	divide_key = { lhs = Prod_S$slot$SplyB51 value = 10 }
	
	divide_key = { lhs = Prod_S$slot$DmndB1 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB2 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB4 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB5 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB6 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB9 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB10 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB21 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB22 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB23 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB24 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB25 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB41 value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndB51 value = 10 }
	
	divide_key = { lhs = Prod_S$slot$DmndBR value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBUL value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBNM value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBNO value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBBG value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBCL value = 10 }
	divide_key = { lhs = Prod_S$slot$DmndBLT value = 10 }
}

Public_AddProduce = {
    if = {
        limit = {
			Prod_NotHasProd = { Prod=$prod$ }
        }
        if = {
            limit = {
               NOT = { has_province_flag = Prod_S0 }
            }
            Public_AddProduceSlot = {
                slot = 0
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S1 }
            }
            Public_AddProduceSlot = {
                slot = 1
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S2 }
            }
            Public_AddProduceSlot = {
                slot = 2
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S3 }
            }
            Public_AddProduceSlot = {
                slot = 3
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S4 }
            }
            Public_AddProduceSlot = {
                slot = 4
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S5 }
            }
            Public_AddProduceSlot = {
                slot = 5
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S6 }
            }
            Public_AddProduceSlot = {
                slot = 6
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
        else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S7 }
            }
            Public_AddProduceSlot = {
                slot = 7
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S8 }
            }
            Public_AddProduceSlot = {
                slot = 8
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S9 }
            }
            Public_AddProduceSlot = {
                slot = 9
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S10 }
            }
            Public_AddProduceSlot = {
                slot = 10
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S11 }
            }
            Public_AddProduceSlot = {
                slot = 11
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S12 }
            }
            Public_AddProduceSlot = {
                slot = 12
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S13 }
            }
            Public_AddProduceSlot = {
                slot = 13
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S14 }
            }
            Public_AddProduceSlot = {
                slot = 14
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
		else_if = {
            limit = {
               NOT = { has_province_flag = Prod_S15 }
            }
            Public_AddProduceSlot = {
                slot = 15
                prod = $prod$
                size = $size$
                soph = $soph$
                wealth = $wealth$
            }
			owner = { add_treasury = -5 }
        }
	}
}

Public_PopSlot = {
    clr_province_flag = Prod_S$slot$
    
    clr_province_flag = Prod_S$slot$DmndBAgriculture
    clr_province_flag = Prod_S$slot$DmndBExtraction
    clr_province_flag = Prod_S$slot$DmndBForestry
    clr_province_flag = Prod_S$slot$DmndBFishery
    clr_province_flag = Prod_S$slot$DmndBIndustrial
    clr_province_flag = Prod_S$slot$DmndBAcademic
    clr_province_flag = Prod_S$slot$DmndBCommercial
    
	Prod_ClrIndustryFlag = { slot=$slot$ }
    if = {
        limit = {
            is_key_equal = { lhs = Prod_S$slot$ value = 30 }
        }
        clr_province_flag = Has_Uni
    }
    if = {
        limit = {
            NOT = { has_province_flag = Industry_24Present }
            NOT = { has_province_flag = Industry_25Present }
            NOT = { has_province_flag = Industry_26Present }
            NOT = { has_province_flag = Industry_27Present }
            NOT = { has_province_flag = Industry_28Present }
            NOT = { has_province_flag = Industry_30Present }
            NOT = { has_province_flag = Industry_33Present }
            NOT = { has_province_flag = Industry_34Present }
            NOT = { has_province_flag = Industry_35Present }
            NOT = { has_province_flag = Industry_36Present }
            NOT = { has_province_flag = Industry_37Present }
            NOT = { has_province_flag = Industry_39Present }
            NOT = { has_province_flag = Industry_40Present }
        }
        clr_province_flag = City_Present
    }
    if = {
        limit = {
            NOT = { has_province_flag = Industry_1Present }
            NOT = { has_province_flag = Industry_6Present }
            NOT = { has_province_flag = Industry_7Present }
            NOT = { has_province_flag = Industry_9Present }
            NOT = { has_province_flag = Industry_10Present }
            NOT = { has_province_flag = Industry_11Present }
            NOT = { has_province_flag = Industry_12Present }
            NOT = { has_province_flag = Industry_13Present }
            NOT = { has_province_flag = Industry_14Present }
            NOT = { has_province_flag = Industry_15Present }
            NOT = { has_province_flag = Industry_16Present }
            NOT = { has_province_flag = Industry_17Present }
            NOT = { has_province_flag = Industry_18Present }
            NOT = { has_province_flag = Industry_19Present }
            NOT = { has_province_flag = Industry_20Present }
            NOT = { has_province_flag = Industry_21Present }
            NOT = { has_province_flag = Industry_22Present }
            NOT = { has_province_flag = Industry_23Present }
            NOT = { has_province_flag = Industry_38Present }
            NOT = { has_province_flag = Industry_41Present }
            NOT = { has_province_flag = Industry_42Present }
        }
        clr_province_flag = Rural_Present
    }
	set_key = { lhs = Prod_S$slot$ value = 0 }
	set_key = { lhs = Prod_S$slot$Size value = 0 }
	set_key = { lhs = Prod_S$slot$SizeCur value = 0 }
	set_key = { lhs = Prod_S$slot$Wealth value = 0 }
	set_key = { lhs = Prod_S$slot$Income value = 0 }
	set_key = { lhs = Prod_S$slot$IncomeProd value = 0 }
	set_key = { lhs = Prod_S$slot$IncomeMax value = 0 }
	set_key = { lhs = Prod_S$slot$IncomeGold value = 0 }
	set_key = { lhs = Prod_S$slot$Spend value = 0 }
	set_key = { lhs = Prod_S$slot$SpendProd value = 0 }
	set_key = { lhs = Prod_S$slot$SpendPrp value = 0 }
	set_key = { lhs = Prod_S$slot$SpendL value = 0 }
    set_key = { lhs = Prod_S$slot$SpendTV value = 0 }
    set_key = { lhs = Prod_S$slot$SpendTax value = 0 }
    set_key = { lhs = Prod_S$slot$SpendDisp value = 0 }
    set_key = { lhs = Prod_S$slot$Soph value = 0 }
	set_key = { lhs = Prod_S$slot$SpendPrev value = 0 }
	set_key = { lhs = Prod_S$slot$ProfitPerc value = 0 }
	set_key = { lhs = Prod_S$slot$Change value = 0 }
	
	set_key = { lhs = Prod_S$slot$RecSize value = 0 }
	set_key = { lhs = Prod_S$slot$RecSizePrev value = 0 }
	set_key = { lhs = Prod_S$slot$RecSizePrevPrev value = 0 }
	set_key = { lhs = Prod_S$slot$RecProfit value = 0 }
	set_key = { lhs = Prod_S$slot$RecChange value = 0 }

	set_key = { lhs = Prod_S$slot$DmndL1Agriculture value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1Forestry value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1Extraction value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1Fishery value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1Commercial value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1Industrial value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1Academic value = 0 }
	
	set_key = { lhs = Prod_S$slot$DmndLAgriculture value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLForestry value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLExtraction value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLFishery value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLCommercial value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLIndustrial value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLAcademic value = 0 }
	
	set_key = { lhs = Prod_S$slot$DmndL1R value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1NM value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1UL value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1NO value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1BG value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1CL value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL1LT value = 0 }
	
	set_key = { lhs = Prod_S$slot$DmndLR value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLNM value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLUL value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLNO value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLBG value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLCL value = 0 }
	set_key = { lhs = Prod_S$slot$DmndLLT value = 0 }
	
	set_key = { lhs = Prod_S$slot$DmndC1R value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC1NM value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC1UL value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC1NO value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC1BG value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC1CL value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC1LT value = 0 }
	
	set_key = { lhs = Prod_S$slot$DmndCR value = 0 }
	set_key = { lhs = Prod_S$slot$DmndCNM value = 0 }
	set_key = { lhs = Prod_S$slot$DmndCUL value = 0 }
	set_key = { lhs = Prod_S$slot$DmndCNO value = 0 }
	set_key = { lhs = Prod_S$slot$DmndCBG value = 0 }
	set_key = { lhs = Prod_S$slot$DmndCCL value = 0 }
	set_key = { lhs = Prod_S$slot$DmndCLT value = 0 }
	
	set_key = { lhs = Prod_S$slot$DmndFR value = 0 }
	set_key = { lhs = Prod_S$slot$DmndFNM value = 0 }
	set_key = { lhs = Prod_S$slot$DmndFUL value = 0 }
	set_key = { lhs = Prod_S$slot$DmndFNO value = 0 }
	set_key = { lhs = Prod_S$slot$DmndFBG value = 0 }
	set_key = { lhs = Prod_S$slot$DmndFCL value = 0 }
	set_key = { lhs = Prod_S$slot$DmndFLT value = 0 }
	
	set_key = { lhs = Prod_S$slot$DmndF1 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF2 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF4 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF5 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF6 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF9 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF10 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF21 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF22 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF23 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF24 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF25 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF41 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndF51 value = 0 }
	
	set_key = { lhs = Prod_S$slot$DmndC1 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC2 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC4 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC5 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC6 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC9 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC10 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC21 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC22 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC23 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC24 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC25 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC41 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndC51 value = 0 }
	
	set_key = { lhs = Prod_S$slot$DmndL1 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL2 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL4 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL5 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL6 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL9 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL10 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL21 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL22 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL23 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL24 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL25 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL41 value = 0 }
	set_key = { lhs = Prod_S$slot$DmndL51 value = 0 }
	
	set_key = { lhs = Prod_S$slot$SplyC1 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC2 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC4 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC5 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC6 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC9 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC10 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC21 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC22 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC23 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC24 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC25 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC41 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyC51 value = 0 }
	
	set_key = { lhs = Prod_S$slot$SplyT1 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT2 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT4 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT5 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT6 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT9 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT10 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT21 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT22 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT23 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT24 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT25 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT41 value = 0 }
	set_key = { lhs = Prod_S$slot$SplyT51 value = 0 }
	
	# Edit for new produce
	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 1 }
	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 2 }
	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 4 }
	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 5 }
	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 6 }
	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 9 }
	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 10 }

	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 21 }
	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 22 }
	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 23 }
	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 24 }
	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 25 }

	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 41 }

	PublicHelper_PopProd = { slot = $slot$ type = Sply prod = 51 }

	# Edit for new produce
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 1 }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 2 }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 4 }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 5 }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 6 }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 9 }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 10 }

	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 21 }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 22 }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 23 }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 24 }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 25 }

	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 41 }

	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = 51 }
	
	# Edit for new produce
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = R }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = NM }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = UL }
    PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = NO }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = BG }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = CL }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = LT }

	# Edit for new produce
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = Agriculture }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = Forestry }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = Extraction }
    PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = Fishery }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = Commercial }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = Industrial }
	PublicHelper_PopProd = { slot = $slot$ type = Dmnd prod = Academic }
}

Public_PopProd = {
	if = {
		limit = {
			is_key_equal = { lhs = Prod_S0 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 0
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S1 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 1
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S2 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 2
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S3 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 3
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S4 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 4
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S5 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 5
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S6 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 6
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S7 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 7
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S8 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 8
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S9 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 9
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S10 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 10
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S11 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 11
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S12 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 12
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S13 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 13
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S14 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 14
		}
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S15 value = $prod$ }
		}
		Public_PopSlot = {
			slot = 15
		}
	}
}

Public_ProdSetSize = {
	if = {
		limit = {
			is_key_equal = { lhs = Prod_S0 value = $prod$ }
		}
		set_key = { lhs = Prod_S0Size which = $sizevar$ }
		set_key = { lhs = Prod_S0SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S1 value = $prod$ }
		}
		set_key = { lhs = Prod_S1Size which = $sizevar$ }
		set_key = { lhs = Prod_S1SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S2 value = $prod$ }
		}
		set_key = { lhs = Prod_S2Size which = $sizevar$ }
		set_key = { lhs = Prod_S2SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S3 value = $prod$ }
		}
		set_key = { lhs = Prod_S3Size which = $sizevar$ }
		set_key = { lhs = Prod_S3SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S4 value = $prod$ }
		}
		set_key = { lhs = Prod_S4Size which = $sizevar$ }
		set_key = { lhs = Prod_S4SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S5 value = $prod$ }
		}
		set_key = { lhs = Prod_S5Size which = $sizevar$ }
		set_key = { lhs = Prod_S5SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S6 value = $prod$ }
		}
		set_key = { lhs = Prod_S6Size which = $sizevar$ }
		set_key = { lhs = Prod_S6SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S7 value = $prod$ }
		}
		set_key = { lhs = Prod_S7Size which = $sizevar$ }
		set_key = { lhs = Prod_S7SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S8 value = $prod$ }
		}
		set_key = { lhs = Prod_S8Size which = $sizevar$ }
		set_key = { lhs = Prod_S8SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S9 value = $prod$ }
		}
		set_key = { lhs = Prod_S9Size which = $sizevar$ }
		set_key = { lhs = Prod_S9SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S10 value = $prod$ }
		}
		set_key = { lhs = Prod_S10Size which = $sizevar$ }
		set_key = { lhs = Prod_S10SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S11 value = $prod$ }
		}
		set_key = { lhs = Prod_S11Size which = $sizevar$ }
		set_key = { lhs = Prod_S11SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S12 value = $prod$ }
		}
		set_key = { lhs = Prod_S12Size which = $sizevar$ }
		set_key = { lhs = Prod_S12SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S13 value = $prod$ }
		}
		set_key = { lhs = Prod_S13Size which = $sizevar$ }
		set_key = { lhs = Prod_S13SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S14 value = $prod$ }
		}
		set_key = { lhs = Prod_S14Size which = $sizevar$ }
		set_key = { lhs = Prod_S14SizeCur which = $sizevar$ }
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S15 value = $prod$ }
		}
		set_key = { lhs = Prod_S15Size which = $sizevar$ }
		set_key = { lhs = Prod_S15SizeCur which = $sizevar$ }
	}
}

# Use this function to change the rank of an infrastructure
#
# Scope: Province
#
# Inputs:
# infra = type of infrastructure -> Pathing, Harbourage, Amenities, Irrigation, Capitol, Garrison, Amenities
# type = input type variable vs. value -> which | value
# inp = key name or integer value
Public_ChangeInfra = {
	change_key = { lhs = Infra_$infra$Size  $type$ = $inp$ }

	if = {
		limit = {
			NOT = {
				check_key = {
					lhs = Infra_$infra$Size
					value = 1
				}
			}
		}
		set_key = {
			lhs = Infra_$infra$Size
			value = 1
		}
	}

    Infra_SetRankInfra = { type = $infra$ }
}

#################################
## POPULATION PUBLIC FUNCTIONS ##
#################################

# Use this function to move pops point to point from a scope to another scope
# This function uses absolute pop / wealth numbers as inputs

# Scopes: Provinces

# Inputs: 
# $classFrom$ = NO | NM | SF | RE | BG | CL 
# $classTo$ = NO | NM | SF | RE | BG | CL 
# $type$ = which | value -> type for pops moved
# $inp$ = key | decimal number -> inp for pops moved (0.1 to move 10% of pops)
# $wealth$ = yes | no -> whether or not wealth is taken
# $wealth_type$ = which | value -> type for wealth moved
# $wealth_inp$ = key | decimal number -> inp for wealth moved  (0.1 to move 10% of wealth)
# $from_region$ = region to take pops / wealth from
# $from_area$ = area to take pops / wealth from
# $from_flag$ = province flag to take pops / wealth from
# $to_region$ = region to take pops / wealth from
# $to_area$ = area to take pops / wealth from
# $to_flag$ = province flag to take pops / wealth from
# $culture_change$ = yes | no --> whether or not culture conversion progress should be affected
# $culture_strength$ = decimal number (divisor on the strength of cultural conversion)
Public_PopMovementClass_GroupToGroup_Prop = {
	hidden_effect = {
		set_key = { lhs = PublicHelper_Tmp1 value = 0 } # Used in ROOT to store total moved pops
		set_key = { lhs = PublicHelper_Tmp2 value = 0 } # Used in ROOT to store total moved wealth
		set_key = { lhs = PublicHelper_Tmp3 $type$ = $inp$ } # Pops to move out per province
		set_key = { lhs = PublicHelper_Tmp4 $wealth_type$ = $wealth_inp$ } # Wealth to move out per province
		set_key = { lhs = PublicHelper_Tmp5 value = 0 } # Used in ROOT to store total moved pops of owner culture

		every_province = {
			limit = {
				OR = {
					[[from_region] region = $from_region$ ]
					[[from_area] area = $from_area$ ]
					[[from_flag] has_province_flag = $from_flag$ ]
				}
			}

			set_key = { lhs = PublicHelper_Tmp3 which = ROOT } # Pops to move out per province
			
			set_key = { lhs = PublicHelper_Tmp1 which = $classFrom$_Total } # pops to move out
			multiply_key = { lhs = PublicHelper_Tmp1 which = PublicHelper_Tmp3 }
			
			set_key = { lhs = PublicHelper_Tmp3 value = 0 } 

			# cannot remove more pops than present
			if = {
				limit = {
					check_key = { lhs = PublicHelper_Tmp1 which = $classFrom$_Total }
				}
				set_key = { lhs = PublicHelper_Tmp1 which = $classFrom$_Total }
			}

			ROOT = { change_key = { lhs = PublicHelper_Tmp1 which = PREV } }

			change_key = { lhs = $classFrom$_Out which = PublicHelper_Tmp1 } # Store change in display variable

			multiply_key = { lhs = PublicHelper_Tmp1 value = -1 }

			Public_ChangeClassVal = { class = $classFrom$ type = which inp = PublicHelper_Tmp1 } # Remove pops in from scope


			if = {
				limit = {
					always = $wealth$
				}
				set_key = { lhs = PublicHelper_Tmp4 which = ROOT } # Wealth to move out per province
				set_key = { lhs = PublicHelper_Tmp2 which = $classFrom$_Wealth }
				multiply_key = { lhs = PublicHelper_Tmp2 which = PublicHelper_Tmp4 }
				set_key = { lhs = PublicHelper_Tmp4 value = 0 } 

				# cannot remove more wealth than present
				if = {
					limit = {
						check_key = { lhs = PublicHelper_Tmp2 which = $classFrom$_Wealth }
					}
					set_key = { lhs = PublicHelper_Tmp2 which = $classFrom$_Wealth }
				}
				ROOT = { change_key = { lhs = PublicHelper_Tmp2 which = PREV } }

				multiply_key = { lhs = PublicHelper_Tmp2 value = -1 }

				Public_ChangeClassWealthVal = { class = $classFrom$ type = which inp = PublicHelper_Tmp2 } # remove wealth in from scope
			}

			if = {
				limit = {
					always = $culture_change$
				}

				if = {
					limit = { has_owner_culture = yes } # sum up own cultured pops moved

					multiply_key = { lhs = PublicHelper_Tmp1 value = -1 } # Get positive amount of pop movement again
					set_key = { lhs = PublicHelper_Tmp5 which = PublicHelper_Tmp1 }
					ROOT = { change_key = { lhs = PublicHelper_Tmp5 which = PREV } }
				}
				else = { # subtract different cultured pops moved
					set_key = { lhs = PublicHelper_Tmp5 which = PublicHelper_Tmp1 }
					ROOT = { change_key = { lhs = PublicHelper_Tmp5 which = PREV } }					
				}
			}
		}
	}
	
	hidden_effect = {
		# Partition total pops and wealth equally among target provinces
		set_key = { lhs = PublicHelper_Tmp3 value = 0 }
		every_province = {
			limit = {
				OR = {
					[[to_region] region = $to_region$ ]
					[[to_area] area = $to_area$ ]
					[[to_flag] has_province_flag = $to_flag$ ]
				}
			}
			ROOT = { change_key = { lhs = PublicHelper_Tmp3 value = 1 } }
		}

		set_key = { lhs = PublicHelper_Tmp4 value = 1 }
		divide_key = { lhs = PublicHelper_Tmp4 which = PublicHelper_Tmp3 }

		multiply_key = { lhs = PublicHelper_Tmp1 which = PublicHelper_Tmp4 } # ratio * total moved pops
		multiply_key = { lhs = PublicHelper_Tmp2 which = PublicHelper_Tmp4 } # ratio * total moved wealth
		multiply_key = { lhs = PublicHelper_Tmp5 which = PublicHelper_Tmp4 } # ratio * cultural settlers difference

		every_province = {
			limit = {
				OR = {
					[[to_region] region = $to_region$ ]
					[[to_area] area = $to_area$ ]
					[[to_flag] has_province_flag = $to_flag$ ]
				}
			}

			if = {
				limit = {
					always = $culture_change$
					CV_Can_Convert = yes
				}
				set_key = { lhs = PublicHelper_Tmp5 which = ROOT } # get absolute difference of cultural settlers
				divide_key = { lhs = PublicHelper_Tmp5 value = $culture_strength$ } # use this to balance the strength of cultural movement
				divide_key = { lhs = PublicHelper_Tmp5 which = Class_Total }
				change_key = { lhs = Culture_Progress which = PublicHelper_Tmp5 }
			}

			set_key = { lhs = PublicHelper_Tmp1 which = ROOT } # get absolute pops of scope from

			change_key = { lhs = $classFrom$_In which = PublicHelper_Tmp1 } # Store change in display variable

			Public_ChangeClassVal = { class = $classTo$ type = which inp = PublicHelper_Tmp1 } # Add pops in scope to

			if = {
				limit = {
					always = $wealth$
				}
				set_key = { lhs = PublicHelper_Tmp2 which = ROOT } # get absolute wealth of scope from

				Public_ChangeClassWealthVal = { class = $classTo$ type = which inp = PublicHelper_Tmp2 } # Add wealth in scope to
			}
		}
	}
}

# Use this function to move pops point to point from a scope to another scope
# This function uses absolute pop / wealth numbers as inputs

# Scopes: Provinces

# Inputs: 
# $classFrom$ = NO | NM | SF | RE | BG | CL 
# $classTo$ = NO | NM | SF | RE | BG | CL 
# $type$ = which | value -> type for pops moved
# $inp$ = key | absolute number -> inp for pops moved (in k)
# $wealth$ = yes | no -> whether or not wealth is taken
# $wealth_type$ = which | value -> type for wealth moved
# $wealth_inp$ = key | absolute number -> inp for wealth moved
# $from_region$ = region to take pops / wealth from
# $from_area$ = area to take pops / wealth from
# $from_flag$ = province flag to take pops / wealth from
# $to_region$ = region to take pops / wealth from
# $to_area$ = area to take pops / wealth from
# $to_flag$ = province flag to take pops / wealth from
# $culture_change$ = yes | no --> whether or not culture conversion progress should be affected
# $culture_strength$ = decimal number (divisor on the strength of cultural conversion)
Public_PopMovementClass_GroupToGroup_Absolute = {
	hidden_effect = {
		set_key = { lhs = PublicHelper_Tmp1 value = 0 } # Used in ROOT to store total moved pops
		set_key = { lhs = PublicHelper_Tmp2 value = 0 } # Used in ROOT to store total moved wealth
		set_key = { lhs = PublicHelper_Tmp3 $type$ = $inp$ } # Pops to move out per province
		set_key = { lhs = PublicHelper_Tmp4 $wealth_type$ = $wealth_inp$ } # Wealth to move out per province
		set_key = { lhs = PublicHelper_Tmp5 value = 0 } # Used in ROOT to store total moved pops of owner culture

		every_province = {
			limit = {
				OR = {
					[[from_region] region = $from_region$ ]
					[[from_area] area = $from_area$ ]
					[[from_flag] has_province_flag = $from_flag$ ]
				}
			}

			set_key = { lhs = PublicHelper_Tmp3 which = ROOT } # Pops to move out per province
			set_key = { lhs = PublicHelper_Tmp1 which = PublicHelper_Tmp3 }
			set_key = { lhs = PublicHelper_Tmp3 value = 0 } 

			# cannot remove more pops than present
			if = {
				limit = {
					check_key = { lhs = PublicHelper_Tmp1 which = $classFrom$_Total }
				}
				set_key = { lhs = PublicHelper_Tmp1 which = $classFrom$_Total }
			}

			ROOT = { change_key = { lhs = PublicHelper_Tmp1 which = PREV } }

			change_key = { lhs = $classFrom$_Out which = PublicHelper_Tmp1 }

			multiply_key = { lhs = PublicHelper_Tmp1 value = -1 } # get pop change inputs as two variables inverted

			Public_ChangeClassVal = { class = $classFrom$ type = which inp = PublicHelper_Tmp1 } # Remove pops in from scope


			if = {
				limit = {
					always = $wealth$
				}
				set_key = { lhs = PublicHelper_Tmp4 which = ROOT } # Wealth to move out per province
				set_key = { lhs = PublicHelper_Tmp2 which = PublicHelper_Tmp4 }
				set_key = { lhs = PublicHelper_Tmp4 value = 0 } 

				set_key = { lhs = PublicHelper_Tmp2 $wealth_type$ = $wealth_inp$ } # wealth to take with them per province

				# cannot remove more wealth than present
				if = {
					limit = {
						check_key = { lhs = PublicHelper_Tmp2 which = $classFrom$_Wealth }
					}
					set_key = { lhs = PublicHelper_Tmp2 which = $classFrom$_Wealth }
				}
				ROOT = { change_key = { lhs = PublicHelper_Tmp2 which = PREV } }

				multiply_key = { lhs = PublicHelper_Tmp2 value = -1 }

				Public_ChangeClassWealthVal = { class = $classFrom$ type = which inp = PublicHelper_Tmp2 } # remove wealth in from scope
			}

			if = {
				limit = {
					always = $culture_change$
				}

				if = {
					limit = { has_owner_culture = yes } # sum up own cultured pops moved

					multiply_key = { lhs = PublicHelper_Tmp1 value = -1 } # Get positive amount of pop movement again
					set_key = { lhs = PublicHelper_Tmp5 which = PublicHelper_Tmp1 }
					ROOT = { change_key = { lhs = PublicHelper_Tmp5 which = PREV } }
				}
				else = { # subtract different cultured pops moved
					set_key = { lhs = PublicHelper_Tmp5 which = PublicHelper_Tmp1 }
					ROOT = { change_key = { lhs = PublicHelper_Tmp5 which = PREV } }					
				}
			}
		}
	}
	
	hidden_effect = {
		# Partition total pops and wealth equally among target provinces
		set_key = { lhs = PublicHelper_Tmp3 value = 0 }
		every_province = {
			limit = {
				OR = {
					[[to_region] region = $to_region$ ]
					[[to_area] area = $to_area$ ]
					[[to_flag] has_province_flag = $to_flag$ ]
				}
			}
			ROOT = { change_key = { lhs = PublicHelper_Tmp3 value = 1 } }
		}

		set_key = { lhs = PublicHelper_Tmp4 value = 1 }
		divide_key = { lhs = PublicHelper_Tmp4 which = PublicHelper_Tmp3 }

		multiply_key = { lhs = PublicHelper_Tmp1 which = PublicHelper_Tmp4 } # ratio * total moved pops
		multiply_key = { lhs = PublicHelper_Tmp2 which = PublicHelper_Tmp4 } # ratio * total moved wealth
		multiply_key = { lhs = PublicHelper_Tmp5 which = PublicHelper_Tmp4 } # ratio * cultural settlers difference

		every_province = {
			limit = {
				OR = {
					[[to_region] region = $to_region$ ]
					[[to_area] area = $to_area$ ]
					[[to_flag] has_province_flag = $to_flag$ ]
				}
			}

			if = {
				limit = {
					always = $culture_change$
					CV_Can_Convert = yes
				}
				set_key = { lhs = PublicHelper_Tmp5 which = ROOT } # get absolute difference of cultural settlers
				divide_key = { lhs = PublicHelper_Tmp5 value = $culture_strength$ } # use this to balance the strength of cultural movement
				divide_key = { lhs = PublicHelper_Tmp5 which = Class_Total }
				change_key = { lhs = Culture_Progress which = PublicHelper_Tmp5 }
			}

			set_key = { lhs = PublicHelper_Tmp1 which = ROOT } # get absolute pops of scope from

			change_key = { lhs = $classTo$_In which = PublicHelper_Tmp1 }
			Public_ChangeClassVal = { class = $classTo$ type = which inp = PublicHelper_Tmp1 } # Add pops in scope to

			if = {
				limit = {
					always = $wealth$
				}
				set_key = { lhs = PublicHelper_Tmp2 which = ROOT } # get absolute wealth of scope from

				Public_ChangeClassWealthVal = { class = $classTo$ type = which inp = PublicHelper_Tmp2 } # Add wealth in scope to
			}
		}
	}
}

# Use this function to move pops point to point from a scope to another scope
# This function uses proportional pop / wealth numbers as inputs
# Scopes: Province
# Inputs: 
# $class$ = NO | NM | SF | RE | BG | CL 
# $type$ = which | value -> type for pops moved
# $inp$ = key | decimal number -> inp for pops moved  (0.9 to move 10% of pops)
# $scope_from$ = scope pops / wealth are taken from
# $scope_to$ = scope pops / wealth are taken to
# $wealth$ = yes | no -> whether or not wealth is taken  (0.9 to move 10% of wealth)
# $wealth_type$ = which | value -> type for wealth moved
# $wealth_inp$ = key | decimal number -> inp for wealth moved
Public_PopMovementClass_PointToPoint_Prop = {
	$scope_from$ = {
		save_event_target_as = PopMovement_ScopeFrom

		# get pop change inputs as two variables inverted
		set_key = { lhs = PublicHelper_Tmp1 which = $class$_Total } # pops to move out
		multiply_key = { lhs = PublicHelper_Tmp1 $type$ = $inp$ }

		# cannot remove more pops than present
		if = {
			limit = {
				check_key = { lhs = PublicHelper_Tmp1 which = $class$_Total }
			}
			set_key = { lhs = PublicHelper_Tmp1 which = $class$_Total }
		}

		multiply_key = { lhs = PublicHelper_Tmp1 value = -1 }

		Public_ChangeClassVal = { class = $class$ type = which inp = PublicHelper_Tmp1 } # Remove pops in from scope


		if = {
			limit = {
				always = $wealth$
			}
			set_key = { lhs = PublicHelper_Tmp2 which = $class$_Wealth } # wealth to take with them
			multiply_key = { lhs = PublicHelper_Tmp2 $wealth_type$ = $wealth_inp$ }

			# cannot remove more wealth than present
			if = {
				limit = {
					check_key = { lhs = PublicHelper_Tmp2 which = $class$_Wealth }
				}
				set_key = { lhs = PublicHelper_Tmp2 which = $class$_Wealth }
			}

			multiply_key = { lhs = PublicHelper_Tmp2 value = -1 }

			Public_ChangeClassWealthVal = { class = $class$ type = which inp = PublicHelper_Tmp2 } # remove wealth in from scope
		}
	}

	$scope_to$ = {
		set_key = { lhs = PublicHelper_Tmp1 which = event_target:PopMovement_ScopeFrom } # get absolute pops of scope from
		multiply_key = { lhs = PublicHelper_Tmp1 value = -1 } # make positive again

		Public_ChangeClassVal = { class = $class$ type = which inp = PublicHelper_Tmp1 } # Add pops in scope to

		if = {
			limit = {
				always = $wealth$
			}
			set_key = { lhs = PublicHelper_Tmp2 which = event_target:PopMovement_ScopeFrom } # get absolute wealth of scope from
			multiply_key = { lhs = PublicHelper_Tmp2 value = -1 } # make positive again			
			Public_ChangeClassWealthVal = { class = $class$ type = which inp = PublicHelper_Tmp2 } # Add wealth in scope to
		}
	}
}

# Use this function to move pops point to point from a scope to another scope
# This function uses absolute pop / wealth numbers as inputs
# Scopes: Province
# Inputs: 
# $class$ = NO | NM | SF | RE | BG | CL 
# $type$ = which | value -> type for pops moved
# $inp$ = key | absolute number -> inp for pops moved (in k)
# $scope_from$ = scope pops / wealth are taken from
# $scope_to$ = scope pops / wealth are taken to
# $wealth$ = yes | no -> whether or not wealth is taken
# $wealth_type$ = which | value -> type for wealth moved
# $wealth_inp$ = key | absolute number -> inp for wealth moved
Public_PopMovementClass_PointToPoint_Absolute = {
	$scope_from$ = {
		save_event_target_as = PopMovement_ScopeFrom

		# get pop change inputs
		set_key = { lhs = PublicHelper_Tmp1 $type$ = $inp$ }

		# cannot remove more pops than present
		if = {
			limit = {
				check_key = { lhs = PublicHelper_Tmp1 which = $class$_Total }
			}
			set_key = { lhs = PublicHelper_Tmp1 which = $class$_Total }
		}

		multiply_key = { lhs = PublicHelper_Tmp1 value = -1 }

		Public_ChangeClassVal = { class = $class$ type = which inp = PublicHelper_Tmp1 } # Remove pops in from scope


		if = {
			limit = {
				always = $wealth$
			}

			# get wealth change inputs
			set_key = { lhs = PublicHelper_Tmp2 $wealth_type$ = $wealth_inp$ }
			multiply_key = { lhs = PublicHelper_Tmp2 value = -1 }

			Public_ChangeClassWealthVal = { class = $class$ type = which inp = PublicHelper_Tmp2 } # Remove wealth in from scope
		}
	}

	$scope_to$ = {
		set_key = { lhs = PublicHelper_Tmp1 which = event_target:PopMovement_ScopeFrom } # get absolute pops of scope from
		multiply_key = { lhs = PublicHelper_Tmp1 value = -1 } # make positive again
		set_key = { lhs = PublicHelper_Tmp2 which = event_target:PopMovement_ScopeFrom } # get absolute wealth of scope from
		multiply_key = { lhs = PublicHelper_Tmp2 value = -1 } # make positive again

		Public_ChangeClassVal = { class = $class$ type = which inp = PublicHelper_Tmp1 } # Add pops in scope to
		Public_ChangeClassWealthVal = { class = $class$ type = which inp = PublicHelper_Tmp2 } # Add wealth in scope to
	}
}

# Use this function to change Pop Size of a specified classes with a percentage input
# Scope: Province
# Inputs: 
# $class$ = NO | NM | SF | RE | BG | CL 
# $type$ = which | value 
# $inp$ = key | decimal number  (0.9 to remove 10% of pops)
Public_ChangeClassProp = {
	multiply_key = { lhs = $class$_Total $type$ = $inp$ }

	if = {
		limit = {
			NOT = {
				check_key = { lhs = $class$_Total value = 0 }
			}
		}
		set_key = { lhs = $class$_Total value = 0 }
	}

	set_province_flag = POP_ChangedPop
}
# Use this function to change Pop Size of all classes with a percentage input
# Scope: Province
# Inputs: 
# $type$ = which | value 
# $inp$ = key | decimal number
Public_ChangeClassPropAll = {
	multiply_key = { lhs = NM_Total $type$ = $inp$ }
	if = {
		limit = {
			NOT = { check_key = { lhs = NM_Total value = 0 } }
		}
		set_key = { lhs = NM_Total value = 0 }
	}
	
	multiply_key = { lhs = SF_Total $type$ = $inp$ }
	if = {
		limit = {
			NOT = { check_key = { lhs = SF_Total value = 0 } }
		}
		set_key = { lhs = SF_Total value = 0 }
	}
	
	multiply_key = { lhs = RE_Total $type$ = $inp$ }
	if = {
		limit = {
			NOT = { check_key = { lhs = RE_Total value = 0 } }
		}
		set_key = { lhs = RE_Total value = 0 }
	}
	
	multiply_key = { lhs = NO_Total $type$ = $inp$ }
	if = {
		limit = {
			NOT = { check_key = { lhs = NO_Total value = 0 } }
		}
		set_key = { lhs = NO_Total value = 0 }
	}
	
	multiply_key = { lhs = BG_Total $type$ = $inp$ }
	if = {
		limit = {
			NOT = { check_key = { lhs = BG_Total value = 0 } }
		}
		set_key = { lhs = BG_Total value = 0 }
	}
	
	multiply_key = { lhs = CL_Total $type$ = $inp$ }
	if = {
		limit = {
			NOT = { check_key = { lhs = CL_Total value = 0 } }
		}
		set_key = { lhs = CL_Total value = 0 }
	}
	
	POP_ClassTotalCalc = yes
	set_province_flag = POP_ChangedPop
}

# Use this function to change Pop Size of a specified class with a absolute input (in k)
# Scope: Province
# Inputs: 
# $class$ = NO | NM | SF | RE | BG | CL 
# $type$ = which | value 
# $inp$ = key | absolute number (in k)
Public_ChangeClassVal = {
	change_key = { lhs = $class$_Total $type$ = $inp$ }

	if = {
		limit = {
			NOT = {
				check_key = { lhs = $class$_Total value = 0 }
			}
		}
		set_key = { lhs = $class$_Total value = 0 }
	}

	set_province_flag = POP_ChangedPop
}

# Use this function to change pop wealth of a specified class with a relative input
# Scope: Province
# Inputs: 
# $class$ = NO | NM | SF | RE | BG | CL 
# $type$ = which | value 
# $inp$ = key | relative number
Public_ChangeClassWealthProp = {
	multiply_key = { lhs = $class$_Wealth $type$ = $inp$ }

	if = {
		limit = {
			NOT = {
				check_key = { lhs = $class$_Wealth value = 1.0 }
			}
		}
		set_key = { lhs = $class$_Wealth value = 1.0 }
	}

	set_province_flag = POP_ChangedWealth
}

# Use this function to change pop wealth of a specified class with a absolute input
# Scope: Province
# Inputs: 
# $class$ = NO | NM | SF | RE | BG | CL 
# $type$ = which | value 
# $inp$ = key | absolute number
Public_ChangeClassWealthVal = {
	change_key = { lhs = $class$_Wealth $type$ = $inp$ }

	if = {
		limit = {
			NOT = {
				check_key = { lhs = $class$_Wealth value = 1.0 }
			}
		}
		set_key = { lhs = $class$_Wealth value = 1.0 }
	}

	set_province_flag = POP_ChangedWealth
}

Public_ChangeManpower = {
	export_to_key = {
		lhs = Public_Tmp1
		value = manpower
	}
	export_to_key = {
		lhs = Public_Tmp2
		value = max_manpower
	}

	change_key = {
		lhs = Public_Tmp1
		$type$ = $inp$
	}

	if = {
		limit = {
			check_key = {
				lhs = Public_Tmp1
				which = Public_Tmp2
			}
		}
		set_key = {
			lhs = Public_Tmp1
			which = Public_Tmp2
		}
	}
	else_if = {
		limit = {
			NOT = {
				check_key = {
					lhs = Public_Tmp1
					value = 0
				}
			}
		}
		set_key = {
			lhs = Public_Tmp1
			value = 0
		}
	}

	export_to_key = {
		lhs = Public_Tmp2
		value = manpower
	}

	subtract_key = {
		lhs = Public_Tmp1
		which = Public_Tmp2
	}

	if = {
		limit = {
			check_key = { lhs = MP_MP value = 0.001 }
		}
		subtract_key = {
			lhs = MP_MPChange
			which = Public_Tmp1
		}
	}

	if = {
		limit = {
			check_key = {
				lhs = Public_Tmp1
				value = 0.01
			}
		}
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 1310.72 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 655.36 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 327.68 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 163.84 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 81.92 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 40.96 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 20.48 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 10.24 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 5.12 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 2.56 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 1.28 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 0.64 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 0.32 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 0.16 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 0.08 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 0.04 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 0.02 }
		PublicHelper_AddManpower = { inp = Public_Tmp1 val = 0.01 }
	}
	if = {
		limit = {
			NOT = {
				check_key = {
					lhs = Public_Tmp1
					value = 0
				}
			}
		}
		multiply_key = {
			lhs = Public_Tmp1
			value = -1
		}

		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 1310.72 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 655.36 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 327.68 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 163.84 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 81.92 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 40.96 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 20.48 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 10.24 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 5.12 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 2.56 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 1.28 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 0.64 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 0.32 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 0.16 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 0.08 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 0.04 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 0.02 }
		PublicHelper_SubtManpower = { inp = Public_Tmp1 val = 0.01 }
	}

	set_key = {
		lhs = Public_Tmp1
		value = 0
	}
	set_key = {
		lhs = Public_Tmp2
		value = 0
	}
}

##############################
## LOOTING PUBLIC FUNCTIONS ##
##############################
Public_LootRural = {
	set_key = { lhs = $return$ value = 0 }

    PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = SF_Wealth
        return = $return$
    }
    PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = NO_Wealth
        return = $return$
    }
    PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = CL_Wealth
        return = $return$
    }
	
	PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = Building_AgricultureWealth
        return = $return$
    }
	PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = Building_ForestryWealth
        return = $return$
    }
	PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = Building_ExtractionWealth
        return = $return$
    }
	PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = Building_FisheryWealth
        return = $return$
    }

    PublicHelper_LootStockpile = {
        prod = 1
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }
    PublicHelper_LootStockpile = {
        prod = 2
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }
    PublicHelper_LootStockpile = {
        prod = 4
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }
    PublicHelper_LootStockpile = {
        prod = 5
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }
    PublicHelper_LootStockpile = {
        prod = 6
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }

    PublicHelper_LootDeath = {
        type = $type2$
        rate = $rateDeath$
        class = SF
    }
	PublicHelper_LootDeath = {
        type = $type2$
        rate = $rateDeath$
        class = NM
    }
    PublicHelper_LootDeath = {
        type = $type2$
        rate = $rateDeath$
        class = NO
    }
    PublicHelper_LootDeath = {
        type = $type2$
        rate = $rateDeath$
        class = CL
    }
}

Public_LootUrban = {
    set_key = { lhs = $return$ value = 0 }

    PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = RE_Wealth
        return = $return$
    }
    PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = BG_Wealth
        return = $return$
    }
    PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = BU_Wealth
        return = $return$
    }

	PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = Infra_Wealth
        return = $return$
    }
	
	PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = Building_CommercialWealth
        return = $return$
    }
	PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = Building_IndustrialWealth
        return = $return$
    }
	PublicHelper_LootWealth = {
        type1 = $type11$
        rate = $rateWealth$ 
        targ = Building_AcademicWealth
        return = $return$
    }

    PublicHelper_LootStockpile = {
        prod = 9
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }
    PublicHelper_LootStockpile = {
        prod = 10
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }
    PublicHelper_LootStockpile = {
        prod = 21
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }
    PublicHelper_LootStockpile = {
        prod = 22
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }
    PublicHelper_LootStockpile = {
        prod = 23
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }
    PublicHelper_LootStockpile = {
        prod = 24
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }
    PublicHelper_LootStockpile = {
        prod = 25
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }
    PublicHelper_LootStockpile = {
        prod = 41
        type1 = $type11$ type2 = $type12$
        rate = $rateWealth$ effic = $effic$
    }

    PublicHelper_LootDeath = {
        type = $type2$
        rate = $rateDeath$
        class = RE
    }
    PublicHelper_LootDeath = {
        type = $type2$
        rate = $rateDeath$
        class = BG
    }
}


###############################
## POLITICS PUBLIC FUNCTIONS ##
###############################

# Use this function to change the loyalty of all elites in a province by a specified amount
# This function autogenerates a custom tooltip
# Scope: Province #Mepper: seems to be called in country scope. Affects all provinces though. 
# Inputs:
# $Amount$ = only fixed 5 increments (5, 35, 100), or 2.5/1 as inputs (put a - before amount for negative change)
Public_ChangeEliteLoyaltyTooltipProv = {
	hidden_effect = {		#Each of these 3 effects sets province_flag Unrest_Update in every_owned_province, so the unrest update in this effect itself is not necessary, as well as in the wrong scope.
		Public_ChangePowerbrokerLoyaltyTooltipProv = { Powerbroker=NO Amount=$Amount$ }
		Public_ChangePowerbrokerLoyaltyTooltipProv = { Powerbroker=BG Amount=$Amount$ }
		Public_ChangePowerbrokerLoyaltyTooltipProv = { Powerbroker=CL Amount=$Amount$ }
		#set_province_flag = Unrest_Update
	}
	custom_tooltip = POP_EliteLoyProv_$Amount$
}

# Use this function to change the loyalty of a specified elite by a specified amount in all owned provinces of a tag
# This function autogenerates a custom tooltip
# Scope: country
# Inputs:
# Powerbroker = NO | BG | CL
# $Amount$ = only fixed 5 increments (5, 35, 100), or 2.5/1 as inputs (put a - before amount for negative change)
Public_ChangePowerbrokerLoyaltyTooltipProv = { 
	hidden_effect = {
		every_owned_province = {
			limit = {
				check_key = { lhs = Prov_$Powerbroker$Pow value = 0.001 }
			}
			Public_ChangePowerbrokerLoyalty = {
				Powerbroker=$Powerbroker$
				type=value
				inp=$Amount$
			}
			set_province_flag = Unrest_Update
		}
	}
	custom_tooltip = POP_$Powerbroker$LoyProv_$Amount$
}

# Use this function to change the loyalty of a specified elite in a province by a specified amount
# This function autogenerates a custom tooltip
# Scope: Province
# Inputs:
# Powerbroker = NO | BG | CL
# $Amount$ = only fixed 5 increments (5, 35, 100), or 2.5/1 as inputs (put a - before amount for negative change)
Public_ChangePowerbrokerLoyaltyTooltip = {
	hidden_effect = {
		Public_ChangePowerbrokerLoyalty = {
			Powerbroker=$Powerbroker$
			type=value
			inp=$Amount$
		}
		set_province_flag = Unrest_Update
	}
	custom_tooltip = POP_$Powerbroker$LoyProv_$Amount$
}
Public_ChangePowerbrokerLoyaltyDynTooltip1 = {
	hidden_effect = {
		every_owned_province = {
			limit = {
				check_key = { lhs = Prov_$Powerbroker$Pow value = 0.001 }
			}
			Public_ChangePowerbrokerLoyalty = {
				Powerbroker=$Powerbroker$
				type=which
				inp=Tmp_6
			}
		set_province_flag = Unrest_Update
		}
	}
	custom_tooltip = POP_$Powerbroker$LoyProv_Dyn1
}
Public_ChangePowerbrokerLoyaltyDynTooltip2 = {
	hidden_effect = {
		every_owned_province = {
			limit = {
				check_key = { lhs = Prov_$Powerbroker$Pow value = 0.001 }
			}
			Public_ChangePowerbrokerLoyalty = {
				Powerbroker=$Powerbroker$
				type=which
				inp=Tmp_7
			}
		set_province_flag = Unrest_Update
		}
	}
	custom_tooltip = POP_$Powerbroker$LoyProv_Dyn2
}
Public_ChangePowerbrokerLoyaltyDynTooltip3 = {
	hidden_effect = {
		every_owned_province = {
			limit = {
				check_key = { lhs = Prov_$Powerbroker$Pow value = 0.001 }
			}
			Public_ChangePowerbrokerLoyalty = {
				Powerbroker=$Powerbroker$
				type=which
				inp=Tmp_8
			}
		set_province_flag = Unrest_Update
		}
	}
	custom_tooltip = POP_$Powerbroker$LoyProv_Dyn3
}
Public_ChangePowerbrokerLoyaltyDynTooltip4 = {
	hidden_effect = {
		every_owned_province = {
			limit = {
				check_key = { lhs = Prov_$Powerbroker$Pow value = 0.001 }
			}
			Public_ChangePowerbrokerLoyalty = {
				Powerbroker=$Powerbroker$
				type=which
				inp=Tmp_9
			}
		set_province_flag = Unrest_Update
		}
	}
	custom_tooltip = POP_$Powerbroker$LoyProv_Dyn4
}

# Use this function to change the loyalty of a specified elite in a country by a specified amount
# This function does NOT autogenerates a custom tooltip
# Scope: Country

# Brutus: It seems like this function is actually changing the province loyalty
# As it is directly called by Public_ChangePowerbrokerLoyaltyTooltip
# Which works on the province scope
# This function is also used in SYS-Privilege.txt
# Where it is used on every_owned_province

# Scope: Province
# Inputs:
# Powerbroker = NO | BG | CL | BU (BU is used in SYS-PrivilegesNew)
# $type$ = which | value
# $inp$ = key | number
# Example: Public_ChangePowerbrokerLoyalty = { Powerbroker=BG type=value inp=-20 }
Public_ChangePowerbrokerLoyalty = {
	change_key = { lhs = Prov_$Powerbroker$Loy $type$ = $inp$ }
	change_key = { lhs = Prov_$Powerbroker$LoyChange $type$ = $inp$ }
	if = {
		limit = {
			check_key = {
				lhs = Prov_$Powerbroker$Loy
				value = 100.001
			}
		}
		set_key = {
			lhs = Prov_$Powerbroker$Loy
			value = 100
		}
	}
	else_if = {
		limit = {
			NOT = {
				check_key = {
					lhs = Prov_$Powerbroker$Loy
					value = 0
				}
			}
		}
		set_key = {
			lhs = Prov_$Powerbroker$Loy
			value = 0
		}
	}
}

# Use this function to change a specified concern in a province by a specified amount
# This function does autogenerates a custom tooltip
# Scope: Province
# Inputs:
# Concern = Hierarchy | Consultation | Spirituality | Welfare | Diversions
# $type$ = which | value
# $Amount$ =  only fixed 0.5 increments (0.5, 3.5, 10), or 0.25/0.1 as inputs
Public_ChangeConcernTooltip = {
	hidden_effect = {
		Public_ChangeConcern = {
			Concern=$Concern$
			type=value
			inp=$Amount$
		}
		set_province_flag = Unrest_Update
	}
	custom_tooltip = POP_$Concern$Prov_$Amount$
}

# Use this function to change a specified concern in a province by a specified amount
# This function does autogenerates a custom tooltip
# Scope: Country
# Inputs:
# Concern = Hierarchy | Consultation | Spirituality | Welfare | Diversions
# $type$ = which | value
# $Amount$ =  only fixed 0.5 increments (0.5, 3.5, 10), or 0.25/0.1 as inputs
Public_ChangeConcernTooltipProv = {
	hidden_effect = {
		every_owned_province = {
			Public_ChangeConcern = {
				Concern=$Concern$
				type=value
				inp=$Amount$
			}
			set_province_flag = Unrest_Update
		}
	}
	custom_tooltip = POP_$Concern$Prov_$Amount$
}

# Tmp6-9
Public_ChangeConcernTooltipProvDyn1 = {
	hidden_effect = {
		every_owned_province = {
			Public_ChangeConcern = {
				Concern=$Concern$
				type=which
				inp=Tmp_6
			}
			set_province_flag = Unrest_Update
		}
	}
	custom_tooltip = POP_$Concern$Prov_Dyn1
}
Public_ChangeConcernTooltipProvDyn2 = {
	hidden_effect = {
		every_owned_province = {
			Public_ChangeConcern = {
				Concern=$Concern$
				type=which
				inp=Tmp_7
			}
			set_province_flag = Unrest_Update
		}
	}
	custom_tooltip = POP_$Concern$Prov_Dyn2
}
Public_ChangeConcernTooltipProvDyn3 = {
	hidden_effect = {
		every_owned_province = {
			Public_ChangeConcern = {
				Concern=$Concern$
				type=which
				inp=Tmp_8
			}
			set_province_flag = Unrest_Update
		}
	}
	custom_tooltip = POP_$Concern$Prov_Dyn3
}
Public_ChangeConcernTooltipProvDyn4 = {
	hidden_effect = {
		every_owned_province = {
			Public_ChangeConcern = {
				Concern=$Concern$
				type=which
				inp=Tmp_9
			}
			set_province_flag = Unrest_Update
		}
	}
	custom_tooltip = POP_$Concern$Prov_Dyn4
}
Public_ChangeConcern = {
	change_key = {
		lhs = Concern_$Concern$Treat
		$type$ = $inp$
	}
}

# Use this function to change power of a elite in all provinces
# This function does autogenerates a custom tooltip
# Scope: Country
# Inputs:
# Powerbroker = NO | BG | CL
# $Amount$ = key | number
Public_ChangePowTooltip = {
	hidden_effect = {
		every_owned_province = {
			Public_ChangePow$Powerbroker$ = { type=value inp=$Amount$ }
		}
	}
	custom_tooltip = POP_$Powerbroker$PowProv_$Amount$
}

# Use this function to change power of the nobles
# This function does NOT autogenerates a custom tooltip
# Scope: Province
# Inputs:
# $inp$ = key | number
# $type$ = which | value
Public_ChangePowNO = {
	hidden_effect = {
		Public_ChangePow = { Class=NO type=$type$ inp=$inp$ ClanCap=yes }

		[[Treatment]
			if = {
				limit = {
					always = $Treatment$
				}
				# Treatment effect
				set_key = { lhs = Tmp_9 which = Tmp_8 }
				multiply_key = { lhs = Tmp_9 value = 0.5 }
				Public_ChangeConcern = { Concern=Hierarchy type=which inp=Tmp_9 }
				set_key = { lhs = Tmp_9 value = 0 }
			}
		]
			
		set_key = { lhs = Tmp_8 value = 0 }
		set_province_flag = Unrest_Update
	}
}

# Use this function to change power of the burghers
# This function does NOT autogenerates a custom tooltip
# Scope: Province
# Inputs:
# $inp$ = key | number
# $type$ = which | value
Public_ChangePowBG = {
	hidden_effect = {
		Public_ChangePow = { Class=BG type=$type$ inp=$inp$ ClanCap=yes }

		[[Treatment]
			if = {
				limit = {
					always = $Treatment$
				}
				# Treatment effect
				set_key = { lhs = Tmp_9 which = Tmp_8 }
				multiply_key = { lhs = Tmp_9 value = 0.5 }
				Public_ChangeConcern = { Concern=Consultation type=which inp=Tmp_9 }
				set_key = { lhs = Tmp_9 value = 0 }
			}
		]
			
		set_key = { lhs = Tmp_8 value = 0 }
		set_province_flag = Unrest_Update
	}
}

# Use this function to change power of the clergy
# This function does NOT autogenerates a custom tooltip
# Scope: Province
# Inputs:
# $inp$ = key | number
# $type$ = which | value
Public_ChangePowCL = {
	hidden_effect = {
		Public_ChangePow = { Class=CL type=$type$ inp=$inp$ ClanCap=yes }

		[[Treatment]
			if = {
				limit = {
					always = $Treatment$
				}
				# Treatment effect
				set_key = { lhs = Tmp_9 which = Tmp_8 }
				multiply_key = { lhs = Tmp_9 value = 0.5 }
				Public_ChangeConcern = { Concern=Spirituality type=which inp=Tmp_9 }
				set_key = { lhs = Tmp_9 value = 0 }
			}
		]
			
		set_key = { lhs = Tmp_8 value = 0 }
		set_province_flag = Unrest_Update
	}
}

# Use this function to change power of the clans
# This function does NOT autogenerates a custom tooltip
# Scope: Province
# Inputs:
# $inp$ = key | number
# $type$ = which | value
Public_ChangePowTR = {
	hidden_effect = {
		Public_ChangePow = { Class=TR type=$type$ inp=$inp$ }

		[[Treatment]
			if = {
				limit = {
					always = $Treatment$
				}
				# Treatment effect
				set_key = { lhs = Tmp_9 which = Tmp_8 }
				multiply_key = { lhs = Tmp_9 value = 0.5 }
				Public_ChangeConcern = { Concern=Welfare type=which inp=Tmp_9 }
				set_key = { lhs = Tmp_9 value = 0 }
			}
		]
			
		set_key = { lhs = Tmp_8 value = 0 }
		set_province_flag = Unrest_Update
	}
}

# Use this function to change power of the bureaucracy (state reach)
# This function does NOT autogenerates a custom tooltip
# Scope: Province
# Inputs:
# $inp$ = key | number
# $type$ = which | value
# Example: Public_ChangePowBU = { type=value inp=2.5 }
Public_ChangePowBU = {
	hidden_effect = {
		Public_ChangePow = { Class=BU type=$type$ inp=$inp$ ClanCap=yes }

		[[Treatment]
			if = {
				limit = {
					always = $Treatment$
				}
				# Treatment effect
				set_key = { lhs = Tmp_9 which = Tmp_8 }
				multiply_key = { lhs = Tmp_9 value = 0.1 }
				Public_ChangeConcern = { Concern=Hierarchy type=which inp=Tmp_9 }
				set_key = { lhs = Tmp_9 value = 0 }
			}
		]
			
		set_key = { lhs = Tmp_8 value = 0 }
		set_province_flag = Unrest_Update
	}
}

Public_ChangePow = {
	set_key = { lhs = Tmp_8 $type$ = $inp$ }

	# Nobles/Burghers/Bureaucracy are clan capped
	[[ClanCap]
		if = {
			limit = {
				always = $ClanCap$
			}
			# Clan power caps other elite power at 100 - TRPow
			# Change should not surpass it
			if = {
				limit = {
					check_key = { lhs = Prov_TRPow value = 0.001 }
				}
				if = {
					limit = {
						check_key = { lhs = Prov_TRPowCap value = 0.001 }
					}
					set_key = { lhs = Tmp_9 which = Prov_$Class$Pow }
					change_key = { lhs = Tmp_9 which = Tmp_8 }
	
					## If the new total will surpass the cap, then change is Cap - Pow (difference left for 1:1)
					if = {
						limit = {
							check_key = { lhs = Tmp_9 which = Prov_TRPowCap }
						}
						set_key = { lhs = Tmp_8 which = Prov_TRPowCap }
						subtract_key = { lhs = Tmp_8 which = Prov_$Class$Pow }
					}
					set_key = { lhs = Tmp_9 value = 0 }
				}
				else_if = {
					limit = {
						check_key = { lhs = Prov_$Class$Pow value = 0.001 }
					}
					set_key = { lhs = Tmp_8 value = 0 }
					subtract_key = { lhs = Tmp_8 which = Prov_$Class$Pow }
				}
			}
		}
	]
	
	### Apply the change
	change_key = { lhs = Prov_$Class$Pow which = Tmp_8 }
	change_key = { lhs = Prov_$Class$PowChange which = Tmp_8 }
	
	multiply_key = { lhs = Prov_$Class$Pow value = 0.1 }
	multiply_key = { lhs = Prov_$Class$Pow value = 10 }
	multiply_key = { lhs = Prov_$Class$PowChange value = 0.1 }
	multiply_key = { lhs = Prov_$Class$PowChange value = 10 }
	
	# Clamp range to 0-100
	if = {
		limit = {
			check_key = { lhs = Prov_$Class$Pow value = 100 }
		}
		set_key = { lhs = Prov_$Class$Pow value = 100 }
	}
	else_if = {
		limit = {
			NOT = {
				check_key = { lhs = Prov_$Class$Pow value = 0 }
			}
		}
		set_key = { lhs = Prov_$Class$Pow value = 0 }
	}
}
#
