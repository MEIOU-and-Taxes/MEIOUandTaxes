Prod_DoMain = {
    regiongroup = {
        region = {
            limit = {
                isValidProv = yes
            }
            set_key = { lhs = SF_IncomeProd value = 0 }
            set_key = { lhs = NM_IncomeProd value = 0 }
            set_key = { lhs = RE_IncomeProd value = 0 }
            set_key = { lhs = NO_IncomeProd value = 0 }
            set_key = { lhs = BG_IncomeProd value = 0 }
            set_key = { lhs = CL_IncomeProd value = 0 }
            set_key = { lhs = LT_IncomeProd value = 0 }

            if = {
                limit = {
                    NOT = { has_global_flag = POP_Sim10 } ## allow iter 100
                }
				Prod_DoCheck = { slot = 0 }
				Prod_DoCheck = { slot = 1 }
				Prod_DoCheck = { slot = 2 }
				Prod_DoCheck = { slot = 3 }
				Prod_DoCheck = { slot = 4 }
				Prod_DoCheck = { slot = 5 }
				Prod_DoCheck = { slot = 6 }
				Prod_DoCheck = { slot = 7 }
				Prod_DoCheck = { slot = 8 }
				Prod_DoCheck = { slot = 9 }
				Prod_DoCheck = { slot = 10 }
				Prod_DoCheck = { slot = 11 }
				Prod_DoCheck = { slot = 12 }
				Prod_DoCheck = { slot = 13 }
				Prod_DoCheck = { slot = 14 }
				Prod_DoCheck = { slot = 15 }
			}

            if = {
                limit = {
                    NOT = { has_global_flag = POP_Sim }
                }
                Prod_DoSoph = { slot = 0 }
                Prod_DoSoph = { slot = 1 }
                Prod_DoSoph = { slot = 2 }
                Prod_DoSoph = { slot = 3 }
                Prod_DoSoph = { slot = 4 }
                Prod_DoSoph = { slot = 5 }
                Prod_DoSoph = { slot = 6 }
                Prod_DoSoph = { slot = 7 }
                Prod_DoSoph = { slot = 8 }
                Prod_DoSoph = { slot = 9 }
                Prod_DoSoph = { slot = 10 }
                Prod_DoSoph = { slot = 11 }
                Prod_DoSoph = { slot = 12 }
                Prod_DoSoph = { slot = 13 }
                Prod_DoSoph = { slot = 14 }
                Prod_DoSoph = { slot = 15 }
            }

            Prod_ApplyFill = { slot = 0 }
            Prod_ApplyFill = { slot = 1 }
            Prod_ApplyFill = { slot = 2 }
            Prod_ApplyFill = { slot = 3 }
            Prod_ApplyFill = { slot = 4 }
            Prod_ApplyFill = { slot = 5 }
            Prod_ApplyFill = { slot = 6 }
            Prod_ApplyFill = { slot = 7 }
            Prod_ApplyFill = { slot = 8 }
            Prod_ApplyFill = { slot = 9 }
            Prod_ApplyFill = { slot = 10 }
            Prod_ApplyFill = { slot = 11 }
            Prod_ApplyFill = { slot = 12 }
            Prod_ApplyFill = { slot = 13 }
            Prod_ApplyFill = { slot = 14 }
            Prod_ApplyFill = { slot = 15 }

            Prod_SetSply = { slot = 0 }
            Prod_SetSply = { slot = 1 }
            Prod_SetSply = { slot = 2 }
            Prod_SetSply = { slot = 3 }
            Prod_SetSply = { slot = 4 }
            Prod_SetSply = { slot = 5 }
            Prod_SetSply = { slot = 6 }
            Prod_SetSply = { slot = 7 }
            Prod_SetSply = { slot = 8 }
            Prod_SetSply = { slot = 9 }
            Prod_SetSply = { slot = 10 }
            Prod_SetSply = { slot = 11 }
            Prod_SetSply = { slot = 12 }
            Prod_SetSply = { slot = 13 }
            Prod_SetSply = { slot = 14 }
            Prod_SetSply = { slot = 15 }

			### Reset vars
			Prod_LaborClassReset = { class=SF }
			Prod_LaborClassReset = { class=RE }
			Prod_LaborClassReset = { class=NM }
			Prod_LaborClassReset = { class=NO }
			Prod_LaborClassReset = { class=BG }
			Prod_LaborClassReset = { class=CL }
			Prod_LaborClassReset = { class=BU }

            Prod_DoLaborSum = { type = R LandCrop = yes infra = yes }
            Prod_DoLaborSum = { type = NM LandCrop = no }
            Prod_DoLaborSum = { type = UL LandCrop = no infra = yes }
            Prod_DoLaborSum = { type = NO LandCrop = no }
            Prod_DoLaborSum = { type = BG LandCrop = no }
            Prod_DoLaborSum = { type = CL LandCrop = no }
            Prod_DoLaborSum = { type = LT LandCrop = no }

            Prod_DoLaborSpend = yes

            Prod_DoLabor = { type = R class = SF BaseWage=4 WageMax=20 WageMaxMulti=5 infra = yes }
            Prod_DoLabor = { type = NM class = NM BaseWage=4 WageMax=25 WageMaxMulti=5 }
            Prod_DoLabor = { type = UL class = RE BaseWage=6 WageMax=30 WageMaxMulti=5 infra = yes }
            Prod_DoLabor = { type = NO class = NO BaseWage=6 WageMax=30 WageMaxMulti=5 }
            Prod_DoLabor = { type = BG class = BG BaseWage=6 WageMax=30 WageMaxMulti=5 }
            Prod_DoLabor = { type = CL class = CL BaseWage=6 WageMax=30 WageMaxMulti=5 }
            Prod_DoLabor = { type = LT class = LT BaseWage=6 WageMax=30 WageMaxMulti=5 }
			
			change_key = { lhs = RE_IncomeAcademicLabor which = LT_IncomeAcademicLabor }

            Prod_DoLand = { type = Agriculture }
            Prod_DoLand = { type = Forestry }
            Prod_DoLand = { type = Extraction }
            Prod_DoLand = { type = Fishery }
            Prod_DoLand = { type = Commercial }
            Prod_DoLand = { type = Industrial }
            Prod_DoLand = { type = Academic }

            Prod_SetSizeCur = { slot = 0 }
            Prod_SetSizeCur = { slot = 1 }
            Prod_SetSizeCur = { slot = 2 }
            Prod_SetSizeCur = { slot = 3 }
            Prod_SetSizeCur = { slot = 4 }
            Prod_SetSizeCur = { slot = 5 }
            Prod_SetSizeCur = { slot = 6 }
            Prod_SetSizeCur = { slot = 7 }
            Prod_SetSizeCur = { slot = 8 }
            Prod_SetSizeCur = { slot = 9 }
            Prod_SetSizeCur = { slot = 10 }
            Prod_SetSizeCur = { slot = 11 }
            Prod_SetSizeCur = { slot = 12 }
            Prod_SetSizeCur = { slot = 13 }
            Prod_SetSizeCur = { slot = 14 }
            Prod_SetSizeCur = { slot = 15 }

            Prod_SetDmnd = { slot = 0 }
            Prod_SetDmnd = { slot = 1 }
            Prod_SetDmnd = { slot = 2 }
            Prod_SetDmnd = { slot = 3 }
            Prod_SetDmnd = { slot = 4 }
            Prod_SetDmnd = { slot = 5 }
            Prod_SetDmnd = { slot = 6 }
            Prod_SetDmnd = { slot = 7 }
            Prod_SetDmnd = { slot = 8 }
            Prod_SetDmnd = { slot = 9 }
            Prod_SetDmnd = { slot = 10 }
            Prod_SetDmnd = { slot = 11 }
            Prod_SetDmnd = { slot = 12 }
            Prod_SetDmnd = { slot = 13 }
            Prod_SetDmnd = { slot = 14 }
            Prod_SetDmnd = { slot = 15 }

            Prod_SetGoldIncome = { slot = 0 }
            Prod_SetGoldIncome = { slot = 1 }
            Prod_SetGoldIncome = { slot = 2 }
            Prod_SetGoldIncome = { slot = 3 }
            Prod_SetGoldIncome = { slot = 4 }
            Prod_SetGoldIncome = { slot = 5 }
            Prod_SetGoldIncome = { slot = 6 }
            Prod_SetGoldIncome = { slot = 7 }
            Prod_SetGoldIncome = { slot = 8 }
            Prod_SetGoldIncome = { slot = 9 }
            Prod_SetGoldIncome = { slot = 10 }
            Prod_SetGoldIncome = { slot = 11 }
            Prod_SetGoldIncome = { slot = 12 }
            Prod_SetGoldIncome = { slot = 13 }
            Prod_SetGoldIncome = { slot = 14 }
            Prod_SetGoldIncome = { slot = 15 }

            set_key = { lhs = Tmp_0 value = 0 }
            set_key = { lhs = Tmp_1 value = 0 }
            set_key = { lhs = Tmp_2 value = 0 }
            set_key = { lhs = Tmp_3 value = 0 }
            set_key = { lhs = Tmp_4 value = 0 }
            set_key = { lhs = Tmp_5 value = 0 }
            set_key = { lhs = Tmp_7 value = 0 }
            set_key = { lhs = Tmp_8 value = 0 }
            set_key = { lhs = Tmp_9 value = 0 }		
            if = {
                limit = {
                    owner = {
                        ai = no
                    }
                    #always = yes
                }
                Calculate_Labor = yes
            }
        }
    }
}

Prod_SetGoldIncome = {
	if = {
		limit = {
			has_province_flag = Prod_S$slot$
			Prod_IsPrecious = { slot=$slot$ }
		}
		set_key = { lhs = Prod_S$slot$IncomeGold which = Prod_S$slot$Sply9 }
		multiply_key = { lhs = Prod_S$slot$IncomeGold value = 10 }
		if = {
			limit = {
				#always = no to disable
				has_global_flag = POP_Sim10
			}
			multiply_key = { lhs = Prod_S$slot$IncomeGold value = 0.666 }
		}
		set_key = { lhs = Prod_S$slot$Sply9 value = 0 }
	}
}

Prod_SetBuildingIncome = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
        }
		set_key = { lhs = Prod_S$slot$SpendPrp which = Prod_S$slot$IncomeProd }
		change_key = { lhs = Prod_S$slot$SpendPrp which = Prod_S$slot$IncomeGold }
		subtract_key = { lhs = Prod_S$slot$SpendPrp which = Prod_S$slot$Spend }
		
		if = {
			limit = {
				check_key = { lhs = Prod_S$slot$SpendPrp value = 0.001 }
			}
			if = {
				limit = {
					check_key = { lhs = Prod_S$slot$DmndBR value = 0.001 }
				}
				# nobles only give 10% of income, not 20%
				set_key = { lhs = Tmp_1 value = 100 }
				subtract_key = { lhs = Tmp_1 which = NO_PrpResources }
				multiply_key = { lhs = Tmp_1 value = 0.01 } # 100->1 scale, plus apply on a 0.1 multiplier

				set_key = { lhs = Tmp_0 value = 0.15 }
				multiply_key = { lhs = Tmp_0 which = Tmp_1 } # 100->1 scale, plus apply on a 0.1 multiplier

				set_key = { lhs = Tmp_2 value = 1 }
				subtract_key = { lhs = Tmp_2 which = Tmp_1 }
				multiply_key = { lhs = Tmp_2 value = 0.1 }
				change_key = { lhs = Tmp_0 which = Tmp_2 }
			}
			else_if = {
				limit = {
					check_key = { lhs = Prod_S$slot$DmndBG value = 0.001 }
				}
				# burghers share only 5% of profits, not 20%
				set_key = { lhs = Tmp_0 value = 0.1 }
			}
			else = { # residents need profit sharing
				set_key = { lhs = Tmp_0 value = 0.2 }
			}
			multiply_key = { lhs = Tmp_0 which = Prod_S$slot$SpendPrp }
			
			if = { limit = { check_key = { lhs = Prod_S$slot$DmndBR value = 0.001 } } change_key = { lhs = SF_IncomePrp which = Tmp_0 } }
			else_if = { limit = { check_key = { lhs = Prod_S$slot$DmndBNM value = 0.001 } } change_key = { lhs = NM_IncomePrp which = Tmp_0 } }
			else_if = { limit = { check_key = { lhs = Prod_S$slot$DmndBUL value = 0.001 } } change_key = { lhs = RE_IncomePrp which = Tmp_0 } }
			else_if = { limit = { check_key = { lhs = Prod_S$slot$DmndBNO value = 0.001 } } change_key = { lhs = NO_IncomePrp which = Tmp_0 } }
			else_if = { limit = { check_key = { lhs = Prod_S$slot$DmndBBG value = 0.001 } } change_key = { lhs = BG_IncomePrp which = Tmp_0 } }
			else_if = { limit = { check_key = { lhs = Prod_S$slot$DmndBCL value = 0.001 } } change_key = { lhs = CL_IncomePrp which = Tmp_0 } }
			else_if = { limit = { check_key = { lhs = Prod_S$slot$DmndBLT value = 0.001 } } change_key = { lhs = RE_IncomePrp which = Tmp_0 } }
			
			subtract_key = { lhs = Prod_S$slot$SpendPrp which = Tmp_0 }
			
			if = { limit = { has_province_flag = Prod_S$slot$DmndBAgriculture } change_key = { lhs = Building_AgricultureIncome which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBForestry } change_key = { lhs = Building_ForestryIncome which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBExtraction } change_key = { lhs = Building_ExtractionIncome which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBFishery } change_key = { lhs = Building_FisheryIncome which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBCommercial } change_key = { lhs = Building_CommercialIncome which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBIndustrial } change_key = { lhs = Building_IndustrialIncome which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBAcademic } change_key = { lhs = Building_AcademicIncome which = Prod_S$slot$SpendPrp } }

		}
		else = {
			if = { limit = { has_province_flag = Prod_S$slot$DmndBAgriculture } subtract_key = { lhs = Building_AgricultureLoss which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBForestry } subtract_key = { lhs = Building_ForestryLoss which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBExtraction } subtract_key = { lhs = Building_ExtractionLoss which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBFishery } subtract_key = { lhs = Building_FisheryLoss which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBCommercial } subtract_key = { lhs = Building_CommercialLoss which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBIndustrial } subtract_key = { lhs = Building_IndustrialLoss which = Prod_S$slot$SpendPrp } }
			else_if = { limit = { has_province_flag = Prod_S$slot$DmndBAcademic } subtract_key = { lhs = Building_AcademicLoss which = Prod_S$slot$SpendPrp } }
		}
	}
}

Prod_SumIncomeSpending = {
	[[class]
		if = {
			limit = {
				check_key = { lhs = $class$_Total value = 0.01 }
			}
			set_key = { lhs = $class$_IncomeResources which = $class$_IncomeAgriculture }
			change_key = { lhs = $class$_IncomeResources which = $class$_IncomeForestry }
			change_key = { lhs = $class$_IncomeResources which = $class$_IncomeExtraction }
			change_key = { lhs = $class$_IncomeResources which = $class$_IncomeFishery }
			set_key = { lhs = $class$_IncomeBuilding which = $class$_IncomeCommercial }
			change_key = { lhs = $class$_IncomeBuilding which = $class$_IncomeIndustrial }
			change_key = { lhs = $class$_IncomeBuilding which = $class$_IncomeAcademic }

			set_key = { lhs = $class$_SpendResources which = $class$_SpendAgriculture }
			change_key = { lhs = $class$_SpendResources which = $class$_SpendForestry }
			change_key = { lhs = $class$_SpendResources which = $class$_SpendExtraction }
			change_key = { lhs = $class$_SpendResources which = $class$_SpendFishery }
			set_key = { lhs = $class$_SpendBuilding which = $class$_SpendCommercial }
			change_key = { lhs = $class$_SpendBuilding which = $class$_SpendIndustrial }
			change_key = { lhs = $class$_SpendBuilding which = $class$_SpendAcademic }
		}
		else = {
			set_key = { lhs = $class$_IncomeResources value = 0 }
			set_key = { lhs = $class$_IncomeBuilding value = 0 }
			set_key = { lhs = $class$_SpendResources value = 0 }
			set_key = { lhs = $class$_SpendBuilding value = 0 }
		}
	]
	[[powerbroker]
		set_key = { lhs = $powerbroker$_IncomeResources which = $powerbroker$_IncomeAgriculture }
		change_key = { lhs = $powerbroker$_IncomeResources which = $powerbroker$_IncomeForestry }
		change_key = { lhs = $powerbroker$_IncomeResources which = $powerbroker$_IncomeExtraction }
		change_key = { lhs = $powerbroker$_IncomeResources which = $powerbroker$_IncomeFishery }
		set_key = { lhs = $powerbroker$_IncomeBuilding which = $powerbroker$_IncomeCommercial }
		change_key = { lhs = $powerbroker$_IncomeBuilding which = $powerbroker$_IncomeIndustrial }
		change_key = { lhs = $powerbroker$_IncomeBuilding which = $powerbroker$_IncomeAcademic }

		set_key = { lhs = $powerbroker$_SpendResources which = $powerbroker$_SpendAgriculture }
		change_key = { lhs = $powerbroker$_SpendResources which = $powerbroker$_SpendForestry }
		change_key = { lhs = $powerbroker$_SpendResources which = $powerbroker$_SpendExtraction }
		change_key = { lhs = $powerbroker$_SpendResources which = $powerbroker$_SpendFishery }
		set_key = { lhs = $powerbroker$_SpendBuilding which = $powerbroker$_SpendCommercial }
		change_key = { lhs = $powerbroker$_SpendBuilding which = $powerbroker$_SpendIndustrial }
		change_key = { lhs = $powerbroker$_SpendBuilding which = $powerbroker$_SpendAcademic }
	]
}

Prod_SetPrpIncome = {
	set_key = { lhs = SF_Income$type$ value = 0 }
	set_key = { lhs = NM_Income$type$ value = 0 }
	set_key = { lhs = RE_Income$type$ value = 0 }
	set_key = { lhs = NO_Income$type$ value = 0 }
	set_key = { lhs = BG_Income$type$ value = 0 }
	set_key = { lhs = CL_Income$type$ value = 0 }
	set_key = { lhs = BU_Income$type$ value = 0 }
    if = {
        limit = {
            check_key = { lhs = Building_$type$ value = 0.001 }
        }
        set_key = { lhs = Tmp_0 which = Building_$type$Income }
        divide_key = { lhs = Tmp_0 which = Building_$type$ }

        Prod_SetPrpIncomeHelper = { class = SF type = $type$ }
        Prod_SetPrpIncomeHelper = { class = NM type = $type$ }
        Prod_SetPrpIncomeHelper = { class = RE type = $type$ }
        Prod_SetPrpIncomeHelper = { class = NO type = $type$ }
        Prod_SetPrpIncomeHelper = { class = BG type = $type$ }
        Prod_SetPrpIncomeHelper = { class = CL type = $type$ }
        Prod_SetPrpIncomeHelper = { class = BU type = $type$ }
    }
}

Prod_SetPrpIncomeHelper = {
    if = {
        limit = {
            check_key = { lhs = $class$_$type$ value = 0.001 }
        }
        set_key = { lhs = $class$_Income$type$ which = Tmp_0 }
        multiply_key = { lhs = $class$_Income$type$ which = $class$_$type$ }
        change_key = { lhs = $class$_IncomePrp which = $class$_Income$type$ }
    }
}

Prod_Disp = {
	set_key = { lhs = ProdT_Size value = 0 } # Total
	set_key = { lhs = ProdR_Size value = 0 } # Rural
	set_key = { lhs = ProdU_Size value = 0 } # Urban
	set_key = { lhs = ProdE_Size value = 0 } # Elite
	set_key = { lhs = ProdT_SizeSum value = 0 }
	set_key = { lhs = ProdR_SizeSum value = 0 }
	set_key = { lhs = ProdU_SizeSum value = 0 }
	set_key = { lhs = ProdE_SizeSum value = 0 }
	set_key = { lhs = ProdT_Throughput value = 0 }
	set_key = { lhs = ProdR_Throughput value = 0 }
	set_key = { lhs = ProdU_Throughput value = 0 }
	set_key = { lhs = ProdE_Throughput value = 0 }
	set_key = { lhs = ProdT_Soph value = 0 }
	set_key = { lhs = ProdR_Soph value = 0 }
	set_key = { lhs = ProdU_Soph value = 0 }
	set_key = { lhs = ProdE_Soph value = 0 }
	set_key = { lhs = ProdT_Income value = 0 }
	set_key = { lhs = ProdR_Income value = 0 }
	set_key = { lhs = ProdU_Income value = 0 }
	set_key = { lhs = ProdE_Income value = 0 }
	set_key = { lhs = ProdT_Spend value = 0 }
	set_key = { lhs = ProdR_Spend value = 0 }
	set_key = { lhs = ProdU_Spend value = 0 }
	set_key = { lhs = ProdE_Spend value = 0 }
	set_key = { lhs = ProdT_ProfitPerc value = 0 }
	set_key = { lhs = ProdR_ProfitPerc value = 0 }
	set_key = { lhs = ProdU_ProfitPerc value = 0 }
	set_key = { lhs = ProdE_ProfitPerc value = 0 }
	
	Prod_DispHelper = { slot = 0 }
	Prod_DispHelper = { slot = 1 }
	Prod_DispHelper = { slot = 2 }
	Prod_DispHelper = { slot = 3 }
	Prod_DispHelper = { slot = 4 }
	Prod_DispHelper = { slot = 5 }
	Prod_DispHelper = { slot = 6 }
	Prod_DispHelper = { slot = 7 }
	Prod_DispHelper = { slot = 8 }
	Prod_DispHelper = { slot = 9 }
	Prod_DispHelper = { slot = 10 }
	Prod_DispHelper = { slot = 11 }
	Prod_DispHelper = { slot = 12 }
	Prod_DispHelper = { slot = 13 }
	Prod_DispHelper = { slot = 14 }
	Prod_DispHelper = { slot = 15 }
	
	Prod_DispHandler = { type=T }
	Prod_DispHandler = { type=R }
	Prod_DispHandler = { type=U }
	Prod_DispHandler = { type=E }
}
Prod_DispHelper = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
		}
        #throughtput is a measure of an 'abstract' size divided by the real size. If the abstract is higher than the real it means that industry is over producing, whereas as if the size is lower, it's under producing.
		
		if = {
			limit = {
				check_key = { lhs = Prod_S$slot$SizeCur value = 0.001 }
			}
			set_key = { lhs = Prod_S$slot$Throughput which = Prod_S$slot$SizeCur }
			divide_key = { lhs = Prod_S$slot$Throughput which = Prod_S$slot$Size }
			multiply_key = { lhs = Prod_S$slot$Throughput value = 100 }
		}
		else = {
			set_key = { lhs = Prod_S$slot$Throughput value = 0 }
		}
		set_key = { lhs = Prod_S$slot$SpendDisp which = Prod_S$slot$Spend }

		set_key = { lhs = Tmp_3 which = Prod_S$slot$SizeCur } # Throughput
		change_key = { lhs = Tmp_3 value = 1 } # Overflow protection
		
		change_key = { lhs = ProdT_Size which = Prod_S$slot$Size } # Total
		change_key = { lhs = ProdT_SizeSum which = Tmp_3 } # Total
		
		set_key = { lhs = Tmp_0 which = Prod_S$slot$Throughput } # Throughput
		multiply_key = { lhs = Tmp_0 which = Tmp_3 } # Size Weighted
		multiply_key = { lhs = Tmp_0 value = 0.1 } # Overflow
		change_key = { lhs = ProdT_Throughput which = Tmp_0 } # Total
		
		set_key = { lhs = Tmp_1 which = Prod_S$slot$Soph } # Soph = Sophistication = Skill
		multiply_key = { lhs = Tmp_1 which = Tmp_3 } # Size Weighted
		multiply_key = { lhs = Tmp_1 value = 0.1 } # Overflow
		change_key = { lhs = ProdT_Soph which = Tmp_1 } # Total
		
		change_key = { lhs = ProdT_Income which = Prod_S$slot$Income } # Total
		change_key = { lhs = ProdT_Spend which = Prod_S$slot$SpendDisp } # Total
		if = { # Rural
			limit = {
				OR = {
					NOT = { check_key = { lhs = Prod_S$slot$ value = 24 } }
					is_key_equal = { lhs = Prod_S$slot$ value = 38 }
					check_key = { lhs = Prod_S$slot$ value = 41 }
				}
			}
			change_key = { lhs = ProdR_Size which = Prod_S$slot$Size }
			change_key = { lhs = ProdR_SizeSum which = Tmp_3 }
			change_key = { lhs = ProdR_Throughput which = Tmp_0 }
			change_key = { lhs = ProdR_Soph which = Tmp_1 }
			change_key = { lhs = ProdR_Income which = Prod_S$slot$Income }
			change_key = { lhs = ProdR_Spend which = Prod_S$slot$SpendDisp }
		}
		else_if = { # Urban
			limit = {
				OR = {
					AND = {
						check_key = { lhs = Prod_S$slot$ value = 24 }
						NOT = { check_key = { lhs = Prod_S$slot$ value = 29 } }
					}
					AND = {
						check_key = { lhs = Prod_S$slot$ value = 33 }
						NOT = { check_key = { lhs = Prod_S$slot$ value = 41 } }
					}
				}
				NOT = {
					is_key_equal = { lhs = Prod_S$slot$ value = 38 } # a rural one
				}
			}
			change_key = { lhs = ProdU_Size which = Prod_S$slot$Size }
			change_key = { lhs = ProdU_SizeSum which = Tmp_3 }
			change_key = { lhs = ProdU_Throughput which = Tmp_0 }
			change_key = { lhs = ProdU_Soph which = Tmp_1 }
			change_key = { lhs = ProdU_Income which = Prod_S$slot$Income }
			change_key = { lhs = ProdU_Spend which = Prod_S$slot$SpendDisp }
		}
		else_if = { # Elite
			limit = {
				check_key = { lhs = Prod_S$slot$ value = 29 }
				NOT = { check_key = { lhs = Prod_S$slot$ value = 33 } }
			}
			change_key = { lhs = ProdE_Size which = Prod_S$slot$Size }
			change_key = { lhs = ProdE_SizeSum which = Tmp_3 }
			change_key = { lhs = ProdE_Throughput which = Tmp_0 }
			change_key = { lhs = ProdE_Soph which = Tmp_1 }
			change_key = { lhs = ProdE_Income which = Prod_S$slot$Income }
			change_key = { lhs = ProdE_Spend which = Prod_S$slot$SpendDisp }
		}
		
		set_key = { lhs = Tmp_0 value = 0 }
		set_key = { lhs = Tmp_1 value = 0 }
		set_key = { lhs = Tmp_2 value = 0 }
		set_key = { lhs = Tmp_3 value = 0 }
	}
}
Prod_DispHandler = {
	if = {
		limit = {
			check_key = { lhs = Prod$type$_Size value = 0.001 }
		}
		divide_key = { lhs = Prod$type$_Throughput which = Prod$type$_SizeSum }
		divide_key = { lhs = Prod$type$_Soph which = Prod$type$_SizeSum }
		
		if = {
			limit = {
				check_key = { lhs = Prod$type$_Spend value = 0.001 }
			}
			set_key = { lhs = Prod$type$_ProfitPerc which = Prod$type$_Income }
			subtract_key = { lhs = Prod$type$_ProfitPerc which = Prod$type$_Spend }
			divide_key = { lhs = Prod$type$_ProfitPerc which = Prod$type$_Spend }
			multiply_key = { lhs = Prod$type$_ProfitPerc value = 100 }
		}
		else = {
			set_key = { lhs = Prod$type$_ProfitPerc value = 0 }
		}
		
		# Undo overflow protection
		multiply_key = { lhs = Prod$type$_Throughput value = 10 }
		multiply_key = { lhs = Prod$type$_Soph value = 10 }
	}
	else = {
		set_key = { lhs = Prod$type$_Throughput value = 0 }
		set_key = { lhs = Prod$type$_Soph value = 0 }
		set_key = { lhs = Prod$type$_ProfitPerc value = 0 }
	}
	set_key = { lhs = Prod$type$_SizeSum value = 0 }
}

Prod_DoCheck = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
			
			OR = {
				AND = {
					check_key = { lhs = Prod_S$slot$DmndBR value = 0.01 }
					OR = {
						AND = {
							check_key = { lhs = SF_Total value = 10 }
							NOT = { check_key = { lhs = Prod_S$slot$Size value = 1 } }
						}
						AND = {
							NOT = { check_key = { lhs = SF_Total value = 10 } }
							NOT = { check_key = { lhs = Prod_S$slot$Size value = 0.05 } }
						}
					}
				}
				AND = {
					check_key = { lhs = Prod_S$slot$DmndBNM value = 0.01 }
					NOT = { check_key = { lhs = Prod_S$slot$Size value = 0.05 } }
				}
				AND = {
					check_key = { lhs = Prod_S$slot$DmndBUL value = 0.01 }
					OR = {
						AND = {
							check_key = { lhs = RE_Total value = 10 }
							NOT = { check_key = { lhs = Prod_S$slot$Size value = 1 } }
						}
						AND = {
							NOT = { check_key = { lhs = RE_Total value = 10 } }
							NOT = { check_key = { lhs = Prod_S$slot$Size value = 0.05 } }
						}
					}
				}
				AND = {
					check_key = { lhs = Prod_S$slot$DmndBLT value = 0.01 }
					NOT = { check_key = { lhs = Prod_S$slot$Size value = 0.05 } }
				}
				AND = {
					check_key = { lhs = Prod_S$slot$DmndBBG value = 0.01 }
					NOT = { check_key = { lhs = Prod_S$slot$Size value = 0.05 } }
				}
				AND = {
					check_key = { lhs = Prod_S$slot$DmndBCL value = 0.01 }
					NOT = { check_key = { lhs = Prod_S$slot$Size value = 0.05 } }
				}
			}
			# OR = {
			# 	NOT = { is_key_equal = { lhs = Prod_S$slot$ value = 24 } }
			# 	NOT = { check_key = { lhs = RE_Total value = 2 } }
			# }
			# OR = {
			# 	NOT = { is_key_equal = { lhs = Prod_S$slot$ value = 25 } }
			# 	NOT = { check_key = { lhs = RE_Total value = 2 } }
			# }
			OR = {
				NOT = { is_key_equal = { lhs = Prod_S$slot$ value = 32 } }
				NOT = { check_key = { lhs = Building_Commercial value = 1 } }
			}
        }
        Public_PopSlot = { slot = $slot$ }
    }
}

Prod_DoSoph = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
        }
		#### Base limit to skill to 100
		#multiply_key = { lhs = Prod_S$slot$Soph value = 0.99 }	

		### Temporary uplift of all skill to 75 if not there, until slot opening is changed
		if = {
            limit = {
                NOT = {
                    check_key = { lhs = Prod_S$slot$Soph value = 75 } #75%
                }
            }
			change_key = { lhs = Prod_S$slot$Soph value = 75 }
        }
		
		if = {
            limit = {
                NOT = {
                    check_key = { lhs = Prod_S$slot$ value = 6 } #Crops
                }
            }
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
        }
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 6 } #Fishery
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				check_key = { lhs = Prod_S$slot$ value = 7 } #Pasture and Nomad Pasture
				NOT = {
					check_key = { lhs = Prod_S$slot$ value = 9 }
				}
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 9 } #SeaSalt
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 10 } #RockSalt
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
        else_if = {
            limit = {
				check_key = { lhs = Prod_S$slot$ value = 11 } #PlantFiber and Dyes
				NOT = {
					check_key = { lhs = Prod_S$slot$ value = 13 }
				}
            }
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
        }
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 13 } #Timber
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 14 } #Coal
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 15 } #Metal
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				check_key = { lhs = Prod_S$slot$ value = 16 } #Rare, Gold, Silver
				
				NOT = {
					check_key = { lhs = Prod_S$slot$ value = 19 }
				}
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 19 } #Cashcrop
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 20 } #Spices
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 21 } #Game
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 24 } #Houseware
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 25 } #Textile
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 26 } #Armaments
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 27 } #Ship
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 28 } #Processed
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = { 
				is_key_equal = { lhs = Prod_S$slot$ value = 29 } #Religious Knowledge
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 30 } #HigherLearning
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 32 } #UrbanCommerce
			}
			change_key = { lhs = Prod_S$slot$Soph which = Modi_TradeSkill }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 33 } #Silk
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 34 } #Chinaware
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 35 } #Carpet
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 36 } #Glass
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 39 } #Luxury Cloth
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 40 } #Steel
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 41 } #Marble
			}
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
		}
        else_if = {
            limit = {
                is_key_equal = { lhs = Prod_S$slot$ value = 42 } #Sericulture
            }
			change_key = { lhs = Prod_S$slot$Soph value = 1 }
        }		
    }
}

Prod_SophCap = { #Multiply modifier with 100 and then compare to current skill in slot, if below continue, if above shrink
	set_key = { lhs = Tmp_9 which = Modi_$skill$Skill }
	multiply_key = { lhs = Tmp_9 value = 100 }
	if = {
		limit = {
			check_key = { lhs = Tmp_9 which = Prod_S$slot$Soph }
		}
		multiply_key = { lhs = Prod_S$slot$Soph value = 0.99 }
	}	

Prod_ApplyFill = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
        }
        set_key = { lhs = Tmp_0 value = 50 }
        set_key = { lhs = Tmp_1 value = 50 }

        Prod_SetFillHelper = { slot = $slot$ prod = 1 }
        Prod_SetFillHelper = { slot = $slot$ prod = 2 }
        Prod_SetFillHelper = { slot = $slot$ prod = 4 }
        Prod_SetFillHelper = { slot = $slot$ prod = 5 }
        Prod_SetFillHelper = { slot = $slot$ prod = 6 }
        Prod_SetFillHelper = { slot = $slot$ prod = 9 }
        Prod_SetFillHelper = { slot = $slot$ prod = 10 }
        Prod_SetFillHelper = { slot = $slot$ prod = 21 }
        Prod_SetFillHelper = { slot = $slot$ prod = 22 }
        Prod_SetFillHelper = { slot = $slot$ prod = 23 }
        Prod_SetFillHelper = { slot = $slot$ prod = 24 }
        Prod_SetFillHelper = { slot = $slot$ prod = 25 }
        Prod_SetFillHelper = { slot = $slot$ prod = 41 }

		if = {
			limit = {
				check_key = { lhs = Tmp_1 value = 0.001 }
			}
			divide_key = { lhs = Tmp_0 which = Tmp_1 }
		}
        multiply_key = { lhs = Prod_S$slot$SizeCur which = Tmp_0 }
    }
}
Prod_SetSply = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
        }
        #set_key = { lhs = Tmp_0 value = 500 }
        #change_key = { lhs = Tmp_0 which = Prod_S$slot$Soph } # At 100 skill it's 1.20 base output. At 0 just 1.
        #divide_key = { lhs = Tmp_0 value = 500 }
		set_key = { lhs = Tmp_0 value = 1 } # Setting this to one, to not refactor the usage of Tmp_0 right now.

        Prod_SetSplyHelper = { slot = $slot$ prod = 1 type = Rural LandCrop = yes }
        Prod_SetSplyHelper = { slot = $slot$ prod = 2 type = Rural LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 4 type = Rural LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 5 type = Rural LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 6 type = Rural LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 9 type = Rural LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 10 type = Rural LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 21 type = Urban LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 22 type = Urban LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 23 type = Urban LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 24 type = Urban LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 25 type = Urban LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 41 type = Knowledge LandCrop = no }
        Prod_SetSplyHelper = { slot = $slot$ prod = 51 type = Trade LandCrop = no Modi=Modi_CommerceNatural }
        if = {
            limit = {
                NOT = {
                    check_key = { lhs = Prod_S$slot$ value = 6 }
                }
            }
			multiply_key = { lhs = Prod_S$slot$Sply1 which = Modi_FarmOutput }
        }
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 6 }
			}
			multiply_key = { lhs = Prod_S$slot$Sply1 which = Modi_FishingOutput }
		}
		else_if = {
			limit = {
				check_key = { lhs = Prod_S$slot$ value = 7 }
				NOT = {
					check_key = { lhs = Prod_S$slot$ value = 9 }
				}
			}
			multiply_key = { lhs = Prod_S$slot$Sply1 which = Modi_PastureOutput }
			multiply_key = { lhs = Prod_S$slot$Sply4 which = Modi_PastureOutput }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 10 }
			}
			multiply_key = { lhs = Prod_S$slot$Sply2 which = Modi_MineOutput }
		}
        else_if = {
            limit = {
				check_key = { lhs = Prod_S$slot$ value = 11 }
				NOT = {
					check_key = { lhs = Prod_S$slot$ value = 13 }
				}
            }
			multiply_key = { lhs = Prod_S$slot$Sply4 which = Modi_FarmOutput }
        }
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 14 }
			}
			multiply_key = { lhs = Prod_S$slot$Sply5 which = Modi_MineOutput }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 15 }
			}
			multiply_key = { lhs = Prod_S$slot$Sply6 which = Modi_MineOutput }
		}
		else_if = {
			limit = {
				check_key = { lhs = Prod_S$slot$ value = 16 }
				
				NOT = {
					check_key = { lhs = Prod_S$slot$ value = 19 }
				}
			}
			multiply_key = { lhs = Prod_S$slot$Sply9 which = Modi_MineOutput }
			multiply_key = { lhs = Prod_S$slot$Sply25 which = Modi_MineOutput }
			if = {
				limit = {
					OR = {
						continent = north_america
						continent = south_america
					}
					NOT = { Banking = 100 }
				}
				multiply_key = { lhs = Prod_S$slot$Sply9 value = 0.25 }
				multiply_key = { lhs = Prod_S$slot$Sply25 value = 4 }
			}
			else_if = {
				limit = {
					continent = africa
					NOT = { Banking = 100 }
				}
				multiply_key = { lhs = Prod_S$slot$Sply9 value = 0.25 }
				multiply_key = { lhs = Prod_S$slot$Sply25 value = 4 }
			}
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 19 }
			}
			multiply_key = { lhs = Prod_S$slot$Sply1 which = Modi_FarmOutput } ### does it work?
			multiply_key = { lhs = Prod_S$slot$Sply9 which = Modi_FarmOutput } ### does it work?
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 21 }
			}
			multiply_key = { lhs = Prod_S$slot$Sply1 which = Modi_GameOutput }
			multiply_key = { lhs = Prod_S$slot$Sply2 which = Modi_GameOutput }
			multiply_key = { lhs = Prod_S$slot$Sply4 which = Modi_GameOutput }
			multiply_key = { lhs = Prod_S$slot$Sply5 which = Modi_GameOutput }
			multiply_key = { lhs = Prod_S$slot$Sply6 which = Modi_GameOutput }
			multiply_key = { lhs = Prod_S$slot$Sply9 which = Modi_GameOutput }
		}
		else_if = {
			limit = { 
				is_key_equal = { lhs = Prod_S$slot$ value = 29 } 
			}
			multiply_key = { lhs = Prod_S$slot$Sply41 which = Modi_ReligiousKnowledgeOutput }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 30 }
			}
			multiply_key = { lhs = Prod_S$slot$Sply41 which = Modi_KnowledgeOutput }
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 41 }
			}
			multiply_key = { lhs = Prod_S$slot$Sply6 which = Modi_MineOutput }
			multiply_key = { lhs = Prod_S$slot$Sply9 which = Modi_MineOutput }
		}
        else_if = {
            limit = {
                is_key_equal = { lhs = Prod_S$slot$ value = 42 }
            }
			multiply_key = { lhs = Prod_S$slot$Sply4 which = Modi_FarmOutput }
			multiply_key = { lhs = Prod_S$slot$Sply9 which = Modi_FarmOutput }
			multiply_key = { lhs = Prod_S$slot$Sply25 which = Modi_FarmOutput }
        }
        if = {
            limit = {
				is_key_equal = { lhs = Prod_S$slot$ value = 8 } # Nomad
            }
			multiply_key = { lhs = Prod_S$slot$Sply1 which = Modi_NomadicOutput }
			multiply_key = { lhs = Prod_S$slot$Sply2 which = Modi_NomadicOutput }
			multiply_key = { lhs = Prod_S$slot$Sply4 which = Modi_NomadicOutput }
			multiply_key = { lhs = Prod_S$slot$Sply5 which = Modi_NomadicOutput }
			multiply_key = { lhs = Prod_S$slot$Sply6 which = Modi_NomadicOutput }
			multiply_key = { lhs = Prod_S$slot$Sply22 which = Modi_NomadicOutput }
        }
        else_if = {
            limit = {
                NOT = { 
					OR = {
						is_key_equal = { lhs = Prod_S$slot$ value = 7 } # Pasture
						is_key_equal = { lhs = Prod_S$slot$ value = 21 } # Game
					}
				}
            }
			multiply_key = { lhs = Prod_S$slot$Sply1 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply2 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply4 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply5 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply6 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply9 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply10 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply21 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply22 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply23 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply24 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply25 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply41 which = Modi_SettledOutput }
			multiply_key = { lhs = Prod_S$slot$Sply51 which = Modi_SettledOutput }
        }
		#if = {
		#	limit = {
		#		OR = {
		#			is_key_equal = { lhs = Prod_S$slot$ value = 8 }
		#			# is_key_equal = { lhs = Prod_S$slot$ value = 13 } Timber no longer produces raw
		#			is_key_equal = { lhs = Prod_S$slot$ value = 21 }
		#		}
		#	}
		#	set_key = { lhs = Tmp_0 which = TN_ProvPrc5 }
		#	set_key = { lhs = Tmp_1 which = TN_ProvPrc6 }
		#	
		#	multiply_key = { lhs = Tmp_0 which = Tmp_0 }
		#	multiply_key = { lhs = Tmp_1 which = Tmp_1 }
		#	
		#	multiply_key = { lhs = Prod_S$slot$Sply5 which = Tmp_0 }
		#	multiply_key = { lhs = Prod_S$slot$Sply6 which = Tmp_1 }
		#	
		#	change_key = { lhs = Tmp_0 which = Tmp_1 }
		#	
		#	divide_key = { lhs = Prod_S$slot$Sply5 which = Tmp_0 }
		#	divide_key = { lhs = Prod_S$slot$Sply6 which = Tmp_0 }
		#}
		## Should balance fuel and timber
		if = {
			limit = {
					is_key_equal = { lhs = Prod_S$slot$ value = 13 }
			}
			set_key = { lhs = Tmp_0 which = TN_ProvPrc5 }
			set_key = { lhs = Tmp_1 which = TN_ProvPrc10 }
			
			multiply_key = { lhs = Tmp_0 which = Tmp_0 }
			multiply_key = { lhs = Tmp_1 which = Tmp_1 }
			
			multiply_key = { lhs = Prod_S$slot$Sply5 which = Tmp_0 }
			multiply_key = { lhs = Prod_S$slot$Sply10 which = Tmp_1 }
			
			change_key = { lhs = Tmp_0 which = Tmp_1 }
			
			divide_key = { lhs = Prod_S$slot$Sply5 which = Tmp_0 }
			multiply_key = { lhs = Prod_S$slot$Sply5 value = 2 }
			divide_key = { lhs = Prod_S$slot$Sply10 which = Tmp_0 }
			multiply_key = { lhs = Prod_S$slot$Sply10 value = 2 }
		}
		if = {
			limit = { ## Cottage scaling
				is_key_equal = { lhs = Prod_S$slot$ value = 38 }
				NOT =  { is_key_equal = { lhs = Prod_S$slot$Sply21 value = 0 } }
				NOT =  { is_key_equal = { lhs = Prod_S$slot$Sply22 value = 0 } }
				NOT =  { is_key_equal = { lhs = Prod_S$slot$Sply24 value = 0 } }
				
			}
			set_key = { lhs = Tmp_1 which = TN_ProvPrc21 }
			set_key = { lhs = Tmp_2 which = TN_ProvPrc22 }
			set_key = { lhs = Tmp_3 which = TN_ProvPrc24 }
			
			multiply_key = { lhs = Tmp_1 which = Tmp_1 }
			multiply_key = { lhs = Tmp_2 which = Tmp_2 }
			multiply_key = { lhs = Tmp_3 which = Tmp_3 }
			
			multiply_key = { lhs = Prod_S$slot$Sply21 which = Tmp_1 }
			multiply_key = { lhs = Prod_S$slot$Sply22 which = Tmp_2 }
			multiply_key = { lhs = Prod_S$slot$Sply24 which = Tmp_3 }
			
			change_key = { lhs = Tmp_1 which = Tmp_2 }
			change_key = { lhs = Tmp_1 which = Tmp_3 }
			
			divide_key = { lhs = Prod_S$slot$Sply21 which = Tmp_1 }
			divide_key = { lhs = Prod_S$slot$Sply22 which = Tmp_1 }
			divide_key = { lhs = Prod_S$slot$Sply24 which = Tmp_1 }
			if = {
				limit = {
					Banking = 100
				}
				multiply_key = { lhs = Prod_S$slot$Sply21 value = 0.5 }
				multiply_key = { lhs = Prod_S$slot$Sply22 value = 0.5 }
				multiply_key = { lhs = Prod_S$slot$Sply24 value = 0.5 }
			}					
		}
		
		# Set display vars
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 1 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 2 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 4 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 5 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 6 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 9 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 10 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 21 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 22 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 23 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 24 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 25 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 41 }
        Prod_SetSplyHelper2 = { slot = $slot$ prod = 51 }
    }
}

Prod_DoLaborHelper1 = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
            check_key = { lhs = Prod_S$slot$DmndB$type$ value = 0.001 }
        }
		# Load up last year's values
		set_key = { lhs = Prod_S$slot$DmndF$type$ which = Prod_S$slot$Dmnd$type$ } 
		set_key = { lhs = Prod_S$slot$DmndL$type$ which = Prod_S$slot$DmndL1$type$ }
		set_key = { lhs = Prod_S$slot$DmndC$type$ which = Prod_S$slot$DmndC1$type$ }
		
        set_key = { lhs = Tmp_1 which = Prod_S$slot$Soph } # Skill reduces labour inputs
		multiply_key = { lhs = Tmp_1 value = 0.2 }
        change_key = { lhs = Tmp_1 value = 100 }

        set_key = { lhs = Prod_S$slot$Dmnd$type$ value = 100 }
        divide_key = { lhs = Prod_S$slot$Dmnd$type$ which = Tmp_1 }
        if = {
            limit = {
				always = $LandCrop$
                is_key_equal = { lhs = Prod_S$slot$ value = 1 }
            }
       		multiply_key = { lhs = Prod_S$slot$Dmnd$type$ which = Land_CropLabour } # dynamic labor cost from Land System
			multiply_key = { lhs = Prod_S$slot$Dmnd$type$ value = 0.1 }
		}
		else = {
			multiply_key = { lhs = Prod_S$slot$Dmnd$type$ which = Prod_S$slot$DmndB$type$ } # labour cost hardcoded from SYS-Prod_Misc
		}
        multiply_key = { lhs = Prod_S$slot$Dmnd$type$ which = Prod_S$slot$Size }
        set_key = { lhs = Prod_S$slot$DmndL1$type$ which = Prod_S$slot$Dmnd$type$ } # save and store in slot 1

        change_key = { lhs = Class_$type$LaborTotal which = Prod_S$slot$Dmnd$type$ }
		if = {
			limit = {
				check_key = { lhs = Prod_S$slot$DmndBAgriculture value = 0.001 }
			}
        	change_key = { lhs = Public_Tmp1 which = Prod_S$slot$Dmnd$type$ }
		}
		else_if = {
			limit = {
				check_key = { lhs = Prod_S$slot$DmndBForestry value = 0.001 }
			}
        	change_key = { lhs = Public_Tmp2 which = Prod_S$slot$Dmnd$type$ }
		}
		else_if = {
			limit = {
				check_key = { lhs = Prod_S$slot$DmndBExtraction value = 0.001 }
			}
        	change_key = { lhs = Public_Tmp3 which = Prod_S$slot$Dmnd$type$ }
		}
		else_if = {
			limit = {
				check_key = { lhs = Prod_S$slot$DmndBFishery value = 0.001 }
			}
        	change_key = { lhs = Public_Tmp4 which = Prod_S$slot$Dmnd$type$ }
		}
		else_if = {
			limit = {
				check_key = { lhs = Prod_S$slot$DmndBIndustrial value = 0.001 }
			}
        	change_key = { lhs = Public_Tmp5 which = Prod_S$slot$Dmnd$type$ }
		}
		else_if = {
			limit = {
				check_key = { lhs = Prod_S$slot$DmndBCommercial value = 0.001 }
			}
        	change_key = { lhs = Public_Tmp6 which = Prod_S$slot$Dmnd$type$ }
		}
		else_if = {
			limit = {
				check_key = { lhs = Prod_S$slot$DmndBAcademic value = 0.001 }
			}
        	change_key = { lhs = Public_Tmp7 which = Prod_S$slot$Dmnd$type$ }
		}
		set_key = { lhs = Prod_S$slot$SpendL value = 0 }
    }
}

Prod_DoLaborHelper2 = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
            check_key = { lhs = Prod_S$slot$Dmnd$type$ value = 0.001 }
        }
        multiply_key = { lhs = Prod_S$slot$Dmnd$type$ which = Prod_Fill$type$ }
		multiply_key = { lhs = Prod_S$slot$Dmnd$type$ value = 0.01 }

        set_key = { lhs = Prod_S$slot$DmndC1$type$ which = Prod_S$slot$Dmnd$type$ }
        multiply_key = { lhs = Prod_S$slot$DmndC1$type$ which = Class_P$type$ }
		
		change_key = { lhs = Prod_S$slot$SpendL which = Prod_S$slot$DmndC1$type$ }
		
        change_key = { lhs = Tmp_0 which = Prod_S$slot$DmndC1$type$ }
    }
}

Prod_LaborClassReset = {
	set_key = { lhs = $class$_Labor value = 0 }
	set_key = { lhs = $class$_LaborCost value = 0 }
	set_key = { lhs = $class$_LaborFund value = 0 }
	set_key = { lhs = $class$_RLabor value = 0 }
	set_key = { lhs = $class$_RLaborFund value = 0 }
	set_key = { lhs = $class$_ULLabor value = 0 }
	set_key = { lhs = $class$_ULLaborFund value = 0 }
	set_key = { lhs = $class$_NMLabor value = 0 }
	set_key = { lhs = $class$_NMLaborFund value = 0 }
	set_key = { lhs = $class$_LTLabor value = 0 }
	set_key = { lhs = $class$_LTLaborFund value = 0 }
	set_key = { lhs = $class$_BGLabor value = 0 }
	set_key = { lhs = $class$_BGLaborFund value = 0 }
	set_key = { lhs = $class$_CLLabor value = 0 }
	set_key = { lhs = $class$_CLLaborFund value = 0 }
	set_key = { lhs = $class$_NOLabor value = 0 }
	set_key = { lhs = $class$_NOLaborFund value = 0 }
}

Prod_CalcLaborNumHelper1 = {
	### Sum up how much labor is employed by each property type
	### Take then Prop Share * Building Labor into each pool of each class
	### Then take 1/5th of wealth and allocate it amongst the labor types and store it
    set_key = { lhs = Tmp_0 which = $class$_Prp$building$ }
    multiply_key = { lhs = Tmp_0 value = 0.01 }
    multiply_key = { lhs = Tmp_0 which = $TmpVar$ }
    change_key = { lhs = $class$_$type$Labor which = Tmp_0 }
    change_key = { lhs = $class$_Labor which = Tmp_0 }
}

Prod_CalcLaborNum = {
	Prod_CalcLaborNumHelper1 = { class=$class$ type=$type$ TmpVar=Public_Tmp1 building=Agriculture }
	Prod_CalcLaborNumHelper1 = { class=$class$ type=$type$ TmpVar=Public_Tmp2 building=Forestry }
	Prod_CalcLaborNumHelper1 = { class=$class$ type=$type$ TmpVar=Public_Tmp3 building=Extraction }
	Prod_CalcLaborNumHelper1 = { class=$class$ type=$type$ TmpVar=Public_Tmp4 building=Fishery }
	Prod_CalcLaborNumHelper1 = { class=$class$ type=$type$ TmpVar=Public_Tmp5 building=Industrial }
	Prod_CalcLaborNumHelper1 = { class=$class$ type=$type$ TmpVar=Public_Tmp6 building=Commercial }
	Prod_CalcLaborNumHelper1 = { class=$class$ type=$type$ TmpVar=Public_Tmp7 building=Academic }
}

Prod_DoLaborSum = {
    set_key = { lhs = Class_$type$LaborTotal value = 0 }
    set_key = { lhs = Class_$type$LaborCost value = 0 }
    set_key = { lhs = Class_$type$LaborFund value = 0 }
	set_key = { lhs = Public_Tmp1 value = 0 }
	set_key = { lhs = Public_Tmp2 value = 0 }
	set_key = { lhs = Public_Tmp3 value = 0 }
	set_key = { lhs = Public_Tmp4 value = 0 }
	set_key = { lhs = Public_Tmp5 value = 0 }
	set_key = { lhs = Public_Tmp6 value = 0 }
	set_key = { lhs = Public_Tmp7 value = 0 }

    Prod_DoLaborHelper1 = { slot = 0 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 1 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 2 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 3 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 4 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 5 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 6 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 7 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 8 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 9 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 10 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 11 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 12 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 13 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 14 type = $type$ LandCrop = $LandCrop$ }
    Prod_DoLaborHelper1 = { slot = 15 type = $type$ LandCrop = $LandCrop$ }

	Prod_CalcLaborNum = { class=SF type=$type$ }
	Prod_CalcLaborNum = { class=RE type=$type$ }
	Prod_CalcLaborNum = { class=NM type=$type$ }
	Prod_CalcLaborNum = { class=NO type=$type$ }
	Prod_CalcLaborNum = { class=BG type=$type$ }
	Prod_CalcLaborNum = { class=CL type=$type$ }
	Prod_CalcLaborNum = { class=BU type=$type$ }

    [[infra]
        if = {
            limit = {
                always = $infra$
            }
            set_key = { lhs = Tmp_0 which = Infra_$type$ }
            change_key = { lhs = Tmp_0 which = Infra_State$type$ }
            change_key = { lhs = Tmp_0 which = Infra_Building$type$ }
            change_key = { lhs = Tmp_0 which = Building_$type$ }
			
			change_key = { lhs = Class_$type$LaborTotal which = Tmp_0 } 
			
			set_key = { lhs = Tmp_1 which = Tmp_0 } 
			multiply_key = { lhs = Tmp_1 which = Class_P$type$ } ### how much is the cost of all labor for the class
			multiply_key = { lhs = Tmp_1 value = 2 }
			if = {
				limit = {
					check_key = { lhs = Tmp_1 which = Infra_Wealth }
				}
				set_key = { lhs = Tmp_1 which = Infra_Wealth }
				multiply_key = { lhs = Tmp_1 value = 0.5 }
			}
			else = {
				multiply_key = { lhs = Tmp_1 value = 0.5 }
			}
			change_key = { lhs = Class_$type$LaborFund which = Tmp_1 }
        }
    ]
	
    set_key = { lhs = Class_$type$LaborCost which = Class_$type$LaborTotal } 
    multiply_key = { lhs = Class_$type$LaborCost which = Class_P$type$ } ### how much is the cost of all labor for the class
}

Prod_DoLaborSpendHelper1 = {
    set_key = { lhs = $class$_$type$LaborFund which = $class$_$type$Labor } 
    multiply_key = { lhs = $class$_$type$LaborFund which = Class_P$type$ } ### how much will this labor cost
	
    change_key = { lhs = $class$_LaborCost which = $class$_$type$LaborFund } ## for true 'LaborCost' sums, add to that total
}

Prod_DoLaborSpendHelper2 = {
	if = {
		limit = {
			check_key = { lhs = $class$_$type$LaborFund value = 0.001 }
		}
		divide_key = { lhs = $class$_$type$LaborFund which = $class$_LaborCost } ## ignore all that just do it direct
		multiply_key = { lhs = $class$_$type$LaborFund which = $class$_LaborFund } ### take our share of the total fund

		change_key = { lhs = Class_$type$LaborFund which = $class$_$type$LaborFund } ### add it to the total labor fund for this worker type
	}
}

Prod_DoLaborSpendHelper3 = {
	set_key = { lhs = $class$_$type$LaborFund value = 0 }
}

Prod_DoLaborSpendClass = {
	if = {
		limit = {
			check_key = { lhs = $class$_Labor value = 0.001 }
		}
		set_key = { lhs = Tmp_0 value = 0 }
		Prod_DoLaborSpendHelper1 = { class=$class$ type=R }
		Prod_DoLaborSpendHelper1 = { class=$class$ type=UL }
		Prod_DoLaborSpendHelper1 = { class=$class$ type=NM }
		Prod_DoLaborSpendHelper1 = { class=$class$ type=BG }
		Prod_DoLaborSpendHelper1 = { class=$class$ type=NO }
		Prod_DoLaborSpendHelper1 = { class=$class$ type=CL }
		Prod_DoLaborSpendHelper1 = { class=$class$ type=LT }
		
		set_key = { lhs = $class$_LaborFund which = $WealthVar$ }
		
		Prod_DoLaborSpendHelper2 = { class=$class$ type=R }
		Prod_DoLaborSpendHelper2 = { class=$class$ type=UL }
		Prod_DoLaborSpendHelper2 = { class=$class$ type=NM }
		Prod_DoLaborSpendHelper2 = { class=$class$ type=BG }
		Prod_DoLaborSpendHelper2 = { class=$class$ type=NO }
		Prod_DoLaborSpendHelper2 = { class=$class$ type=CL }
		Prod_DoLaborSpendHelper2 = { class=$class$ type=LT }
	}
	else = {
		Prod_DoLaborSpendHelper3 = { class=$class$ type=R }
		Prod_DoLaborSpendHelper3 = { class=$class$ type=UL }
		Prod_DoLaborSpendHelper3 = { class=$class$ type=NM }
		Prod_DoLaborSpendHelper3 = { class=$class$ type=BG }
		Prod_DoLaborSpendHelper3 = { class=$class$ type=NO }
		Prod_DoLaborSpendHelper3 = { class=$class$ type=CL }
		Prod_DoLaborSpendHelper3 = { class=$class$ type=LT }
	}
}

### Use 1/5th of wealth to fund labor. If Income (adjusted for Spend>Income) * 0.9 is greater, use that (to fund marginal classes)
Prod_DoLaborHelper = {
	set_key = { lhs = Tmp_9 which = $class$_Wealth }
	multiply_key = { lhs = Tmp_9 value = $WealthFactor$ }
	
    if = {
        limit = {
            check_key = { lhs = $class$_Spend which = $class$_Income }
        }
		set_key = { lhs = Tmp_8 which = $class$_Income }

		set_key = { lhs = Tmp_7 which = $class$_Income }
		subtract_key = { lhs = Tmp_7 which = $class$_Spend }
		
		subtract_key = { lhs = Tmp_8 which = Tmp_7 }
		if = {
			limit = {
				NOT = { check_key = { lhs = Tmp_8 value = 0 } }
			}
			set_key = { lhs = Tmp_8 value = 0 }
		}
	}
	else = {
		set_key = { lhs = Tmp_8 which = $class$_Income }
	}
	multiply_key = { lhs = Tmp_8 value = 0.9 }
    if = {
        limit = {
            check_key = { lhs = Tmp_8 which = Tmp_9 }
        }
		set_key = { lhs = Tmp_9 which = Tmp_8 }
	}
}

Prod_DoLaborSpend = {
	Prod_DoLaborHelper = { class=SF WealthFactor=0.2 }
	Prod_DoLaborSpendClass = { class=SF WealthVar=Tmp_9 }
	Prod_DoLaborHelper = { class=RE WealthFactor=0.2 }
	Prod_DoLaborSpendClass = { class=RE WealthVar=Tmp_9 }
	Prod_DoLaborHelper = { class=NM WealthFactor=0.2 }
	Prod_DoLaborSpendClass = { class=NM WealthVar=Tmp_9 }
	Prod_DoLaborHelper = { class=NO WealthFactor=0.2 }
	Prod_DoLaborSpendClass = { class=NO WealthVar=Tmp_9 }
	Prod_DoLaborHelper = { class=BG WealthFactor=0.2 }
	Prod_DoLaborSpendClass = { class=BG WealthVar=Tmp_9 }
	Prod_DoLaborHelper = { class=CL WealthFactor=0.2 }
	Prod_DoLaborSpendClass = { class=CL WealthVar=Tmp_9 }
	Prod_DoLaborSpendClass = { class=BU WealthVar=BU_Income }
}

Prod_DoLabor = {
    if = {
        limit = {
            check_key = { lhs = Class_$type$LaborCost value = 0.01 }
        }
		set_key = { lhs = Class_$type$LaborFundPer which = Class_$type$LaborFund }
		divide_key = { lhs = Class_$type$LaborFundPer which = Class_$type$LaborCost }
		multiply_key = { lhs = Class_$type$LaborFundPer value = 100 }
	}
	else = {
        set_key = { lhs = Class_$type$LaborFundPer value = 100 }
	}

    Prod_GetWorker$class$ = { return = Tmp_7 }
    set_key = { lhs = Tmp_1 which = Tmp_7 }
    
        # Tmp_1 = labor supply  
		# Class_$type$LaborTotal = demand
    if = {
        limit = { # if supply > demand
            check_key = { lhs = Tmp_1 which = Class_$type$LaborTotal }
        }
        set_key = { lhs = Prod_Fill$type$ value = 100 }
    }
    else = {
        set_key = { lhs = Prod_Fill$type$ which = Tmp_1 }
        divide_key = { lhs = Prod_Fill$type$ which = Class_$type$LaborTotal }
        multiply_key = { lhs = Prod_Fill$type$ value = 100 }
    }
    if = {
        limit = { # if supply > fundable supply
            check_key = { lhs = Prod_Fill$type$ which = Class_$type$LaborFundPer }
        }
        set_key = { lhs = Prod_Fill$type$ which = Class_$type$LaborFundPer } ## cap to what can be funded (prevents wealth leaks)
	}
    
    if = {
        limit = { #if supply is 0
            is_key_equal = { lhs = Tmp_1 value = 0 }
        }
        if = {
            limit = { # if supply is 0 and demand exists, set maximum wage -> 30
                check_key = { lhs = Class_$type$LaborTotal value = 0.001 }
            }
            set_key = { lhs = Class_P$type$ value = $WageMax$ }
        }
        else = { #if there is no supply and no demand, wage is 1
            set_key = { lhs = Class_P$type$ value = 1 }
        }
    }
    else = { # set wage value. Base is demand / supply
        set_key = { lhs = Class_P$type$ which = Class_$type$LaborTotal }
        divide_key = { lhs = Class_P$type$ which = Tmp_1 }

        if = {
            limit = {
                NOT = {
                    check_key = { lhs = Class_P$type$ value = 1 }
                }
            }
            multiply_key = { lhs = Class_P$type$ which = Class_P$type$ }
        }
        else_if = {
            limit = {
                check_key = { lhs = Class_P$type$ value = $WageMaxMulti$ }
            }
            set_key = { lhs = Class_P$type$ value = $WageMaxMulti$ }
        }

        multiply_key = { lhs = Class_P$type$ value = $BaseWage$ }
        change_key = { lhs = Class_P$type$ value = 1 }
    }

    set_key = { lhs = Tmp_0 value = 0 }

    [[infra]
        if = {
            limit = {
                always = $infra$
            }
            change_key = { lhs = Tmp_0 which = Infra_$type$ }
            change_key = { lhs = Tmp_0 which = Infra_State$type$ }
            change_key = { lhs = Tmp_0 which = Infra_Building$type$ }
            change_key = { lhs = Tmp_0 which = Building_$type$ }

            multiply_key = { lhs = Tmp_0 which = Prod_Fill$type$ }
			multiply_key = { lhs = Tmp_0 value = 0.01 }
            multiply_key = { lhs = Tmp_0 which = Class_P$type$ }
        }
    ]

    Prod_DoLaborHelper2 = { slot = 0 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 1 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 2 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 3 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 4 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 5 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 6 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 7 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 8 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 9 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 10 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 11 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 12 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 13 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 14 type = $type$ }
    Prod_DoLaborHelper2 = { slot = 15 type = $type$ }

    if = {
        limit = {
            check_key = { lhs = Tmp_0 value = 0.001 }
        }
        change_key = { lhs = $class$_IncomeProd which = Tmp_0 }
    }
}
Prod_DoLand = {
    Prod_DoLandHelper = { slot = 0 type = $type$ }
    Prod_DoLandHelper = { slot = 1 type = $type$ }
    Prod_DoLandHelper = { slot = 2 type = $type$ }
    Prod_DoLandHelper = { slot = 3 type = $type$ }
    Prod_DoLandHelper = { slot = 4 type = $type$ }
    Prod_DoLandHelper = { slot = 5 type = $type$ }
    Prod_DoLandHelper = { slot = 6 type = $type$ }
    Prod_DoLandHelper = { slot = 7 type = $type$ }
    Prod_DoLandHelper = { slot = 8 type = $type$ }
    Prod_DoLandHelper = { slot = 9 type = $type$ }
    Prod_DoLandHelper = { slot = 10 type = $type$ }
    Prod_DoLandHelper = { slot = 11 type = $type$ }
    Prod_DoLandHelper = { slot = 12 type = $type$ }
    Prod_DoLandHelper = { slot = 13 type = $type$ }
    Prod_DoLandHelper = { slot = 14 type = $type$ }
    Prod_DoLandHelper = { slot = 15 type = $type$ }

    set_key = { lhs = Prod_Fill$type$ value = 100 }
}
Prod_SetSizeCur = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
        }
        set_key = { lhs = Prod_S$slot$SizeCur value = 100 }

        Prod_SetSizeCurHelperLabor = { slot = $slot$ type = R }
        Prod_SetSizeCurHelperLabor = { slot = $slot$ type = NM }
        Prod_SetSizeCurHelperLabor = { slot = $slot$ type = UL }
        Prod_SetSizeCurHelperLabor = { slot = $slot$ type = NO }
        Prod_SetSizeCurHelperLabor = { slot = $slot$ type = BG }
        Prod_SetSizeCurHelperLabor = { slot = $slot$ type = CL }
        Prod_SetSizeCurHelperLabor = { slot = $slot$ type = LT }

        Prod_SetSizeCurHelperLand = { slot = $slot$ type = Agriculture }
        Prod_SetSizeCurHelperLand = { slot = $slot$ type = Forestry }
        Prod_SetSizeCurHelperLand = { slot = $slot$ type = Extraction }
        Prod_SetSizeCurHelperLand = { slot = $slot$ type = Fishery }
        Prod_SetSizeCurHelperLand = { slot = $slot$ type = Commercial }
        Prod_SetSizeCurHelperLand = { slot = $slot$ type = Industrial }
        Prod_SetSizeCurHelperLand = { slot = $slot$ type = Academic }

        multiply_key = { lhs = Prod_S$slot$SizeCur which = Prod_S$slot$Size }
		multiply_key = { lhs = Prod_S$slot$SizeCur value = 0.01 }
    }
}
Prod_SetDmnd = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
        }
        Prod_SetDmndHelper = { slot = $slot$ prod = 1 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 2 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 4 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 5 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 6 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 9 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 10 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 21 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 22 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 23 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 24 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 25 }
        Prod_SetDmndHelper = { slot = $slot$ prod = 41 }
        if = {
            limit = {
                is_key_equal = { lhs = Prod_S$slot$ value = 32 }
            }
			if = {
				limit = {
					check_key = { lhs = Prov_TRPow value = 1 }
				}
				set_key = { lhs = Tmp_0 value = 125 }
				subtract_key = { lhs = Tmp_0 which = Prov_TRPow }
				divide_key = { lhs = Tmp_0 value = 125 }
				multiply_key = { lhs = Prod_S$slot$Dmnd23 which = Tmp_0 }
				multiply_key = { lhs = Prod_S$slot$Dmnd24 which = Tmp_0 }
			}
			if = {
				limit = {
					Banking = 100
				}
				multiply_key = { lhs = Prod_S$slot$Dmnd23 value = 1.1 }
				multiply_key = { lhs = Prod_S$slot$Dmnd24 value = 1.1 }
			}
        }
    }
}

Prod_SetFillHelper = {
    if = {
        limit = {
            check_key = { lhs = Prod_S$slot$DmndB$prod$ value = 0.001 }
        }
        set_key = { lhs = Prod_S$slot$DmndL$prod$ which = Prod_S$slot$Dmnd$prod$ } # Save and store
        set_key = { lhs = Prod_S$slot$DmndF$prod$ which = Prod_S$slot$Dmnd$prod$ } # Calculate actual met demand
        multiply_key = { lhs = Prod_S$slot$DmndF$prod$ which = TN_ProvFill$prod$ }
		multiply_key = { lhs = Prod_S$slot$DmndF$prod$ value = 0.01 }
		
        set_key = { lhs = Prod_S$slot$DmndC$prod$ which = Prod_S$slot$DmndF$prod$ } # Save and store
        multiply_key = { lhs = Prod_S$slot$DmndC$prod$ which = TN_ProvPrc$prod$ } # Save and store
       
		change_key = { lhs = Tmp_0 which = TN_ProvFill$prod$ }
        change_key = { lhs = Tmp_1 value = 100 }
    }
}
Prod_SetSplyHelper = {
    if = {
        limit = {
            check_key = { lhs = Prod_S$slot$SplyB$prod$ value = 0.001 }
        }
        set_key = { lhs = Prod_S$slot$Sply$prod$ which = Tmp_0 }
        if = {
            limit = {
				always = $LandCrop$
                is_key_equal = { lhs = Prod_S$slot$ value = 1 }
            }
        	multiply_key = { lhs = Prod_S$slot$Sply$prod$ which = Land_CropOutput } # dynamic supply from Land system
			multiply_key = { lhs = Prod_S$slot$Sply$prod$ value = 0.1 }
		}
		else = {
			multiply_key = { lhs = Prod_S$slot$Sply$prod$ which = Prod_S$slot$SplyB$prod$ } # sply amount hardcoded from SYS-Prod_Misc
		}
        multiply_key = { lhs = Prod_S$slot$Sply$prod$ which = Modi_ProdOutput } # all output
        multiply_key = { lhs = Prod_S$slot$Sply$prod$ which = Modi_$type$Output } # type of output
		[[Modi]
		multiply_key = { lhs = Prod_S$slot$Sply$prod$ which = $Modi$ }
		]
        multiply_key = { lhs = Prod_S$slot$Sply$prod$ which = Modi_Prod$prod$ } # output of good
    }
}
Prod_SetSplyHelper2 = {
    if = {
        limit = {
            check_key = { lhs = Prod_S$slot$SplyB$prod$ value = 0.001 }
        }
        set_key = { lhs = Prod_S$slot$SplyT$prod$ which = Prod_S$slot$Sply$prod$ }
        multiply_key = { lhs = Prod_S$slot$Sply$prod$ which = Prod_S$slot$SizeCur }
        multiply_key = { lhs = Prod_S$slot$SplyT$prod$ which = Prod_S$slot$Size }
		
        set_key = { lhs = Prod_S$slot$SplyC$prod$ value = 0 } # Save and store
	}
}
Prod_DoLandHelper = {
    if = {
        limit = {
            has_province_flag = Prod_S$slot$
			has_province_flag = Prod_S$slot$DmndB$type$
        }
		# Load up last year's values
		set_key = { lhs = Prod_S$slot$DmndF$type$ which = Prod_S$slot$Dmnd$type$ }
		set_key = { lhs = Prod_S$slot$DmndL$type$ which = Prod_S$slot$DmndL1$type$ }
		
        set_key = { lhs = Prod_S$slot$Dmnd$type$ which = Prod_S$slot$DmndB$type$ }
        multiply_key = { lhs = Prod_S$slot$Dmnd$type$ which = Prod_S$slot$Size }
        set_key = { lhs = Prod_S$slot$DmndL1$type$ which = Prod_S$slot$Dmnd$type$ } # save and store in slot 1
    }
}
Prod_SetSizeCurHelperLabor = {
    if = {
        limit = {
            check_key = { lhs = Prod_S$slot$DmndB$type$ value = 0.001 }

            check_key = { lhs = Prod_S$slot$SizeCur which = Prod_Fill$type$ }
        }
        set_key = { lhs = Prod_S$slot$SizeCur which = Prod_Fill$type$ }
    }
}
Prod_SetSizeCurHelperLand = {
    if = {
        limit = {
			has_province_flag = Prod_S$slot$DmndB$type$

            check_key = { lhs = Prod_S$slot$SizeCur which = Prod_Fill$type$ }
        }
        set_key = { lhs = Prod_S$slot$SizeCur which = Prod_Fill$type$ }
    }
}
Prod_SetDmndHelper = {
    if = {
        limit = {
            check_key = { lhs = Prod_S$slot$DmndB$prod$ value = 0.001 }
        }
        set_key = { lhs = Prod_S$slot$Dmnd$prod$ which = Prod_S$slot$DmndB$prod$ }
        multiply_key = { lhs = Prod_S$slot$Dmnd$prod$ which = Prod_S$slot$SizeCur }
    }
}

Calculate_Labor = {
        # Peasantry
    set_key = { lhs = WK_SFTDmnd which = Prod_S0DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S1DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S2DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S3DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S4DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S5DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S6DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S7DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S8DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S9DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S10DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S11DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S12DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S13DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S14DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Prod_S15DmndLR }
    change_key = { lhs = WK_SFTDmnd which = Infra_R }
    change_key = { lhs = WK_SFTDmnd which = Infra_StateR }
    change_key = { lhs = WK_SFTDmnd which = Infra_BuildingR }
    change_key = { lhs = WK_SFTDmnd which = Building_R }
    
    set_key = { lhs = WK_SFNet which = WK_SF }
    subtract_key = { lhs = WK_SFNet which = WK_SFTDmnd }
    
        # Nomads
    set_key = { lhs = WK_NMTDmnd which = Prod_S0DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S1DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S2DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S3DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S4DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S5DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S6DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S7DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S8DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S9DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S10DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S11DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S12DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S13DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S14DmndLNM }
    change_key = { lhs = WK_NMTDmnd which = Prod_S15DmndLNM }
    
    set_key = { lhs = WK_NMNet which = WK_NM }
    subtract_key = { lhs = WK_NMNet which = WK_NMTDmnd }
    
        #Urban. Has to be recalculated because Literati steps over it on Prod_GetWorkerLT
    if = { 
        limit = {
            check_key = { lhs = RE_Total value = 0.001 }
        }
        set_key = { lhs = Public_Tmp9 which = RE_MP }
        multiply_key = { lhs = Public_Tmp9 value = 2.5 }
        
        set_key = { lhs = Tmp_0 which = RE_Total }
        subtract_key = { lhs = Tmp_0 which = Public_Tmp9 }
        divide_key = { lhs = Tmp_0 value = 1.5 }
        
        multiply_key = { lhs = Public_Tmp9 value = 2 }
        subtract_key = { lhs = Public_Tmp9 which = RE_MPTax }
        
        change_key = { lhs = Tmp_0 which = Public_Tmp9 }
        
        multiply_key = { lhs = Tmp_0 value = 0.2 } # Deflate
        multiply_key = { lhs = Tmp_0 which = Modi_RELabor }
        set_key = { lhs = WK_RE which = Tmp_0 } #save
    }
    else = {
        set_key = { lhs = WK_RE value = 0 }
    }
    set_key = { lhs = WK_RETDmnd which = Prod_S0DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S1DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S2DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S3DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S4DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S5DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S6DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S7DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S8DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S9DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S10DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S11DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S12DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S13DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S14DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Prod_S15DmndLUL }
    change_key = { lhs = WK_RETDmnd which = Infra_UL }
    change_key = { lhs = WK_RETDmnd which = Infra_StateUL }
    change_key = { lhs = WK_RETDmnd which = Infra_BuildingUL }
    change_key = { lhs = WK_RETDmnd which = Building_UL }
    
    set_key = { lhs = WK_RENet which = WK_RE }
    subtract_key = { lhs = WK_RENet which = WK_RETDmnd }
    
        # Burghers
    set_key = { lhs = WK_BGTDmnd which = Prod_S0DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S1DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S2DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S3DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S4DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S5DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S6DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S7DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S8DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S9DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S10DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S11DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S12DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S13DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S14DmndLBG }
    change_key = { lhs = WK_BGTDmnd which = Prod_S15DmndLBG }
    
    set_key = { lhs = WK_BGNet which = WK_BG }
    subtract_key = { lhs = WK_BGNet which = WK_BGTDmnd }
    
        # Literati
    set_key = { lhs = WK_LTTDmnd which = Prod_S0DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S1DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S2DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S3DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S4DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S5DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S6DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S7DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S8DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S9DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S10DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S11DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S12DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S13DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S14DmndLLT }
    change_key = { lhs = WK_LTTDmnd which = Prod_S15DmndLLT }
    
    set_key = { lhs = WK_LTNet which = WK_LT }
    subtract_key = { lhs = WK_LTNet which = WK_LTTDmnd }
    
    
    # Clergy
    set_key = { lhs = WK_CLTDmnd which = Prod_S0DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S1DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S2DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S3DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S4DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S5DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S6DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S7DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S8DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S9DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S10DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S11DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S12DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S13DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S14DmndLCL }
    change_key = { lhs = WK_CLTDmnd which = Prod_S15DmndLCL }
    
    set_key = { lhs = WK_CLNet which = WK_CL }
    subtract_key = { lhs = WK_CLNet which = WK_CLTDmnd }
}

UpdateProd = {
	if = {
		limit = {
			Prod_HasProdOld = { Prod=1 }
		}
		set_province_flag = Industry_1Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=2 }
		}
		set_province_flag = Industry_2Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=3 }
		}
		set_province_flag = Industry_3Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=4 }
		}
		set_province_flag = Industry_4Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=5 }
		}
		set_province_flag = Industry_5Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=6 }
		}
		set_province_flag = Industry_6Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=7 }
		}
		set_province_flag = Industry_7Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=8 }
		}
		set_province_flag = Industry_8Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=9 }
		}
		set_province_flag = Industry_9Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=10 }
		}
		set_province_flag = Industry_10Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=11 }
		}
		set_province_flag = Industry_11Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=12 }
		}
		set_province_flag = Industry_12Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=13 }
		}
		set_province_flag = Industry_13Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=14 }
		}
		set_province_flag = Industry_14Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=15 }
		}
		set_province_flag = Industry_15Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=16 }
		}
		set_province_flag = Industry_16Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=17 }
		}
		set_province_flag = Industry_17Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=18 }
		}
		set_province_flag = Industry_18Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=19 }
		}
		set_province_flag = Industry_19Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=20 }
		}
		set_province_flag = Industry_20Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=21 }
		}
		set_province_flag = Industry_21Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=22 }
		}
		set_province_flag = Industry_22Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=23 }
		}
		set_province_flag = Industry_23Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=24 }
		}
		set_province_flag = Industry_24Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=25 }
		}
		set_province_flag = Industry_25Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=26 }
		}
		set_province_flag = Industry_26Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=27 }
		}
		set_province_flag = Industry_27Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=28 }
		}
		set_province_flag = Industry_28Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=29 }
		}
		set_province_flag = Industry_29Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=30 }
		}
		set_province_flag = Industry_30Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=31 }
		}
		set_province_flag = Industry_31Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=32 }
		}
		set_province_flag = Industry_32Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=33 }
		}
		set_province_flag = Industry_33Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=34 }
		}
		set_province_flag = Industry_34Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=35 }
		}
		set_province_flag = Industry_35Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=36 }
		}
		set_province_flag = Industry_36Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=37 }
		}
		set_province_flag = Industry_37Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=38 }
		}
		set_province_flag = Industry_38Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=39 }
		}
		set_province_flag = Industry_39Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=40 }
		}
		set_province_flag = Industry_40Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=41 }
		}
		set_province_flag = Industry_41Present
	}
	if = {
		limit = {
			Prod_HasProdOld = { Prod=42 }
		}
		set_province_flag = Industry_42Present
	}
}
Prod_ClrIndustryFlag = {
	if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 1 }
		}
		clr_province_flag = Industry_1Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 2 }
		}
		clr_province_flag = Industry_2Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 3 }
		}
		clr_province_flag = Industry_3Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 4 }
		}
		clr_province_flag = Industry_4Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 5 }
		}
		clr_province_flag = Industry_5Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 6 }
		}
		clr_province_flag = Industry_6Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 7 }
		}
		clr_province_flag = Industry_7Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 8 }
		}
		clr_province_flag = Industry_8Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 9 }
		}
		clr_province_flag = Industry_9Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 10 }
		}
		clr_province_flag = Industry_10Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 11 }
		}
		clr_province_flag = Industry_11Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 12 }
		}
		clr_province_flag = Industry_12Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 13 }
		}
		clr_province_flag = Industry_13Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 14 }
		}
		clr_province_flag = Industry_14Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 15 }
		}
		clr_province_flag = Industry_15Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 16 }
		}
		clr_province_flag = Industry_16Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 17 }
		}
		clr_province_flag = Industry_17Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 18 }
		}
		clr_province_flag = Industry_18Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 19 }
		}
		clr_province_flag = Industry_19Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 20 }
		}
		clr_province_flag = Industry_20Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 21 }
		}
		clr_province_flag = Industry_21Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 22 }
		}
		clr_province_flag = Industry_22Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 23 }
		}
		clr_province_flag = Industry_23Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 24 }
		}
		clr_province_flag = Industry_24Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 25 }
		}
		clr_province_flag = Industry_25Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 26 }
		}
		clr_province_flag = Industry_26Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 27 }
		}
		clr_province_flag = Industry_27Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 28 }
		}
		clr_province_flag = Industry_28Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 29 }
		}
		clr_province_flag = Industry_29Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 30 }
		}
		clr_province_flag = Industry_30Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 31 }
		}
		clr_province_flag = Industry_31Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 32 }
		}
		clr_province_flag = Industry_32Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 33 }
		}
		clr_province_flag = Industry_33Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 34 }
		}
		clr_province_flag = Industry_34Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 35 }
		}
		clr_province_flag = Industry_35Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 36 }
		}
		clr_province_flag = Industry_36Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 37 }
		}
		clr_province_flag = Industry_37Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 38 }
		}
		clr_province_flag = Industry_38Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 39 }
		}
		clr_province_flag = Industry_39Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 40 }
		}
		clr_province_flag = Industry_40Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 41 }
		}
		clr_province_flag = Industry_41Present
	}
	else_if = {
		limit = {
			is_key_equal = { lhs = Prod_S$slot$ value = 42 }
		}
		clr_province_flag = Industry_42Present
	}
}
