# Author: Phlopsi

CE_Main = {
	# Initialization
	ce_cleanup = yes

	if = {
		limit = {
			is_subject_other_than_tributary_trigger = yes
		}
		overlord = {
			if = {
				limit = {
					is_subject_other_than_tributary_trigger = yes
				}
				overlord = {
					save_event_target_as = tt_highest
				}
			}
			else = {
				save_event_target_as = tt_highest
			}
		}
	}
	else = {
		save_event_target_as = tt_highest
	}

	export_ship_speed_multiplier_effect = { which = tv_ship } # Get hardcoded ship spead increase from techs

	# Add modifier as key to all port provinces
	sea_starts = {
		set_key = { lhs = tv_ship which = PREV }
	}

	## Loop through every non empty province hold by overlord and all his subjects - Treat HRE and Japan as an area
	every_province = {
		limit = {
			isValidProv = yes
			OR = {
				country_or_vassal_holds = event_target:tt_highest
				owner = { overlord = { is_subject_other_than_tributary_trigger = yes is_subject_of = event_target:tt_highest } }
				AND = {
					owner = { is_part_of_hre = yes }
					event_target:tt_highest = { is_part_of_hre = yes }
				}
				AND = {
					owner = { daimyo_trigger = yes }
					event_target:tt_highest = { daimyo_trigger = yes }
				}
				AND = {		#Allow mr pope to always send runners trough all cathiloc owned land
					owner = { religion = catholic }
					event_target:tt_highest = { tag = PAP }
				}
				AND = {		#Allow mr anti pope to always send runners through all avignonist owned land
					owner = { religion = avignonist }
					event_target:tt_highest = { tag = AVI }
				}
			}
		}
		set_key = { lhs = tv_ship which = PREV }

		if = {
			limit = {
				has_port = yes
			}
			PREV = {
				change_key = { lhs = tv_port value = 1 }
			}
		}

		if = {
			limit = {
				owned_by = PREV
			}
			PREV = {
				change_key = { lhs = tv_owned_provinces_in_state_in_progress value = 1 }
			}
		}
		else = {
			set_key = { lhs = pv_ce_save which = pv_ce }
			set_key = { lhs = pv_prev_save which = pv_prev }
			set_key = { lhs = pv_ce_pre_save which = pv_ce_pre }
		}

		set_key = { lhs = pv_ce value = 0 }
		set_key = { lhs = pv_prev value = 0 }
		set_key = { lhs = pv_ce_pre value = 0 }

		ce_get_cost_land = { return = tv_cost_land }
		ce_get_cost_pass = { return = tv_cost_pass }
		ce_get_cost_port_embark = { return = tv_cost_port_embark }
		ce_get_cost_port_to = { return = tv_cost_port_to }

		set_province_flag = CE_Cand
	}

	# Set runner_dispatching_province
	capital_scope = {
		set_key = { lhs = tv_tt value = 0 }
		
		if = {
			limit = {
				PREV = {
					check_key = { lhs = tv_owned_provinces_in_state_in_progress value = 1 }
				}
			}
			save_event_target_as = runner_dispatching_province
		}
	}

	# Main loop
	while = {
		limit = {
			event_target:runner_dispatching_province = {
				NOT = { has_province_flag = tf_communication_efficiency_final }
			}
		}

		event_target:runner_dispatching_province = {
			set_province_flag = tf_communication_efficiency_final

			if = {
				limit = {
					owned_by = PREV
				}
				PREV = {
					subtract_key = { lhs = tv_owned_provinces_in_state_in_progress value = 1 }
				}
			}
			if = {
				limit = {
					has_port = yes
				}
				PREV = { 
					subtract_key = { lhs = tv_port value = 1 }
				}
			}

			if = {
				limit = {
					PREV = {
						check_key = { lhs = tv_owned_provinces_in_state_in_progress value = 1 }
					}
				}
				ce_do_river = {
					prev = pv_prev
				}
				ce_do_pass = {
					prev = pv_prev
				}
				ce_do_land = {
					prev = pv_prev
				}

				if = {
					limit = {
						PREV = { 
							check_key = { lhs = tv_port value = 1 }
						}
					}
					ce_do_sea = {
						prev = pv_prev
					}
				}
			}
		}

		if = {
			limit = {
				check_key = { lhs = tv_owned_provinces_in_state_in_progress value = 1 }
			}
			ce_set_runner_dispatching_province_land = {
				scope = every_province
				max = 1800
			}
			
			if = {
				limit = {
					check_key = { lhs = tv_port value = 1 }
				}
				ce_set_runner_disptaching_province_sea = {
					max = 1800
				}
			}
		}
	}
	
	every_province = {
		limit = {
			has_province_flag = tf_river
		}
		clr_province_flag = tf_river
	}
	
	every_province = {
		limit = {
			has_province_flag = tf_pass
		}
		clr_province_flag = tf_pass
	}
	
	set_key = { lhs = Tmp_0 value = 1 }

	capital_scope = {
		if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 1 } } PREV = { set_key = { lhs = Tmp_0 value = 0.94 } } }
		else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 2 } } PREV = { set_key = { lhs = Tmp_0 value = 0.88 } } }
		else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 3 } } PREV = { set_key = { lhs = Tmp_0 value = 0.82 } } }
		else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 4 } } PREV = { set_key = { lhs = Tmp_0 value = 0.77 } } }
		else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 5 } } PREV = { set_key = { lhs = Tmp_0 value = 0.73 } } }
		else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 6 } } PREV = { set_key = { lhs = Tmp_0 value = 0.69 } } }
		else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 7 } } PREV = { set_key = { lhs = Tmp_0 value = 0.65 } } }
	}

	every_owned_province = {
		limit = {
			check_key = { lhs = tv_tt value = 0.001 }
		}
		set_key = { lhs = Tmp_0 which = PREV }

		multiply_key = { lhs = tv_tt which = Tmp_0 }

		set_key = { lhs = Tmp_0 value = 0 }
	}

	clr_country_flag = ce_capitols 
	if = {
		limit = {
			any_province = {
				has_province_flag = tf_communication_efficiency_final
				
				check_key = { lhs = Infra_Capitol value = 1 }
				
				is_capital = no
			}
		}
		every_province = {
			limit = {
				is_capital = no
			}
			set_key = { lhs = tv_tt_save value = 1733 }
		}
		PREV = { set_country_flag = ce_capitols }
		every_province = {
			limit = {
				has_province_flag = tf_communication_efficiency_final
				
				is_capital = no
			}
			set_province_flag = tf_communication_efficiency_final_save
			clr_province_flag = tf_communication_efficiency_final
			set_key = { lhs = tv_tt_save which = tv_tt }

			if = {
				limit = {
					check_key = { lhs = Infra_Capitol value = 1 }
				}
				save_event_target_as = runner_dispatching_province

				if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 1 } } multiply_key = { lhs = tv_tt value = 0.92 } subtract_key = { lhs = tv_tt value = 20 } }
				else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 2 } } multiply_key = { lhs = tv_tt value = 0.85 } subtract_key = { lhs = tv_tt value = 40 } }
				else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 3 } } multiply_key = { lhs = tv_tt value = 0.79 } subtract_key = { lhs = tv_tt value = 60 } }
				else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 4 } } multiply_key = { lhs = tv_tt value = 0.74 } subtract_key = { lhs = tv_tt value = 70 } }
				else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 5 } } multiply_key = { lhs = tv_tt value = 0.69 } subtract_key = { lhs = tv_tt value = 80 } }
				else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 6 } } multiply_key = { lhs = tv_tt value = 0.64 } subtract_key = { lhs = tv_tt value = 90 } }
				else_if = { limit = { is_key_equal = { lhs = Infra_Capitol value = 7 } } multiply_key = { lhs = tv_tt value = 0.6 } subtract_key = { lhs = tv_tt value = 100 } }
			
				if = {
					limit = {
						NOT = {
							check_key = { lhs = tv_tt value = 0.001 }
						}
					}
					set_key = { lhs = tv_tt value = 0.001 }
				}
			}
		}

		ce_set_runner_dispatching_province_land = {
			scope = every_province
			max = 960
		}

		while = {
			limit = {
				event_target:runner_dispatching_province = {
					NOT = { has_province_flag = tf_communication_efficiency_final }
				}
			}

			event_target:runner_dispatching_province = {
				set_province_flag = tf_communication_efficiency_final
				
				ce_do_river = {
					prev = pv_prev
				}
				ce_do_pass = {
					prev = pv_prev
				}
				ce_do_land = {
					prev = pv_prev
				}
				ce_do_sea = {
					prev = pv_prev
				}
			}

			ce_set_runner_dispatching_province_land = {
				scope = every_province
				max = 960
			}
			ce_set_runner_disptaching_province_sea = {
				max = 960
			}
		}

		every_province = {
			limit = {
				has_province_flag = tf_communication_efficiency_final_save
			}
			clr_province_flag = tf_communication_efficiency_final_save
			set_province_flag = tf_communication_efficiency_final
		}
		
		every_province = {
			limit = {
				has_province_flag = tf_river
			}
			clr_province_flag = tf_river
		}
		
		every_province = {
			limit = {
				has_province_flag = tf_pass
			}
			clr_province_flag = tf_pass
		}
	}
	
	if = {
		limit = {
			has_country_flag = limiting_shugo_power
		}
		every_province = {
			limit = {
				owner = {
					culture_group = japanese_g
					
					OR = {
						is_subject_of_type = daimyo_vassal
						is_subject_of_type = vassal
					}
					
					overlord = {
						has_country_flag = limiting_shugo_power
					}
				}
			}
			set_key = { lhs = Tmp_0 which = PREV }

			multiply_key = { lhs = tv_tt which = Tmp_0 }

			set_key = { lhs = Tmp_0 value = 0 }
			
			set_key = { lhs = japan_overlord_ce which = tv_tt }
			change_key = { lhs = japan_overlord_ce value = 0.001 }
		}
	}
	else_if = {
		limit = {
			culture_group = japanese_g
					
			OR = {
				is_subject_of_type = daimyo_vassal
				is_subject_of_type = decentralized_vassal
				is_subject_of_type = vassal
			}
					
			overlord = {
				has_country_flag = limiting_shugo_power
			}
		}
		every_owned_province = {
			limit = {
				check_key = { lhs = tv_tt value = 0.001 }
				check_key = { lhs = japan_overlord_ce value = 0.001 }
				NOT = {
					check_key = { lhs = japan_overlord_ce value = 1000 }
				}
			}
			change_key = { lhs = tv_tt value = 1000 }
			subtract_key = { lhs = tv_tt which = japan_overlord_ce }
		}
	}

	set_key = { lhs = Tmp_0 value = 0 }

	# Finalize
	ce_finalize_effect = {
		scope = every_owned_province
		ce_var = tv_tt
		time = pv_ce
		clean = yes
	}
	if = {
		limit = {
			has_country_flag = ce_capitols
		}
		# Finalize
		ce_finalize_effect = {
			scope = every_owned_province
			ce_var = tv_tt_save
			time = pv_ce_pre
			clean = yes
		}
	}
	every_province = {
		limit = {
			OR = {
				country_or_vassal_holds = event_target:tt_highest
				owner = { overlord = { is_subject_other_than_tributary_trigger = yes is_subject_of = event_target:tt_highest } }
				AND = {
					owner = { is_part_of_hre = yes }
					event_target:tt_highest = { is_part_of_hre = yes }
				}
				AND = {
					owner = { daimyo_trigger = yes }
					event_target:tt_highest = { daimyo_trigger = yes }
				}
			}
			isValidProv = yes
		}

		if = {
			limit = {
				NOT = {
					owned_by = PREV
				}
			}
			set_key = { lhs = pv_ce which = pv_ce_save }
			set_key = { lhs = pv_prev which = pv_prev_save }
			set_key = { lhs = pv_ce_pre which = pv_ce_pre_save }
		}
		else = {
			set_key = { lhs = Tmp_1 which = pv_ce }
			
			add_CE_modifier = yes
			
			multiply_key = { lhs = Tmp_1 value = 0.01 }
			
			set_key = { lhs = pv_CEauto which = Tmp_1 }
			
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 1.500 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 1.000 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 1.024 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 0.512 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 0.256 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 0.128 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 0.064 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 0.032 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 0.016 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 0.008 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 0.004 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 0.002 }
			POP_SetMod = { varname = Tmp_1 modname = Stat_CE type = province value = 0.001 }
			
			set_key = { lhs = Tmp_1 value = 0 }
		}
		if = {
			limit = {
				PREV = { has_country_flag = ce_capitols }
			}
			## Calc difference in CE
			set_key = { lhs = CE_Diff which = pv_ce }
			subtract_key = { lhs = CE_Diff which = pv_ce_pre }
		}
		else = {
			set_key = { lhs = CE_Diff value = 0 }
		}

		set_key = { lhs = pv_ce_save value = 0 }
		set_key = { lhs = pv_prev_save value = 0 }
		set_key = { lhs = pv_ce_pre_save value = 0 }
	}
	clr_country_flag = ce_capitols 

	# Clear all temporary variables
	ce_cleanup = yes
}

compare_and_set_travel_time = {
	if = {
		limit = {
			check_key = { lhs = tv_tt value = 0.001 }
		}
		event_target:runner_dispatching_province = {
			set_key = { lhs = tv_tt_new which = tv_tt }
		}

		set_key = { lhs = tv_tt_new which = event_target:runner_dispatching_province }
		change_key = { lhs = tv_tt_new which = $value$ }

		if = {
			limit = {
				NOT = {
					check_key = { lhs = tv_tt_new which = tv_tt }
				}
			}
			clr_province_flag = tf_river
			clr_province_flag = tf_pass
			
			set_key = { lhs = tv_tt which = tv_tt_new }

			event_target:runner_dispatching_province = {
				if = {
					limit = {
						is_sea = yes
					}
					set_key = { lhs = tv_id which = $prev$ }
				}
				else = {
					set_key = { lhs = tv_id which = ID_Prov }
				}
			}

			set_key = { lhs = tv_id which = event_target:runner_dispatching_province }

			set_key = { lhs = $prev$ which = tv_id }
		}
	}
	else = {
		clr_province_flag = tf_river
		clr_province_flag = tf_pass
		
		event_target:runner_dispatching_province = {
			if = {
				limit = {
					is_sea = yes
				}
				set_key = { lhs = tv_id which = $prev$ }
			}
			else = {
				set_key = { lhs = tv_id which = ID_Prov }
			}
		}

		set_key = { lhs = tv_tt which = event_target:runner_dispatching_province }
		set_key = { lhs = tv_id which = event_target:runner_dispatching_province }

		change_key = { lhs = tv_tt which = $value$ }
		set_key = { lhs = $prev$ which = tv_id }
	}
}

ce_finalize_effect = {
	$scope$ = {
		if = {
			limit = {
				has_province_flag = tf_communication_efficiency_final
			}
			set_key = { lhs = $time$ value = 960 }
			subtract_key = { lhs = $time$ which = $ce_var$ }

			if = {
				limit = {
					NOT = {
						check_key = { lhs = $time$ value = 0.001 }
					}
				}
				set_key = { lhs = $time$ value = 0 }
			}
			else = {
				divide_key = { lhs = $time$ value = 9.6 }
			}
		}
		else_if = {
			limit = {
				always = $clean$
			}
			set_key = { lhs = $time$ value = 0 }
		}
	}
}

ce_cleanup = {
	set_key = { lhs = tv_owned_provinces_in_state_in_progress value = 0 }
	set_key = { lhs = tv_ship value = 0 }
	set_key = { lhs = tv_port value = 0 }
	
	every_province = {
		limit = {
			has_province_flag = CE_Cand
		}
		clr_province_flag = tf_communication_efficiency_final
		clr_province_flag = tf_communication_efficiency_final_save

		set_key = { lhs = tv_tt value = 0 }
		set_key = { lhs = tv_id value = 0 }
		set_key = { lhs = tv_city_x_other value = 0 }
		set_key = { lhs = tv_city_z_other value = 0 }
		set_key = { lhs = tv_province_distance value = 0 }
		set_key = { lhs = tv_tt_new value = 0 }
		set_key = { lhs = tv_cost_land value = 0 }
		set_key = { lhs = tv_cost_pass value = 0 }
		
		set_key = { lhs = tv_ship value = 0 }
		set_key = { lhs = tv_cost_port_embark value = 0 }
		set_key = { lhs = tv_cost_port_to value = 0 }
		set_key = { lhs = tv_sea_zone_x_other value = 0 }
		set_key = { lhs = tv_sea_zone_z_other value = 0 }
		set_key = { lhs = tv_port_x_other value = 0 }
		set_key = { lhs = tv_port_z_other value = 0 }
		
		set_key = { lhs = tv_tt_save value = 0 }
		clr_province_flag = CE_Cand
	}

	sea_starts = {
		limit = {
			OR = {
				has_province_flag = tf_communication_efficiency_final

				check_key = { lhs = tv_tt value = 0.001 }
			}
		}
		clr_province_flag = tf_communication_efficiency_final

		set_key = { lhs = tv_tt value = 0 }
		set_key = { lhs = tv_id value = 0 }
		set_key = { lhs = tv_sea_zone_x_other value = 0 }
		set_key = { lhs = tv_sea_zone_z_other value = 0 }
		set_key = { lhs = tv_port_x_other value = 0 }
		set_key = { lhs = tv_port_z_other value = 0 }
		set_key = { lhs = tv_cost_port_embark value = 0 }
		set_key = { lhs = tv_cost_port_to value = 0 }
		set_key = { lhs = tv_province_distance value = 0 }
		set_key = { lhs = tv_tt_new value = 0 }
		set_key = { lhs = tv_tt_save value = 0 }
	}
}

ce_set_runner_dispatching_province_land = {
	$scope$ = {
		limit = {
			has_province_flag = CE_Cand
			has_lowest_travel_time = { max = $max$ }
		}
		save_event_target_as = runner_dispatching_province
	}
}
ce_set_runner_disptaching_province_sea = {
	sea_starts = {
		limit = {
			has_lowest_travel_time = { max = $max$ }
		}
		save_event_target_as = runner_dispatching_province
	}
}

ce_do_sea = {
	if = {
		limit = {
			is_sea = yes
		}
		every_neighbor_sea_zone = {
			limit = {
				province_group = sea_starts

				NOT = { 
					has_province_flag = tf_communication_efficiency_final 
				}
			}
			export_province_distance_sea_zone_effect = {
				which = tv_province_distance
				who = event_target:runner_dispatching_province
			}

			compare_and_set_travel_time = {
				prev = $prev$
				value = tv_province_distance
			}
		}

		every_neighbor_province = {
			limit = {
				has_province_flag = CE_Cand
				NOT = { 
					has_province_flag = tf_communication_efficiency_final 
				}
				isValidProv = yes
			}
			export_province_distance_land_province_effect = {
				which = tv_province_distance
				who = event_target:runner_dispatching_province
			}

			compare_and_set_travel_time = {
				prev = $prev$
				value = tv_province_distance
			}
			if = {
				limit = {
					province_id = 359
					has_province_flag = TN_SpecialCanal
				}
				PREV = {
					if = {
						limit = {
							province_id = 1909
						}
						1922 = {
							if = {
								limit = {
									NOT = {
										has_province_flag = tf_communication_efficiency_final 
									}
								}
								export_province_distance_sea_zone_effect = {
									which = tv_province_distance
									who = event_target:runner_dispatching_province
								}

								compare_and_set_travel_time = {
									prev = $prev$
									value = tv_province_distance
								}
							}
						}
					}
					else_if = {
						limit = {
							province_id = 1922
						}
						1909 = {
							if = {
								limit = {
									NOT = {
										has_province_flag = tf_communication_efficiency_final 
									}
								}
								export_province_distance_sea_zone_effect = {
									which = tv_province_distance
									who = event_target:runner_dispatching_province
								}

								compare_and_set_travel_time = {
									prev = $prev$
									value = tv_province_distance
								}
							}
						}
					}
				}
			}
			if = {
				limit = {
					province_id = 835
					has_province_flag = TN_SpecialCanal
				}
				PREV = {
					if = {
						limit = {
							province_id = 1617
						}
						1650 = {
							if = {
								limit = {
									NOT = {
										has_province_flag = tf_communication_efficiency_final 
									}
								}
								export_province_distance_sea_zone_effect = {
									which = tv_province_distance
									who = event_target:runner_dispatching_province
								}

								compare_and_set_travel_time = {
									prev = $prev$
									value = tv_province_distance
								}
							}
						}
					}
					else_if = {
						limit = {
							province_id = 1650
						}
						1617 = {
							if = {
								limit = {
									NOT = {
										has_province_flag = tf_communication_efficiency_final 
									}
								}
								export_province_distance_sea_zone_effect = {
									which = tv_province_distance
									who = event_target:runner_dispatching_province
								}

								compare_and_set_travel_time = {
									prev = $prev$
									value = tv_province_distance
								}
							}
						}
					}
				}
			}
			if = {
				limit = {
					OR = {
						province_id = 977
						province_id = 1252
					}
					has_province_flag = TN_SpecialCanal
				}
				PREV = {
					if = {
						limit = {
							province_id = 1856
						}
						1866 = {
							if = {
								limit = {
									NOT = {
										has_province_flag = tf_communication_efficiency_final 
									}
								}
								export_province_distance_sea_zone_effect = {
									which = tv_province_distance
									who = event_target:runner_dispatching_province
								}

								compare_and_set_travel_time = {
									prev = $prev$
									value = tv_province_distance
								}
							}
						}
					}
					else_if = {
						limit = {
							province_id = 1866
						}
						1856 = {
							if = {
								limit = {
									NOT = {
										has_province_flag = tf_communication_efficiency_final 
									}
								}
								export_province_distance_sea_zone_effect = {
									which = tv_province_distance
									who = event_target:runner_dispatching_province
								}

								compare_and_set_travel_time = {
									prev = $prev$
									value = tv_province_distance
								}
							}
						}
					}
				}
			}
		}
	}
	else_if = {
		limit = {
			has_port = yes

			has_province_flag = CE_Cand
		}
		sea_zone = {
			if = {
				limit = {
					NOT = {
						has_province_flag = tf_communication_efficiency_final 
					}
				}
				export_province_distance_sea_zone_effect = {
					which = tv_province_distance
					who = event_target:runner_dispatching_province
				}

				compare_and_set_travel_time = {
					prev = $prev$
					value = tv_province_distance
				}
			}
		}
	}
}
ce_do_land = {
	if = {
		limit = {
			is_sea = no
		}
		every_neighbor_province = {
			limit = {
				has_province_flag = CE_Cand
				NOT = { has_province_flag = tf_communication_efficiency_final }
				isValidProv = yes
			}
			export_province_distance_land_province_effect = {
				which = tv_province_distance
				who = event_target:runner_dispatching_province
			}
			
			change_key = { lhs = tv_province_distance which = PREV }

			compare_and_set_travel_time = {
				prev = $prev$
				value = tv_province_distance
			}
		}
	}
}

ce_do_river = {
	if = {
		limit = {
			check_key = { lhs = TN_River value = 1 }
			
			NOT = {
				has_province_flag = tf_river
			}
		}
		save_event_target_as = Prov
		
		set_key = { lhs = tv_ts which = tv_tt }
		change_key = { lhs = tv_ts which = tv_cost_port_embark }
		
		set_global_flag = tf_river
		set_province_flag = tf_river_done
		
		while = {
			limit = {
				has_global_flag = tf_river
			}
			clr_global_flag = tf_river
			
			event_target:Prov = {
				every_neighbor_province = {
					limit = {
						has_province_flag = CE_Cand
						check_key = { lhs = TN_River value = 1 }
						
						NOT = { 
							has_province_flag = tf_river_done 
						}
				
						OR = {
							is_key_equal = { lhs = TN_River which = PREV }
							
							has_province_flag = TN_RiverJoint
							
							PREV = { has_province_flag = TN_RiverJoint }
						}
					}
					set_province_flag = tf_river_cand
					set_province_flag = tf_river_done
					
					set_key = { lhs = tv_ts which = PREV }
					
					export_province_distance_river_province_effect = {
						which = tv_province_distance
						who = event_target:Prov
					}
					
					change_key = { lhs = tv_ts which = tv_province_distance }
					
					set_key = { lhs = tv_tt_new which = tv_ts }
					change_key = { lhs = tv_tt_new which = tv_cost_port_embark }
					
					if = {
						limit = {
							OR = {
								AND = {
									is_key_equal = { lhs = tv_tt value = 0 }
									
									is_capital = no
								}
								
								NOT = {
									check_key = { lhs = tv_tt_new which = tv_tt }
								}
							}
						}
						set_province_flag = tf_river
						
						set_key = { lhs = tv_tt which = tv_tt_new }
						
						event_target:runner_dispatching_province = {
							set_key = { lhs = tv_id which = ID_Prov }
						}

						set_key = { lhs = tv_id which = event_target:runner_dispatching_province }
						set_key = { lhs = $prev$ which = tv_id }
					}
				}
			}
			
			random_province = {
				limit = {
					has_province_flag = tf_river_cand
				}
				clr_province_flag = tf_river_cand
				
				set_global_flag = tf_river
				
				save_event_target_as = Prov
			}
		}
		
		every_province = {
			limit = {
				has_province_flag = tf_river_done
			}
			clr_province_flag = tf_river_done
			
			set_key = { lhs = tv_ts value = 0 }
		}
	}
}


ce_do_pass = {
	if = {
		limit = {
			check_key = { lhs = TN_Pass value = 1 }
			
			NOT = {
				has_province_flag = tf_pass
			}
		}
		save_event_target_as = Prov
		
		set_key = { lhs = tv_ts which = tv_tt }
		
		set_global_flag = tf_pass
		set_province_flag = tf_pass_done
		
		while = {
			limit = {
				has_global_flag = tf_pass
			}
			clr_global_flag = tf_pass
			
			event_target:Prov = {
				every_neighbor_province = {
					limit = {
						has_province_flag = CE_Cand
						check_key = { lhs = TN_Pass value = 1 }
						check_key = { lhs = Infra_Pathing value = 1 }
						
						NOT = { 
							has_province_flag = tf_pass_done 
						}
				
						OR = {
							is_key_equal = { lhs = TN_Pass which = PREV }
							
							has_province_flag = TN_PassJoint
							
							PREV = { has_province_flag = TN_PassJoint }
						}
					}
					set_province_flag = tf_pass_cand
					set_province_flag = tf_pass_done
					
					set_key = { lhs = tv_ts which = PREV }
					
					export_province_distance_pass_province_effect = {
						which = tv_province_distance
						who = event_target:Prov
					}
					
					change_key = { lhs = tv_ts which = tv_province_distance }
					
					set_key = { lhs = tv_tt_new which = tv_ts }
					
					if = {
						limit = {
							OR = {
								AND = {
									is_key_equal = { lhs = tv_tt value = 0 }
									
									is_capital = no
								}
								
								NOT = {
									check_key = { lhs = tv_tt_new which = tv_tt }
								}
							}
						}
						set_province_flag = tf_pass
						
						set_key = { lhs = tv_tt which = tv_tt_new }
						
						event_target:runner_dispatching_province = {
							set_key = { lhs = tv_id which = ID_Prov }
						}

						set_key = { lhs = tv_id which = event_target:runner_dispatching_province }
						set_key = { lhs = $prev$ which = tv_id }
					}
				}
			}
			
			random_province = {
				limit = {
					has_province_flag = tf_pass_cand
				}
				clr_province_flag = tf_pass_cand
				
				set_global_flag = tf_pass
				
				save_event_target_as = Prov
			}
		}
		
		every_province = {
			limit = {
				has_province_flag = tf_pass_done
			}
			clr_province_flag = tf_pass_done
			
			set_key = { lhs = tv_ts value = 0 }
		}
	}
}