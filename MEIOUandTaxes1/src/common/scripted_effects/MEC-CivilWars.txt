# determine civil war center
civil_war_find_center = {
    set_key = { lhs = Public_Tmp0 value = 0 }

	### find province with highest power + autonomy - loyalty
	every_owned_province = {
		limit = {
			check_key = { lhs = Public_Tmp0 which = $orig_scope$ }
			NOT = { is_capital = yes }
            any_neighbor_province = {
                owned_by = $orig_scope$
            }
		}
		export_to_key = { 
			lhs = Public_Tmp0
			value = local_autonomy
		}
        [[Dev]
		if = {
			limit = {
				always = $Dev$
			}
			change_key = { 
				lhs = Public_Tmp0 
				which = Dev_Total
			}
		}
        ]
        [[Pow]
		if = {
			limit = {
				always = $Pow$
			}
			change_key = { 
				lhs = Public_Tmp0 
				which = Prov_$elite$Pow 
			}
		}
        ]
        [[Loy]
		if = {
			limit = {
				always = $Loy$
			}
			subtract_key = {
				lhs = Public_Tmp0
				which = Prov_$elite$Loy
			}
		}
        ]
		$orig_scope$ = { set_key = { lhs = Public_Tmp0 which = PREV } }
	}

	random_owned_province = {
		limit = { 
            is_key_equal = { lhs = Public_Tmp0 which = $orig_scope$ } 
        }
		
		save_global_event_target_as = cw_rebellion_center
	}
}

### Floodfill assign provinces to rebellion
flood_fill_owned_provinces = {
    event_target:$start_event_target$ = {
        set_province_flag = $start_flag$
    }
		
    while = {
		limit = { 
            NOT = { 
                check_key = { lhs = $end_perc_key$ $end_perc_type$ = $end_perc_inp$  } 
            } 
        }

		random_owned_province = {
			limit = {
				owned_by = ROOT
				
				NOT = { has_province_flag = $iter_flag$ }
				any_neighbor_province = {
					OR = {
						has_province_flag = $start_flag$
						has_province_flag = $iter_flag$
					}
				}
				NOT = { is_capital = yes }
				NOT = {
					any_neighbor_province = {
						is_capital = yes
					}
				}
			}
			
			set_province_flag = $iter_flag$
            [[core_add_tag]
			add_core = $core_add_tag$ 
			]
			
            [[strength_mode_prov] 
			if = {
				limit = {
					always = $strength_mode_prov$
				}
				ROOT = { change_key = { lhs = $prov_assigned_key$ value = 1 } } ]
			}
            [[strength_mode_dev]  
			if = {
				limit = {
					always = $strength_mode_dev$
				}
                set_key = { lhs = $prov_assigned_key$ which = Dev_Total }
                ROOT = { change_key = { lhs = $prov_assigned_key$ which = PREV } }
			}
            ]
            
		}

		set_key = { lhs = $end_perc_key$ which = $prov_assigned_key$ }
		divide_key = { lhs = $end_perc_key$ which = $prov_total_key$ }
	}
}

# Sets cw_rebellion_strength_percentage as % max strength of rebellion in %  of total dev or province %
# Sets Public_Tmp1 to either Total Dev or Province amount
# Sets Public_Tmp2 to 0 as initialization
civil_war_determine_strength_in_perc = {
    [[elite]
    ### Strength of rebellion is:
    # Avg Elite Pow * (1 - Avg Elite Loy) * Balance Factor (0.8)
    set_key = { lhs = cw_rebellion_strength_percentage which = Prov_$elite$Pow }
    divide_key = { lhs = cw_rebellion_strength_percentage value = 100 } # transform to scale of [0-1]

	# input modifier for strength
	multiply_key = { lhs = cw_rebellion_strength_percentage $strength_type$ = $strength_inp$ }

	# balance limiter - max amount of dev to break away
	if = {
		limit = { 
			check_key = { lhs = cw_rebellion_strength_percentage value = 0.9 } # `CIVIL_WAR_MAX_STRENGTH_PERC~value`
		}
		set_key = { lhs = cw_rebellion_strength_percentage value = 0.9 } # `CIVIL_WAR_MAX_STRENGTH_PERC~value`
	}
	

    set_key = { lhs = Public_Tmp1 value = 100 }
    subtract_key = { lhs = Public_Tmp1 which = Prov_$elite$Loy }
    multiply_key = { lhs = Public_Tmp1 value = 0.01 } # transform to scale of [0-1]

    multiply_key = { lhs = cw_rebellion_strength_percentage which = Public_Tmp1 }
	multiply_key = { lhs = cw_rebellion_strength_percentage which = Modi_CivilWarStrength } # API Modifier
    ]

	[[strength_mode_prov]
	if = {
		limit = {
			always = $strength_mode_prov$
		}
		# get total amount of cities
		export_to_key = {
			lhs = Public_Tmp1
			value = num_of_cities
		}
		set_key = { lhs = Public_Tmp2 value = 0 }
	}
	]
	[[strength_mode_dev]
	if = {
		limit = {
			always = $strength_mode_dev$
		}
		set_key = { lhs = Public_Tmp1 which = Dev_Total }		
		set_key = { lhs = Public_Tmp2 value = 0 }	
	}
	]
}

### Setup civil war forwarder effect
setup_civil_war = {
	if = {
		limit = {
			num_of_cities = 4
		}
		hidden_effect = {
			[[elite]
				setup_civil_war_elite = {
					orig_scope = $orig_scope$
					elite = $elite$
					rebel_tag = $rebel_tag$
					strength_type = $strength_type$
					strength_inp = $strength_inp$
				}
			]
		}
	}
	else = {
		Stab_Subtract4 = yes
		add_war_exhaustion = 7.5
		add_prestige = -50

		#Brutus: spawn_rebels should be used on the province scope
		#Maybe a better choice is to use "civil_war_find_center"

		#Mati: rebels are spawning at the capital so they are worrying enough, 
		#but do not automatically gain control over province so they cannot auto-force demands

		capital_scope = {
			spawn_rebels = {
				type = pretender_rebels
				size = 4
				#win = yes        #we don't want rebels to always auto-win against OPMs
			}
			change_siege = 50
		}

		every_owned_province = {
			add_devastation = 15
		}
		[[elite]
			Public_ChangePowerbrokerLoyaltyTooltipProv = { Powerbroker=$elite$ Amount=-60 }
		]
		hidden_effect = {
			Rights_ReformReset = yes
		}
	}
}

setup_civil_war_elite = {
	### Setup general flags and keys
    set_country_flag = ongoing_civil_war
    set_country_flag = civil_war_orig_tag
	set_country_flag = civil_war_$elite$_rebels
	set_country_flag = PriorityTag

	log = "[GetYear]: [Root.GetName] entered Civil War"
	set_key = { lhs = cw_total_control_abs which = Dev_Total }	

	### Determine a center of the rebellion
    civil_war_find_center = {
        orig_scope = $orig_scope$
        elite = $elite$
        Dev = yes # optional
        Pow = yes # optional
        Loy = yes # optional
    }

    civil_war_determine_strength_in_perc = { 
        elite = $elite$ 
        strength_mode_dev = yes
        #strength_mode_prov = yes
		strength_inp = $strength_inp$
		strength_type = $strength_type$
    }

    ### Floodfill assign provinces to rebellion
	flood_fill_owned_provinces = {
		start_event_target = cw_rebellion_center
		start_flag = rebellion_center
		iter_flag = assigned_rebellion
		prov_total_key = Public_Tmp1
		prov_assigned_key = Public_Tmp2
        strength_mode_dev = yes
        #strength_mode_prov = yes
		end_perc_key = Public_Tmp3
		end_perc_type = which # value or which
		end_perc_inp = cw_rebellion_strength_percentage # key or number
		core_add_tag = $rebel_tag$ #optional
	}
    every_owned_province = {
		limit = {
			OR = {
				has_province_flag = rebellion_center
				has_province_flag = assigned_rebellion
			}
		}
		add_core = $rebel_tag$
	}
	### Release and setup rebel tag
	$rebel_tag$ = { #done early to get a proper ruler name
		change_primary_culture = $orig_scope$
	}
	
	release = $rebel_tag$
	if = {
		limit = {
			has_country_flag = TR_ChangeGovCivilWar
		}
		$rebel_tag$ = {
			Pol_ChangeGovClans = { Identity=1 Leadership=1 Tradition=1 }
			Log = "[GetYear]: [Root.GetName] was released as a rebel tag to fight for Clan based government."
		}
	}
	$rebel_tag$ = {
        set_country_flag = ongoing_civil_war
        set_country_flag = civil_war_rebel_tag
		set_country_flag = PriorityTag
		change_religion = $orig_scope$
		change_technology_group = $orig_scope$
		civil_war_start_internal_cohesion_loyalty = {
			elite = $elite$
		}
		civil_war_transfer_desired_reform_keys = {
			scp1 = $rebel_tag$
			scp2 = $orig_scope$
		}
		Rights_ResetDesiredReforms = yes
		country_event = {
			id = Init.2
		}
		declare_war_with_cb = {
			who = $orig_scope$
			casus_belli = cb_civil_war
		}
		transfer_army_tradition = {
			scp1 = $orig_scope$
		}
		
		convert_ruler_to_general = yes
        if = {
            limit = {
                capital_scope = {
                    has_owner_accepted_culture = no
                }
            }
            add_accepted_culture = capital
        }
		add_adm_power = 200
		add_dip_power = 200
		add_mil_power = 200
	}

	# recalc stats of origin tag
	country_event = { id = civil_wars.300 }

	### Calc control %

	#Store total value for later comparison
	set_key = { lhs = cw_control_perc value = 1 }
	subtract_key = { lhs = cw_control_perc which = cw_rebellion_strength_percentage }

	set_key = { lhs = cw_current_control_abs which = Dev_Total }
	

	$rebel_tag$ = {
		set_key = { lhs = cw_rebellion_strength_percentage which = $orig_scope$ }
		set_key = { lhs = cw_control_perc which = cw_rebellion_strength_percentage }

		set_key = { lhs = cw_current_control_abs which = Dev_Total }
		set_key = { lhs = cw_total_control_abs which = $orig_scope$ }
	}

	country_event = { id = civil_wars.203 days = 1 } #look for outside help for rebels
}

civil_war_start_internal_cohesion_loyalty = {
	Public_ChangePowerbrokerLoyaltyTooltip = {
		Powerbroker = $elite$
		Amount = 20
	}
	Public_ChangeEliteLoyaltyTooltipProv = {
		Amount = 10
	}
    add_stability = 1
}

civil_war_transfer_desired_reform_keys = {
	$scp1$ = {
		set_key = { lhs = Rights_NOGovChange which = $scp2$ }
		set_key = { lhs = Rights_NOOblChange which = $scp2$ }
		set_key = { lhs = Rights_NOTenChange which = $scp2$ }
		set_key = { lhs = Rights_NOSerChange which = $scp2$ }
		set_key = { lhs = Rights_BGComChange which = $scp2$ }
		set_key = { lhs = Rights_BGGovChange which = $scp2$ }
		set_key = { lhs = Rights_CLHieChange which = $scp2$ }
		set_key = { lhs = Rights_CLTaxChange which = $scp2$ }
		set_key = { lhs = Rights_CLOblChange which = $scp2$ }
		set_key = { lhs = Rights_BUTaxChange which = $scp2$ }
		set_key = { lhs = Rights_BUDirChange which = $scp2$ }
		set_key = { lhs = Rights_BUIndChange which = $scp2$ }
		set_key = { lhs = Rights_BUSerChange which = $scp2$ }
	}
}


transfer_army_tradition = {
	add_army_tradition = -100
	if = {
		limit = {
			$scp1$ = { army_tradition = 90 }
		}
		add_army_tradition = 90
	}
	else_if = {
		limit = {
			$scp1$ = { army_tradition = 80 }
		}
		add_army_tradition = 80
	}
	else_if = {
		limit = {
			$scp1$ = { army_tradition = 70 }
		}
		add_army_tradition = 70
	}
	else_if = {
		limit = {
			$scp1$ = { army_tradition = 60 }
		}
		add_army_tradition = 60
	}
	else_if = {
		limit = {
			$scp1$ = { army_tradition = 50 }
		}
		add_army_tradition = 50
	}
	else_if = {
		limit = {
			$scp1$ = { army_tradition = 40 }
		}
		add_army_tradition = 40
	}
	else_if = {
		limit = {
			$scp1$ = { army_tradition = 30 }
		}
		add_army_tradition = 30
	}
	else_if = {
		limit = {
			$scp1$ = { army_tradition = 20 }
		}
		add_army_tradition = 20
	}
	else_if = {
		limit = {
			$scp1$ = { army_tradition = 10 }
		}
		add_army_tradition = 10
	}
}

civil_war_adapt_rights_from_rebels = {
	$orig_scp$ = {
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_NOGov which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_NOGov which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_NOGov_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_NOObl which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_NOObl which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_NOObl_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_NOTen which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_NOTen which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_NOTen_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_NOSer which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_NOSer which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_NOSer_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_BGCom which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_BGCom which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_BGCom_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_BGGov which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_BGGov which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_BGGov_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_CLHie which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_CLHie which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_CLHie_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_CLTax which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_CLTax which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_CLTax_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_CLObl which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_CLObl which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_CLObl_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_BUTax which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_BUTax which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_BUTax_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_BUDir which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_BUDir which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_BUDir_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_BUInd which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_BUInd which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_BUInd_reform
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = Rights_BUSer which = $rebel_scp$ } } }

			hidden_effect = {
				set_key = { lhs = Rights_BUSer which = $rebel_scp$ }
			}
			custom_tooltip = cw_revent_BUSer_reform
		}
		if = {
			limit = {
				has_country_flag = TR_ChangeGovCivilWar
			}
			Pol_ChangeGovClans = { Identity=1 Leadership=1 Tradition=1 }
			log = "[GetYear]: [Root.GetName] Civil War ended, Clan rebels win; Government reset to Tribal"
		}
	}
}

civil_war_reset_flags_keys_gov = {
	clr_country_flag = ongoing_civil_war
	clr_country_flag = civil_war_orig_tag

	clr_country_flag = NO_ThreatCivilWar_Rights
	clr_country_flag = BG_ThreatCivilWar_Rights
	clr_country_flag = CL_ThreatCivilWar_Rights
	clr_country_flag = TR_ThreatCivilWar_Rights
	clr_country_flag = BU_ThreatCivilWar_Rights
	clr_country_flag = SF_ThreatCivilWar_Rights
	clr_country_flag = RE_ThreatCivilWar_Rights

	clr_country_flag = NO_ThreatCivilWar_Land
	clr_country_flag = BG_ThreatCivilWar_Land
	clr_country_flag = CL_ThreatCivilWar_Land
	clr_country_flag = TR_ThreatCivilWar_Land
	clr_country_flag = BU_ThreatCivilWar_Land
	clr_country_flag = SF_ThreatCivilWar_Land
	clr_country_flag = RE_ThreatCivilWar_Land
	clr_country_flag = TR_ChangeGovCivilWar

	set_key = { lhs = cw_rebellion_strength_percentage value = 0 }
	set_key = { lhs = cw_control_perc value = 0 }
	set_key = { lhs = cw_current_control_abs value = 0 }
	set_key = { lhs = cw_total_control_abs value = 0 }

	set_key = { lhs = cw_rebellion_strength_percentage value = 0 }
	every_owned_province = {
		limit = {
			OR = {
				has_province_flag = rebellion_center
				has_province_flag = assigned_rebellion
			}
		}
		clr_province_flag = rebellion_center
		clr_province_flag = assigned_rebellion
	}
	Rights_ReformReset = yes
	country_event = { id = SYS_UI.003 }
	hidden_effect = {
		every_country = {
			limit = {
				has_country_flag = refused_to_support_rebels
			}
			clr_country_flag = refused_to_support_rebels
		}
	}
}

civil_war_reset_flags_keys_rebel = {
	clr_country_flag = ongoing_civil_war
	clr_country_flag = civil_war_rebel_tag
	clr_country_flag = civil_war_NO_rebels
	clr_country_flag = civil_war_CL_rebels
	clr_country_flag = civil_war_BG_rebels
	clr_country_flag = civil_war_TR_rebels
	Rights_ReformReset = yes
	country_event = { id = SYS_UI.003 }

	set_key = { lhs = cw_rebellion_strength_percentage value = 0 }
	set_key = { lhs = cw_control_perc value = 0 }
	set_key = { lhs = cw_current_control_abs value = 0 }
	set_key = { lhs = cw_total_control_abs value = 0 }
}

civil_war_handle_province_siege = {
	FROM = { 
		set_key = { lhs = Public_Tmp0 which = Dev_Total } # get province dev
	}
	
	set_key = { lhs = Public_Tmp0 which = PREV } # get province dev

	
	subtract_key = { lhs = cw_current_control_abs which = Public_Tmp0 }
	set_key = { lhs = cw_control_perc which = cw_current_control_abs }
	divide_key = { lhs = cw_control_perc which = cw_total_control_abs }

	
	set_key = { lhs = Public_Tmp0 value = 0 }
	FROM = {
		owner = {
			set_key = { lhs = Public_Tmp0 which = FROM } # get province dev

			subtract_key = { lhs = cw_current_control_abs which = Public_Tmp0 }
			set_key = { lhs = cw_control_perc which = cw_current_control_abs }
			divide_key = { lhs = cw_control_perc which = cw_total_control_abs }
			
			set_key = { lhs = Public_Tmp0 value = 0 }
		}
		cede_province = ROOT 
	}
}

### To be executed in origin scope
civil_war_handle_conclusion = {
	$orig_scope$ = {
		inherit = $rebel_scope$
		log = "[GetYear]: [Root.GetName] Civil War conclusion script fired"
		# Presige Bonus
		if = {
			limit = { always = $prestige$ }

			add_prestige = $prestige_val$
		}

		# Loyalty Bonus
		if = {
			limit = { always = $loyalty$ }
			Public_ChangePowerbrokerLoyaltyTooltipProv = {
				Powerbroker = $elite$
				Amount = $loyalty_val$
			}
		}

		[[priv_tax]
		# Privilege Addition
		if = {
			limit = { always = $priv_tax$ }
			Privilege_$elite$TaxE$priv_direction$ = yes
		}
		]
		[[priv_serv]
		if = {
			limit = { always = $priv_serv$ }
			Privilege_$elite$ServiceE$priv_direction$ = { costs = no }
		}
		]
		
		# Rights reset to status quo - Rebel win
		if = {
			limit = { always = $reset_rights$ }

			if = {
				limit = { any_elite_civil_war_threat = { type = Rights } }

				civil_war_adapt_rights_from_rebels = {
					orig_scp = $orig_scope$
					rebel_scp = $rebel_scope$
				}
				log = "[GetYear]: CW Consclusion script:[Root.GetName] got rights reset to status quo after losing Civil War."
			}
		}

		# Landreform reset to status quo - Rebel win
		if = {
			limit = { always = $land_reset$ }
			
			if = {
				limit = { any_elite_civil_war_threat = { type = Land } }

				civil_war_prepare_land_reset = yes
			}
			log = "[GetYear]: CW Consclusion script:[Root.GetName] got land reform reset to status quo after losing Civil War."
		}

		# Autonomy change
		if = {
			limit = { always = $autonomy$ }

			hidden_effect = {
				every_province = {
					limit = { is_core = $rebel_scope$ }

					remove_core = $rebel_scope$
					set_local_autonomy = $autonomy_val$
				}
			}
		}
	}
}

civil_war_prepare_land_reset = {
	hidden_effect = {
		every_owned_province = {
			limit = {
				check_key = { lhs = LandInt_Units value = 0.001 }
				isValidProv = yes
			}

			set_key = { lhs = LandInt_Type 		which = LandInt_Type_Change }
			set_key = { lhs = LandInt_Building 	which = LandInt_Building_Change }
			set_key = { lhs = LandInt_Class 	which = LandInt_Class_Change }
			set_key = { lhs = LandInt_Class2 	which = LandInt_Class2_Change }

			set_key = { lhs = LandInt_Share which = LandInt_Share }	
			set_key = { lhs = LandInt_Units which = LandInt_Units }	
		}

		LandInt_ClearSaveChange = yes

		LandInt_Do = yes
	}

	custom_tooltip = CW_LAND_REFORM_RESET
}