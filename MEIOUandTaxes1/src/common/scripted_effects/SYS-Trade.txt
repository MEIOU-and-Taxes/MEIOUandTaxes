# Economy \ Trade 
# By KJH
# Shirokuma gets an honorable mention

# Refresh 'TN_ProvDmnd$prod$' and 'TN_ProvSply$prod$' variables in each province
# Those variables represent province's supply and demand for each trade goods,
# Which other effects later reference for trade, fulfillment, and income calculations
# TN_AssignSectorID = {
#     every_province = {
#         limit = {
#             isValidProv = yes
#         }
#         set_key = { lhs = Sector_ID value = 0 }
#         set_key = { lhs = Sector_TagID value = 0 }
#     }
#     every_country = {
#         limit = {
#             isValidCountry = yes
#         }
#         clr_country_flag = Has_TNSector
#         set_key = { lhs = Sector_ID value = 0 }
#         set_key = { lhs = Sector_TagID which = ID_Tag }
#     }
#     set_key = { lhs = Sector_ID value = 1 }
#     every_province = {
#         limit = {
#             NOT = { has_province_flag = In_TN_COT }
#             isValidProv = yes
#             NOT = { check_key = { lhs = Sector_ID value = 1 } }
#         }
#         owner = {
#             set_country_flag = Has_TNSector
#         }
#         set_province_flag = In_TN_COT
#         set_key = { lhs = Sector_ID which = PREV }
#         set_key = { lhs = Sector_TagID which = owner }
#         # add_province_modifier = {
#         #     name = Plague_mod0
#         #     duration = -1
#         # }
#         every_trade_node_member_province = {
#             limit = {
#                 owned_by = PREV
#                 NOT = { province_id = PREV }
#             }
#             set_key = { lhs = Sector_ID which = PREV }
#             set_province_flag = In_TN_COT
#             set_key = { lhs = Sector_TagID which = PREV }
#             # add_province_modifier = {
#             #     name = Plague_mod_m0
#             #     duration = -1
#             # }
#         }
#         PREV = { change_key = { lhs = Sector_ID value = 1 } }
#     }
#     every_province = {
#         limit = {
#             isValidProv = yes
#             NOT = { check_key = { lhs = Sector_ID value = 1 } }
#         }
#         if = {
#             limit = {
#                 any_trade_node_member_province = {
#                     check_key = { lhs = Sector_ID value = 1 }
#                 }
#             }
#             set_global_flag = Find_TN_COT
#             save_event_target_as = Prov
#             save_event_target_as = ProvNew
#             set_province_flag = Visited_TN
#             while = {
#                 limit = {
#                     has_global_flag = Find_TN_COT
#                 }
#                 clr_global_flag = Find_TN_COT
                
#                 event_target:Prov = {
#                     # every_empty_neighbor_province = {
#                     #     limit = {
#                     #         NOT = { has_province_flag = Visited_TN }
#                     #         same_trade_node_as = event_target:ProvNew
#                     #         isValidEmpty = yes
#                     #     }
#                     #     set_province_flag = Visited_TN
#                     #     set_province_flag = Find_TN_COT
#                     # }
#                     every_neighbor_province = {
#                         limit = {
#                             NOT = { has_province_flag = Visited_TN }
#                             same_trade_node_as = event_target:ProvNew
#                             isValidProv = yes
#                             event_target:ProvNew = { NOT = { check_key = { lhs = Sector_ID value = 1 } } }
#                         }
#                         set_province_flag = Visited_TN
#                         if = {
#                             limit = {
#                                 OR = {
#                                     NOT = { has_province_flag = In_TN_COT }
#                                     NOT = { check_key = { lhs = Sector_ID value = 1 } }
#                                 }
#                             }
#                             set_province_flag = Find_TN_COT
#                         }
#                         else = {
#                             event_target:ProvNew = {
#                                 set_key = { lhs = Sector_ID which = PREV }
#                                 set_key = { lhs = Sector_TagID which = PREV }
#                                 set_key = { lhs = Modi_TradeScoreExternal which = PREV }
#                                 set_key = { lhs = Modi_TradeScoreInternal which = PREV }
#                                 # add_province_modifier = {
#                                 #     name = Plague_mod_s0
#                                 #     duration = -1
#                                 # }
#                             }
#                             clr_province_flag = Find_TN_COT
#                             clr_province_flag = Visited_TN
#                             every_trade_node_member_province = {
#                                 clr_province_flag = Find_TN_COT
#                                 clr_province_flag = Visited_TN
#                             }
#                         }
#                     }
#                 }
			
#                 random_trade_node_member_province = {
#                     limit = {
#                         has_province_flag = Find_TN_COT
#                     }
#                     clr_province_flag = Find_TN_COT
                    
#                     set_global_flag = Find_TN_COT
                    
#                     save_event_target_as = Prov
#                 }
#                 if = {
#                     limit = {
#                         NOT = { has_global_flag = Find_TN_COT }
#                         event_target:ProvNew = {
#                             NOT = { check_key = { lhs = Sector_ID value = 1 } }
#                         }
#                     }
#                     random_trade_node_member_province = {
#                         limit = {
#                             check_key = { lhs = Sector_ID value = 1 }
#                         }
#                         event_target:ProvNew = {
#                             set_key = { lhs = Sector_ID which = PREV }
#                             set_key = { lhs = Sector_TagID which = PREV }
#                             set_key = { lhs = Modi_TradeScoreExternal which = PREV }
#                             set_key = { lhs = Modi_TradeScoreInternal which = PREV }
#                             # add_province_modifier = {
#                             #     name = Plague_mod_s0
#                             #     duration = -1
#                             # }
#                         }
#                         clr_province_flag = Find_TN_COT
#                         clr_province_flag = Visited_TN
#                         every_trade_node_member_province = {
#                             clr_province_flag = Find_TN_COT
#                             clr_province_flag = Visited_TN
#                         }
#                     }
#                 }
                
#             }
#         }
#     }
#     every_province = {
#         limit = {
#             isValidEmpty = yes
#         }
#         clr_province_flag = Find_TN_COT
#         clr_province_flag = In_TN_COT
#         clr_province_flag = Visited_TN
#     }
# }


TN_DoSupplyDemand = {
    # Start by setting all demand and supply variables to 0
    # Edit for new produce
    set_key = { lhs = TN_ProvDmnd1 value = 0 }
    set_key = { lhs = TN_ProvDmnd2 value = 0 }
    set_key = { lhs = TN_ProvDmnd4 value = 0 }
    set_key = { lhs = TN_ProvDmnd5 value = 0 }
    set_key = { lhs = TN_ProvDmnd6 value = 0 }
    set_key = { lhs = TN_ProvDmnd9 value = 0 }
    set_key = { lhs = TN_ProvDmnd10 value = 0 }

    set_key = { lhs = TN_ProvDmnd21 value = 0 }
    set_key = { lhs = TN_ProvDmnd22 value = 0 }
    set_key = { lhs = TN_ProvDmnd23 value = 0 }
    set_key = { lhs = TN_ProvDmnd24 value = 0 }
    set_key = { lhs = TN_ProvDmnd25 value = 0 }

    set_key = { lhs = TN_ProvDmnd41 value = 0 }

    # Edit for new produce
    set_key = { lhs = TN_ProvSply1 value = 0 }
    set_key = { lhs = TN_ProvSply2 value = 0 }
    set_key = { lhs = TN_ProvSply4 value = 0 }
    set_key = { lhs = TN_ProvSply5 value = 0 }
    set_key = { lhs = TN_ProvSply6 value = 0 }
    set_key = { lhs = TN_ProvSply9 value = 0 }
    set_key = { lhs = TN_ProvSply10 value = 0 }
    
    set_key = { lhs = TN_ProvSply21 value = 0 }
    set_key = { lhs = TN_ProvSply22 value = 0 }
    set_key = { lhs = TN_ProvSply23 value = 0 }
    set_key = { lhs = TN_ProvSply24 value = 0 }
    set_key = { lhs = TN_ProvSply25 value = 0 }

    set_key = { lhs = TN_ProvSply41 value = 0 }
    set_key = { lhs = TN_ProvSply51 value = 0.001 }

    

    # Get supply and demand from slots for each trade good
    # Edit for new produce
    TN_GetProdSlotDirectR = { prod = 1 } ## Calc how much the Rural labour types contributed
    TN_GetProdSlotDirectR = { prod = 2 }
    TN_GetProdSlotDirectR = { prod = 4 }
    TN_GetProdSlotDirectR = { prod = 5 }
    TN_GetProdSlot = { prod = 6 }
    TN_GetProdSlot = { prod = 9 }
    TN_GetProdSlot = { prod = 10 }
    
    TN_GetProdSlot = { prod = 21 }
    TN_GetProdSlot = { prod = 22 }
    TN_GetProdSlot = { prod = 23 }
    TN_GetProdSlot = { prod = 24 }
    TN_GetProdSlot = { prod = 25 }

    TN_GetProdSlot = { prod = 41 }
    TN_GetProdSlot = { prod = 51 }

    # Get level of over/under consumption based on wealth, Moved to TN_Misc for concentrated balancing
    TN_GetDmndAll = yes

    # Get class demand for each trade goods
    # Edit for new produce
    TN_GetProdClass = { prod = 1 type = Food }
    TN_GetProdClass = { prod = 2 type = Life }
    TN_GetProdClass = { prod = 4 type = Life }
    TN_GetProdClass = { prod = 5 type = Life }
    TN_GetProdClass = { prod = 6 type = Comfort }
    TN_GetProdClass = { prod = 9 type = Luxury }
    TN_GetProdClass = { prod = 10 type = Luxury }

    TN_GetProdClass = { prod = 21 type = Comfort }
    TN_GetProdClass = { prod = 23 type = Comfort }
    TN_GetProdClass = { prod = 24 type = Luxury }
    TN_GetProdClass = { prod = 25 type = Luxury }
    
    TN_GetProdClass = { prod = 41 type = Knowledge }

    ### Remove Direct Buy'd goods from the market
    TN_ApplyDirectFulfilR = { prod = 1 }
    TN_ApplyDirectFulfilR = { prod = 2 }
    TN_ApplyDirectFulfilR = { prod = 4 }
    TN_ApplyDirectFulfilR = { prod = 5 }

    # Edit for new produce
	change_key = { lhs = TN_ProvDmnd1 which = Building_Agriculture1 }
    change_key = { lhs = TN_ProvDmnd1 which = Building_Forestry1 }
    change_key = { lhs = TN_ProvDmnd1 which = Building_Extraction1 }
    change_key = { lhs = TN_ProvDmnd1 which = Building_Fishery1 }
    change_key = { lhs = TN_ProvDmnd1 which = Building_Commercial1 }
    change_key = { lhs = TN_ProvDmnd1 which = Building_Industrial1 }
    change_key = { lhs = TN_ProvDmnd1 which = Building_Academic1 }
	
    change_key = { lhs = TN_ProvDmnd6 which = Building_Agriculture6 }
    change_key = { lhs = TN_ProvDmnd6 which = Building_Forestry6 }
    change_key = { lhs = TN_ProvDmnd6 which = Building_Extraction6 }
    change_key = { lhs = TN_ProvDmnd6 which = Building_Fishery6 }
    change_key = { lhs = TN_ProvDmnd6 which = Building_Commercial6 }
    change_key = { lhs = TN_ProvDmnd6 which = Building_Industrial6 }
    change_key = { lhs = TN_ProvDmnd6 which = Building_Academic6 }
	
	change_key = { lhs = TN_ProvDmnd24 which = Building_Agriculture24 }
    change_key = { lhs = TN_ProvDmnd24 which = Building_Forestry24 }
    change_key = { lhs = TN_ProvDmnd24 which = Building_Extraction24 }
    change_key = { lhs = TN_ProvDmnd24 which = Building_Fishery24 }
    change_key = { lhs = TN_ProvDmnd24 which = Building_Commercial24 }
    change_key = { lhs = TN_ProvDmnd24 which = Building_Industrial24 }
    change_key = { lhs = TN_ProvDmnd24 which = Building_Academic24 }
        #Demanded goods from Buildings Maintenance
    change_key = { lhs = TN_ProvDmnd6 which = Infra_6 }
    change_key = { lhs = TN_ProvDmnd22 which = Infra_22 }
    change_key = { lhs = TN_ProvDmnd23 which = Infra_23 }
    change_key = { lhs = TN_ProvDmnd24 which = Infra_24 }
    change_key = { lhs = TN_ProvDmnd41 which = Infra_41 }

    change_key = { lhs = TN_ProvDmnd6 which = Infra_State6 }
    change_key = { lhs = TN_ProvDmnd22 which = Infra_State22 }
    change_key = { lhs = TN_ProvDmnd23 which = Infra_State23 }
    change_key = { lhs = TN_ProvDmnd24 which = Infra_State24 }
    change_key = { lhs = TN_ProvDmnd41 which = Infra_State41 }

        #Demanded Goods from ongoing constructions
    change_key = { lhs = TN_ProvDmnd6 which = Infra_Building6 }
    change_key = { lhs = TN_ProvDmnd22 which = Infra_Building22 }
    change_key = { lhs = TN_ProvDmnd23 which = Infra_Building23 }
    change_key = { lhs = TN_ProvDmnd24 which = Infra_Building24 }
    change_key = { lhs = TN_ProvDmnd41 which = Infra_Building41 }
        #Demanded goods from Military training
	change_key = { lhs = TN_ProvDmnd1 which = Mil_Maint1 }
	change_key = { lhs = TN_ProvDmnd2 which = Mil_Maint2 }
	change_key = { lhs = TN_ProvDmnd5 which = Mil_Maint5 }
	change_key = { lhs = TN_ProvDmnd21 which = Mil_Maint21 }
	change_key = { lhs = TN_ProvDmnd22 which = Mil_Maint22 }
	change_key = { lhs = TN_ProvDmnd24 which = Mil_Maint24 }
	change_key = { lhs = TN_ProvDmnd41 which = Mil_Maint41 }
    #log = "testingg"
        #Demanded goods from Military recruitment
	change_key = { lhs = TN_ProvDmnd1 which = Mil_Build1 }
	change_key = { lhs = TN_ProvDmnd2 which = Mil_Build2 }
	change_key = { lhs = TN_ProvDmnd5 which = Mil_Build5 }
	change_key = { lhs = TN_ProvDmnd21 which = Mil_Build21 }
	change_key = { lhs = TN_ProvDmnd22 which = Mil_Build22 }
	change_key = { lhs = TN_ProvDmnd24 which = Mil_Build24 }
	change_key = { lhs = TN_ProvDmnd41 which = Mil_Build41 }
        #Demanded goods from Navy
	change_key = { lhs = TN_ProvDmnd5 which = Mil_Navy5 }
	change_key = { lhs = TN_ProvDmnd22 which = Mil_Navy22 }
	change_key = { lhs = TN_ProvDmnd23 which = Mil_Navy23 }
	change_key = { lhs = TN_ProvDmnd24 which = Mil_Navy24 }    
    
    # Refresh sector score variable 
    set_key = { lhs = Sector_ScoreDisp value = 0 }
	
	set_key = { lhs = Prev_Total_External_Export which = Total_External_Export }
	set_key = { lhs = Prev_Total_External_Import which = Total_External_Import }
    if = {
        limit = {
            has_province_modifier = Disp_Trade_Amount
        }
        Refresh_Trade_UI = yes
        refreshSuperDisplay = yes
    }
}

# Prepare sectors by cleaning sector variables from all provinces
# Also refresh which sector each provinces belong to
TN_PrepSector = {
    regiongroup = {
        region = {
            limit = {
                has_province_flag = TN_SectorPart
            }
            clr_province_flag = TN_SectorPart
			
			# Edit for new produce
            set_key = { lhs = TN_SectorStockpileOut1 value = 0 }
            set_key = { lhs = TN_SectorStockpileOut2 value = 0 }
            set_key = { lhs = TN_SectorStockpileOut4 value = 0 }
            set_key = { lhs = TN_SectorStockpileOut5 value = 0 }
            set_key = { lhs = TN_SectorStockpileOut6 value = 0 }
            set_key = { lhs = TN_SectorStockpileOut9 value = 0 }
            set_key = { lhs = TN_SectorStockpileOut10 value = 0 }

            set_key = { lhs = TN_SectorStockpileOut21 value = 0 }
            set_key = { lhs = TN_SectorStockpileOut22 value = 0 }
            set_key = { lhs = TN_SectorStockpileOut23 value = 0 }
            set_key = { lhs = TN_SectorStockpileOut24 value = 0 }
            set_key = { lhs = TN_SectorStockpileOut25 value = 0 }

            set_key = { lhs = TN_SectorStockpileOut41 value = 0 }

            # Edit for new produce
            set_key = { lhs = TN_SectorStockpileIn1 value = 0 }
            set_key = { lhs = TN_SectorStockpileIn2 value = 0 }
            set_key = { lhs = TN_SectorStockpileIn4 value = 0 }
            set_key = { lhs = TN_SectorStockpileIn5 value = 0 }
            set_key = { lhs = TN_SectorStockpileIn6 value = 0 }
            set_key = { lhs = TN_SectorStockpileIn9 value = 0 }
            set_key = { lhs = TN_SectorStockpileIn10 value = 0 }

            set_key = { lhs = TN_SectorStockpileIn21 value = 0 }
            set_key = { lhs = TN_SectorStockpileIn22 value = 0 }
            set_key = { lhs = TN_SectorStockpileIn23 value = 0 }
            set_key = { lhs = TN_SectorStockpileIn24 value = 0 }
            set_key = { lhs = TN_SectorStockpileIn25 value = 0 }

            set_key = { lhs = TN_SectorStockpileIn41 value = 0 }

            set_key = { lhs = Prod_S0SpendProd value = 0 }
            set_key = { lhs = Prod_S1SpendProd value = 0 }
            set_key = { lhs = Prod_S2SpendProd value = 0 }
            set_key = { lhs = Prod_S3SpendProd value = 0 }
            set_key = { lhs = Prod_S4SpendProd value = 0 }
            set_key = { lhs = Prod_S5SpendProd value = 0 }
            set_key = { lhs = Prod_S6SpendProd value = 0 }
            set_key = { lhs = Prod_S7SpendProd value = 0 }
            set_key = { lhs = Prod_S8SpendProd value = 0 }
            set_key = { lhs = Prod_S9SpendProd value = 0 }
            set_key = { lhs = Prod_S10SpendProd value = 0 }
			set_key = { lhs = Prod_S11SpendProd value = 0 }
            set_key = { lhs = Prod_S12SpendProd value = 0 }
            set_key = { lhs = Prod_S13SpendProd value = 0 }
            set_key = { lhs = Prod_S14SpendProd value = 0 }
            set_key = { lhs = Prod_S15SpendProd value = 0 }

            set_key = { lhs = Prod_S0IncomeProd value = 0 }
            set_key = { lhs = Prod_S1IncomeProd value = 0 }
            set_key = { lhs = Prod_S2IncomeProd value = 0 }
            set_key = { lhs = Prod_S3IncomeProd value = 0 }
            set_key = { lhs = Prod_S4IncomeProd value = 0 }
            set_key = { lhs = Prod_S5IncomeProd value = 0 }
            set_key = { lhs = Prod_S6IncomeProd value = 0 }
            set_key = { lhs = Prod_S7IncomeProd value = 0 }
            set_key = { lhs = Prod_S8IncomeProd value = 0 }
            set_key = { lhs = Prod_S9IncomeProd value = 0 }
            set_key = { lhs = Prod_S10IncomeProd value = 0 }
            set_key = { lhs = Prod_S11IncomeProd value = 0 }
            set_key = { lhs = Prod_S12IncomeProd value = 0 }
            set_key = { lhs = Prod_S13IncomeProd value = 0 }
            set_key = { lhs = Prod_S14IncomeProd value = 0 }
            set_key = { lhs = Prod_S15IncomeProd value = 0 }

            set_key = { lhs = SF_SpendProd value = 0 }
            set_key = { lhs = NM_SpendProd value = 0 }
            set_key = { lhs = RE_SpendProd value = 0 }
            set_key = { lhs = NO_SpendProd value = 0 }
            set_key = { lhs = BG_SpendProd value = 0 }
            set_key = { lhs = CL_SpendProd value = 0 }

            set_key = { lhs = SF_IncomeDole value = 0 }
            set_key = { lhs = NM_IncomeDole value = 0 }
            set_key = { lhs = RE_IncomeDole value = 0 }
            set_key = { lhs = NO_IncomeDole value = 0 }
            set_key = { lhs = BG_IncomeDole value = 0 }
            set_key = { lhs = CL_IncomeDole value = 0 }

            set_key = { lhs = SF_Dole value = 0 }
            set_key = { lhs = NM_Dole value = 0 }
            set_key = { lhs = RE_Dole value = 0 }
            set_key = { lhs = NO_Dole value = 0 }
            set_key = { lhs = BG_Dole value = 0 }
            set_key = { lhs = CL_Dole value = 0 }

            set_key = { lhs = TN_SectorImported1   value = 0 }
            set_key = { lhs = TN_SectorImported2   value = 0 }
            set_key = { lhs = TN_SectorImported4   value = 0 }
            set_key = { lhs = TN_SectorImported5   value = 0 }
            set_key = { lhs = TN_SectorImported6   value = 0 }
            set_key = { lhs = TN_SectorImported9   value = 0 }
            set_key = { lhs = TN_SectorImported10  value = 0 }
            set_key = { lhs = TN_SectorImported21  value = 0 }
            set_key = { lhs = TN_SectorImported22  value = 0 }
            set_key = { lhs = TN_SectorImported23  value = 0 }
            set_key = { lhs = TN_SectorImported24  value = 0 }
            set_key = { lhs = TN_SectorImported25  value = 0 }
            set_key = { lhs = TN_SectorImported41  value = 0 }

            set_key = { lhs = TN_SectorExported1   value = 0 }
            set_key = { lhs = TN_SectorExported2   value = 0 }
            set_key = { lhs = TN_SectorExported4   value = 0 }
            set_key = { lhs = TN_SectorExported5   value = 0 }
            set_key = { lhs = TN_SectorExported6   value = 0 }
            set_key = { lhs = TN_SectorExported9   value = 0 }
            set_key = { lhs = TN_SectorExported10  value = 0 }
            set_key = { lhs = TN_SectorExported21  value = 0 }
            set_key = { lhs = TN_SectorExported22  value = 0 }
            set_key = { lhs = TN_SectorExported23  value = 0 }
            set_key = { lhs = TN_SectorExported24  value = 0 }
            set_key = { lhs = TN_SectorExported25  value = 0 }
            set_key = { lhs = TN_SectorExported41  value = 0 }

            if = {
                limit = {
                    has_province_flag = TN_SectorCent
                }
                clr_province_flag = TN_SectorCent
                clr_province_flag = HasSeaAccess
                clr_province_flag = HasRiverSeaAccess
                clr_province_flag = HasRiverSeaBAccess
                clr_province_flag = HasSilkAccess
                

                # Edit for new produce
                set_key = { lhs = TN_SectorDmnd1 value = 0 }
                set_key = { lhs = TN_SectorDmnd2 value = 0 }
                set_key = { lhs = TN_SectorDmnd4 value = 0 }
                set_key = { lhs = TN_SectorDmnd5 value = 0 }
                set_key = { lhs = TN_SectorDmnd6 value = 0 }
                set_key = { lhs = TN_SectorDmnd9 value = 0 }
                set_key = { lhs = TN_SectorDmnd10 value = 0 }

                set_key = { lhs = TN_SectorDmnd21 value = 0 }
                set_key = { lhs = TN_SectorDmnd22 value = 0 }
                set_key = { lhs = TN_SectorDmnd23 value = 0 }
                set_key = { lhs = TN_SectorDmnd24 value = 0 }
                set_key = { lhs = TN_SectorDmnd25 value = 0 }

                set_key = { lhs = TN_SectorDmnd41 value = 0 }

                # Edit for new produce
                set_key = { lhs = TN_SectorSply1 value = 0 }
                set_key = { lhs = TN_SectorSply2 value = 0 }
                set_key = { lhs = TN_SectorSply4 value = 0 }
                set_key = { lhs = TN_SectorSply5 value = 0 }
                set_key = { lhs = TN_SectorSply6 value = 0 }
                set_key = { lhs = TN_SectorSply9 value = 0 }
                set_key = { lhs = TN_SectorSply10 value = 0 }
                
                set_key = { lhs = TN_SectorSply21 value = 0 }
                set_key = { lhs = TN_SectorSply22 value = 0 }
                set_key = { lhs = TN_SectorSply23 value = 0 }
                set_key = { lhs = TN_SectorSply24 value = 0 }
                set_key = { lhs = TN_SectorSply25 value = 0 }

                set_key = { lhs = TN_SectorSply41 value = 0 }
                set_key = { lhs = TN_SectorSply51 value = 0 }

                set_key = { lhs = TN_SectorTrade value = 0 }
                set_key = { lhs = TN_SectorScore value = 0 }

                # Edit for new produce
                set_key = { lhs = TN_SectorStockpileBid1 value = 0 }
                set_key = { lhs = TN_SectorStockpileBid2 value = 0 }
                set_key = { lhs = TN_SectorStockpileBid4 value = 0 }
                set_key = { lhs = TN_SectorStockpileBid5 value = 0 }
                set_key = { lhs = TN_SectorStockpileBid6 value = 0 }
                set_key = { lhs = TN_SectorStockpileBid9 value = 0 }
                set_key = { lhs = TN_SectorStockpileBid10 value = 0 }

                set_key = { lhs = TN_SectorStockpileBid21 value = 0 }
                set_key = { lhs = TN_SectorStockpileBid22 value = 0 }
                set_key = { lhs = TN_SectorStockpileBid23 value = 0 }
                set_key = { lhs = TN_SectorStockpileBid24 value = 0 }
                set_key = { lhs = TN_SectorStockpileBid25 value = 0 }

                set_key = { lhs = TN_SectorStockpileBid41 value = 0 }

                # Edit for new produce
                set_key = { lhs = TN_SectorStockpileOffer1 value = 0 }
                set_key = { lhs = TN_SectorStockpileOffer2 value = 0 }
                set_key = { lhs = TN_SectorStockpileOffer4 value = 0 }
                set_key = { lhs = TN_SectorStockpileOffer5 value = 0 }
                set_key = { lhs = TN_SectorStockpileOffer6 value = 0 }
                set_key = { lhs = TN_SectorStockpileOffer9 value = 0 }
                set_key = { lhs = TN_SectorStockpileOffer10 value = 0 }

                set_key = { lhs = TN_SectorStockpileOffer21 value = 0 }
                set_key = { lhs = TN_SectorStockpileOffer22 value = 0 }
                set_key = { lhs = TN_SectorStockpileOffer23 value = 0 }
                set_key = { lhs = TN_SectorStockpileOffer24 value = 0 }
                set_key = { lhs = TN_SectorStockpileOffer25 value = 0 }

                set_key = { lhs = TN_SectorStockpileOffer41 value = 0 } 
                
                set_key = { lhs = Nat_Capital1 value = 0 }
                set_key = { lhs = Nat_Capital2 value = 0 }
                set_key = { lhs = Nat_Capital5 value = 0 }
                set_key = { lhs = Nat_Capital21 value = 0 }
                set_key = { lhs = Nat_Capital22 value = 0 }                
                set_key = { lhs = Nat_Capital24 value = 0 }                
                set_key = { lhs = Nat_Capital41 value = 0 }
            }
        }
    }
	
	# Redesignate sectors
    # Redesignate sectors
	#every_province = {
	#	limit = {
	#		NOT = {
	#			has_province_flag = TN_SectorPart
	#		}
	#		isValidProv = yes
	#	}
	#	set_province_flag = TN_SectorCent
	#
	#	every_trade_node_member_province = {
	#		limit = {
	#			isValidProv = yes
	#			owned_by = PREV
	#			NOT = {
	#				has_province_flag = TN_SectorPart
	#			}
	#		}
	#		set_province_flag = TN_SectorPart
	#	}
   #}
	#
	#every_province = {
	#	clr_province_flag = TN_SectorPartDisplay
	#	clr_province_flag = TN_SectorCentDisplay
	#}
	#
	#every_province = {
	#	limit = {
	#		NOT = {
	#			has_province_flag = TN_SectorPartDisplay
	#		}
	#		isValidProv = yes
	#	}
	#
	#	set_key = { lhs = Plague_Tmp0 which = TN_ProvSply51 } # Commerce Output 1
	#	change_key = { lhs = Plague_Tmp0 value = 0.01 } # Commerce Output 1
	#	save_event_target_as = ProvDisplay # Save 1. Center option as event target		
	#	
	#	every_trade_node_member_province = {
	#		limit = {
	#			isValidProv = yes
	#			owned_by = PREV
	#			NOT = {
	#				has_province_flag = TN_SectorPartDisplay
	#			}
	#		}
	#		set_province_flag = TN_SectorPartDisplay
	#		set_key = { lhs = Plague_Tmp1 which = TN_ProvSply51 } # Commerce Output 2			
	#		PREV = { 
	#			set_key = { lhs = Plague_Tmp1 which = PREV } # Get variable into province 1
	#			
	#			if = {
	#				limit = {
	#					check_key = { lhs = Plague_Tmp1 which = Plague_Tmp0 } #if commerce > province 1 -> province 2 is new center
	#				}
	#				set_key = { lhs = Plague_Tmp0 which = Plague_Tmp1 } # store latest highest commerce value in the original value					
	#				PREV = { save_event_target_as = ProvDisplay } # save 2. center as event target
	#			}
	#		}
	#	}
	#	event_target:ProvDisplay = {
	#		set_province_flag = TN_SectorCentDisplay
	#	}
	#}

	tradenode_centers = {
        clr_global_flag = HasSeaAccess
        clr_global_flag = HasRiverSeaAccess
        clr_global_flag = HasRiverSeaBAccess
        clr_global_flag = HasSilkAccess
        every_trade_node_member_country = {
            limit = {
                #has_country_flag = Has_TNSector
                NOT = { tag = AAA }
            }
            set_key = { lhs = Tmp_0 value = 0 }
            clr_global_flag = HasSeaAccess
            clr_global_flag = HasRiverSeaAccess
            clr_global_flag = HasRiverSeaBAccess
            clr_global_flag = HasSilkAccess
            clr_country_flag = Found_TN
            every_province = {
                limit = {
                    same_trade_node_as = PREV_PREV
                    owned_by = PREV
                    isValidProv = yes
                }
                if = {
                    limit = {                       
                        has_port = yes 
                        NOT = { has_province_modifier = lack_of_harbour }
                    }
                    set_global_flag = HasSeaAccess                   
                }
                if = {
                    limit = {
                        check_key = { lhs = TN_River value = 1 }
                    }
                    set_global_flag = HasRiverSeaAccess
                }
                if = {
                    limit = {
                        always = no ### will enable later
                        has_province_flag = TN_RiverJumpB
                    }
                    set_global_flag = HasRiverSeaBAccess                   
                }
                if = {
                    limit = {
                        has_province_flag = TN_Silk
                    }
                    set_global_flag = HasSilkAccess                   
                }
                set_province_flag = TN_SectorPart
                export_to_key = { lhs = Tmp_0 value = base_production }
                export_to_key = { lhs = Tmp_1 value = province_trade_power }
                change_key = { lhs = Tmp_0 value = 1 }
                multiply_key = { lhs = Tmp_0 which = Tmp_1 }
                change_key = { lhs = Tmp_0 value = 1 }
                #The Above returns exactly 1 if no province in the tradenode has any trade power
                PREV = {
                    set_country_flag = Found_TN
                    if = {
                        limit = {
                            NOT = { check_key = { lhs = Tmp_0 which = PREV } }
                        }
                        set_key = { lhs = Tmp_0 which = PREV }
                        PREV = { save_event_target_as = SectorCentTarget }
                    }
                }
            }
            if = {
                limit = {
                    has_country_flag = Found_TN
                }
                clr_country_flag = Found_TN
                event_target:SectorCentTarget = {
                    set_province_flag = TN_SectorCent
                    if = {
                        limit = {
                            has_global_flag = HasSeaAccess
                        }
                        set_province_flag = HasSeaAccess
                    }
                    else = {
                        clr_province_flag = HasSeaAccess
                    }
                    if = {
                        limit = {
                            has_global_flag = HasRiverSeaAccess
                        }
                        set_province_flag = HasRiverSeaAccess
                    }
                    else = {
                        clr_province_flag = HasRiverSeaAccess
                    }
                    if = {
                        limit = {
                            has_global_flag = HasRiverSeaBAccess
                        }
                        set_province_flag = HasRiverSeaBAccess
                    }
                    else = {
                        clr_province_flag = HasRiverSeaBAccess
                    }
                    if = {
                        limit = {
                            has_global_flag = HasSilkAccess
                        }
                        set_province_flag = HasSilkAccess
                    }
                    else = {
                        clr_province_flag = HasSilkAccess
                    }
                }
            }
        }       
    }
}

# Refresh sector price by getting weighted average
TN_RefreshPrice = {
	# Set weighted price in every provinces to be later summed up in their sectors
    regiongroup = {
        region = {
            limit = {
                has_province_flag = TN_SectorPart
            }
			# Weight is arithmetic mean between total dev and 1
            set_key = { lhs = Public_Tmp1 which = Dev_Total }
            change_key = { lhs = Public_Tmp1 value = 1 }
            multiply_key = { lhs = Public_Tmp1 value = 0.5 }

            multiply_key = { lhs = TN_ProvPrc1 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc2 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc4 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc5 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc6 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc9 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc10 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc21 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc22 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc23 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc24 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc25 which = Public_Tmp1 }
            multiply_key = { lhs = TN_ProvPrc41 which = Public_Tmp1 }
        }
    }
	
	# Main deal
    regiongroup = {
        region = {
            limit = {
                has_province_flag = TN_SectorCent
            }
			# Sum up weight and weighted price from member provinces
			every_trade_node_member_province = {
				if = {	
					limit = {
						owned_by = PREV
						has_province_flag = TN_SectorPart

						NOT = {
							has_province_flag = TN_SectorCent
						}
						NOT = {
							province_id = PREV
						}
					}
					PREV = {
						# Edit for new produce
						change_key = { lhs = Public_Tmp1 which = PREV }

						change_key = { lhs = TN_ProvPrc1 which = PREV }
						change_key = { lhs = TN_ProvPrc2 which = PREV }
						change_key = { lhs = TN_ProvPrc4 which = PREV }
						change_key = { lhs = TN_ProvPrc5 which = PREV }
						change_key = { lhs = TN_ProvPrc6 which = PREV }
						change_key = { lhs = TN_ProvPrc9 which = PREV }
						change_key = { lhs = TN_ProvPrc10 which = PREV }
						change_key = { lhs = TN_ProvPrc21 which = PREV }
						change_key = { lhs = TN_ProvPrc22 which = PREV }
						change_key = { lhs = TN_ProvPrc23 which = PREV }
						change_key = { lhs = TN_ProvPrc24 which = PREV }
						change_key = { lhs = TN_ProvPrc25 which = PREV }
						change_key = { lhs = TN_ProvPrc41 which = PREV }
					}
				}
			}
			
			# Divide the sum by weight to get weighted average
            # Edit for new produce
            divide_key = { lhs = TN_ProvPrc1 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc2 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc4 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc5 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc6 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc9 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc10 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc21 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc22 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc23 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc24 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc25 which = Public_Tmp1 }
            divide_key = { lhs = TN_ProvPrc41 which = Public_Tmp1 }
			
			# Assign weight averaged price in all member provinces
			every_trade_node_member_province = {
				if = {
					limit = {
						owned_by = PREV
						has_province_flag = TN_SectorPart
					}
					if = {
						limit = {
							NOT = {
								province_id = PREV
							}
						}
						# Edit for new produce
						set_key = { lhs = TN_ProvPrc1 which = PREV }
						set_key = { lhs = TN_ProvPrc2 which = PREV }
						set_key = { lhs = TN_ProvPrc4 which = PREV }
						set_key = { lhs = TN_ProvPrc5 which = PREV }
						set_key = { lhs = TN_ProvPrc6 which = PREV }
						set_key = { lhs = TN_ProvPrc9 which = PREV }
						set_key = { lhs = TN_ProvPrc10 which = PREV }
						set_key = { lhs = TN_ProvPrc21 which = PREV }
						set_key = { lhs = TN_ProvPrc22 which = PREV }
						set_key = { lhs = TN_ProvPrc23 which = PREV }
						set_key = { lhs = TN_ProvPrc24 which = PREV }
						set_key = { lhs = TN_ProvPrc25 which = PREV }
						set_key = { lhs = TN_ProvPrc41 which = PREV }
					}
					set_key = { lhs = Public_Tmp1 value = 0 }
				}
			}
        }
    }
}

# Sum province level supply and demand in sector level
# Also sum up each province's stockpile of goods
TN_SumSector = {
    regiongroup = {
        region = {
            limit = {
                has_province_flag = TN_SectorCent
            }
            # Edit for new produce
            set_key = { lhs = TN_SectorDmnd1 which = TN_ProvDmnd1 }
            set_key = { lhs = TN_SectorDmnd2 which = TN_ProvDmnd2 }
            set_key = { lhs = TN_SectorDmnd4 which = TN_ProvDmnd4 }
            set_key = { lhs = TN_SectorDmnd5 which = TN_ProvDmnd5 }
            set_key = { lhs = TN_SectorDmnd6 which = TN_ProvDmnd6 }
            set_key = { lhs = TN_SectorDmnd9 which = TN_ProvDmnd9 }
            set_key = { lhs = TN_SectorDmnd10 which = TN_ProvDmnd10 }

            set_key = { lhs = TN_SectorDmnd21 which = TN_ProvDmnd21 }
            set_key = { lhs = TN_SectorDmnd22 which = TN_ProvDmnd22 }
            set_key = { lhs = TN_SectorDmnd23 which = TN_ProvDmnd23 }
            set_key = { lhs = TN_SectorDmnd24 which = TN_ProvDmnd24 }
            set_key = { lhs = TN_SectorDmnd25 which = TN_ProvDmnd25 }

            set_key = { lhs = TN_SectorDmnd41 which = TN_ProvDmnd41 }

            # Edit for new produce
            set_key = { lhs = TN_SectorSply1 which = TN_ProvSply1 }
            set_key = { lhs = TN_SectorSply2 which = TN_ProvSply2 }
            set_key = { lhs = TN_SectorSply4 which = TN_ProvSply4 }
            set_key = { lhs = TN_SectorSply5 which = TN_ProvSply5 }
            set_key = { lhs = TN_SectorSply6 which = TN_ProvSply6 }
            set_key = { lhs = TN_SectorSply9 which = TN_ProvSply9 }
            set_key = { lhs = TN_SectorSply10 which = TN_ProvSply10 }
            
            set_key = { lhs = TN_SectorSply21 which = TN_ProvSply21 }
            set_key = { lhs = TN_SectorSply22 which = TN_ProvSply22 }
            set_key = { lhs = TN_SectorSply23 which = TN_ProvSply23 }
            set_key = { lhs = TN_SectorSply24 which = TN_ProvSply24 }
            set_key = { lhs = TN_SectorSply25 which = TN_ProvSply25 }

            set_key = { lhs = TN_SectorSply41 which = TN_ProvSply41 }
            set_key = { lhs = TN_SectorSply51 which = TN_ProvSply51 }
            
            # Store war needs
            set_key = { lhs = PublicHelper_Tmp1 which = Mil_Maint1 }
            set_key = { lhs = PublicHelper_Tmp2 which = Mil_Maint2 }
            set_key = { lhs = PublicHelper_Tmp3 which = Mil_Maint5 }
            set_key = { lhs = PublicHelper_Tmp4 which = Mil_Maint21 }
            set_key = { lhs = PublicHelper_Tmp5 which = Mil_Maint22 }
            set_key = { lhs = PublicHelper_Tmp6 which = Mil_Maint24 }
            set_key = { lhs = PublicHelper_Tmp7 which = Mil_Maint41 }

            change_key = { lhs = PublicHelper_Tmp1 which = Mil_Build1 }
            change_key = { lhs = PublicHelper_Tmp2 which = Mil_Build2 }
            change_key = { lhs = PublicHelper_Tmp3 which = Mil_Build5 }
            change_key = { lhs = PublicHelper_Tmp4 which = Mil_Build21 }
            change_key = { lhs = PublicHelper_Tmp5 which = Mil_Build22 }
            change_key = { lhs = PublicHelper_Tmp6 which = Mil_Build24 }
            change_key = { lhs = PublicHelper_Tmp7 which = Mil_Build41 }           
            
            set_key = { lhs = Mil_Fill1 value = 0 }
            set_key = { lhs = Mil_Fill2 value = 0 }
            set_key = { lhs = Mil_Fill5 value = 0 }
            set_key = { lhs = Mil_Fill21 value = 0 }
            set_key = { lhs = Mil_Fill22 value = 0 }
            set_key = { lhs = Mil_Fill24 value = 0 }
            set_key = { lhs = Mil_Fill41 value = 0 }

            every_trade_node_member_province = {
				if = {
					limit = {
						owned_by = PREV
						has_province_flag = TN_SectorPart
						NOT = {
							province_id = PREV
						}
					}
					# Edit for new produce
					TN_SumSectorHelper = { type = Dmnd prod = 1 }
					TN_SumSectorHelper = { type = Dmnd prod = 2 }
					TN_SumSectorHelper = { type = Dmnd prod = 4 }
					TN_SumSectorHelper = { type = Dmnd prod = 5 }
					TN_SumSectorHelper = { type = Dmnd prod = 6 }
					TN_SumSectorHelper = { type = Dmnd prod = 9 }
					TN_SumSectorHelper = { type = Dmnd prod = 10 }
					TN_SumSectorHelper = { type = Dmnd prod = 21 }
					TN_SumSectorHelper = { type = Dmnd prod = 22 }
					TN_SumSectorHelper = { type = Dmnd prod = 23 }
					TN_SumSectorHelper = { type = Dmnd prod = 24 }
					TN_SumSectorHelper = { type = Dmnd prod = 25 }
					TN_SumSectorHelper = { type = Dmnd prod = 41 }

					# Edit for new produce
					TN_SumSectorHelper = { type = Sply prod = 1 }
					TN_SumSectorHelper = { type = Sply prod = 2 }
					TN_SumSectorHelper = { type = Sply prod = 4 }
					TN_SumSectorHelper = { type = Sply prod = 5 }
					TN_SumSectorHelper = { type = Sply prod = 6 }
					TN_SumSectorHelper = { type = Sply prod = 9 }
					TN_SumSectorHelper = { type = Sply prod = 10 }
					TN_SumSectorHelper = { type = Sply prod = 21 }
					TN_SumSectorHelper = { type = Sply prod = 22 }
					TN_SumSectorHelper = { type = Sply prod = 23 }
					TN_SumSectorHelper = { type = Sply prod = 24 }
					TN_SumSectorHelper = { type = Sply prod = 25 }
					TN_SumSectorHelper = { type = Sply prod = 41 }
					TN_SumSectorHelper = { type = Sply prod = 51 }

                    set_key = { lhs = PublicHelper_Tmp1 which = Mil_Maint1 }
                    set_key = { lhs = PublicHelper_Tmp2 which = Mil_Maint2 }
                    set_key = { lhs = PublicHelper_Tmp3 which = Mil_Maint5 }
                    set_key = { lhs = PublicHelper_Tmp4 which = Mil_Maint21 }
                    set_key = { lhs = PublicHelper_Tmp5 which = Mil_Maint22 }
                    set_key = { lhs = PublicHelper_Tmp6 which = Mil_Maint24 }
                    set_key = { lhs = PublicHelper_Tmp7 which = Mil_Maint41 }

                    change_key = { lhs = PublicHelper_Tmp1 which = Mil_Build1 }
                    change_key = { lhs = PublicHelper_Tmp2 which = Mil_Build2 }
                    change_key = { lhs = PublicHelper_Tmp3 which = Mil_Build5 }
                    change_key = { lhs = PublicHelper_Tmp4 which = Mil_Build21 }
                    change_key = { lhs = PublicHelper_Tmp5 which = Mil_Build22 }
                    change_key = { lhs = PublicHelper_Tmp6 which = Mil_Build24 }
                    change_key = { lhs = PublicHelper_Tmp7 which = Mil_Build41 }
					
					PREV = {
						# Edit for new produce
						change_key = { lhs = TN_SectorStockpile1 which = PREV }
						change_key = { lhs = TN_SectorStockpile2 which = PREV }
						change_key = { lhs = TN_SectorStockpile4 which = PREV }
						change_key = { lhs = TN_SectorStockpile5 which = PREV }
						change_key = { lhs = TN_SectorStockpile6 which = PREV }
						change_key = { lhs = TN_SectorStockpile9 which = PREV }
						change_key = { lhs = TN_SectorStockpile10 which = PREV }

						change_key = { lhs = TN_SectorStockpile21 which = PREV }
						change_key = { lhs = TN_SectorStockpile22 which = PREV }
						change_key = { lhs = TN_SectorStockpile23 which = PREV }
						change_key = { lhs = TN_SectorStockpile24 which = PREV }
						change_key = { lhs = TN_SectorStockpile25 which = PREV }

						change_key = { lhs = TN_SectorStockpile41 which = PREV }

						# Edit for new produce
						change_key = { lhs = TN_SectorStockpileSize1 which = PREV }
						change_key = { lhs = TN_SectorStockpileSize2 which = PREV }
						change_key = { lhs = TN_SectorStockpileSize4 which = PREV }
						change_key = { lhs = TN_SectorStockpileSize5 which = PREV }
						change_key = { lhs = TN_SectorStockpileSize6 which = PREV }
						change_key = { lhs = TN_SectorStockpileSize9 which = PREV }
						change_key = { lhs = TN_SectorStockpileSize10 which = PREV }

						change_key = { lhs = TN_SectorStockpileSize21 which = PREV }
						change_key = { lhs = TN_SectorStockpileSize22 which = PREV }
						change_key = { lhs = TN_SectorStockpileSize23 which = PREV }
						change_key = { lhs = TN_SectorStockpileSize24 which = PREV }
						change_key = { lhs = TN_SectorStockpileSize25 which = PREV }

						change_key = { lhs = TN_SectorStockpileSize41 which = PREV }

                        change_key = { lhs = PublicHelper_Tmp1 which = PREV }
                        change_key = { lhs = PublicHelper_Tmp2 which = PREV }
                        change_key = { lhs = PublicHelper_Tmp3 which = PREV }
                        change_key = { lhs = PublicHelper_Tmp4 which = PREV }
                        change_key = { lhs = PublicHelper_Tmp5 which = PREV }
                        change_key = { lhs = PublicHelper_Tmp6 which = PREV }
                        change_key = { lhs = PublicHelper_Tmp7 which = PREV }
					}
					set_key = { lhs = Public_Tmp1 value = 0 }
				}
			}
			
			# Set stockpile size + goods decay system
            # Minimum stockpile size is 4 times the current Demand or Supply, whichever is highest.
            TN_SumSectorHelper2 = { prod = 1 }
            TN_SumSectorHelper2 = { prod = 2 }
            TN_SumSectorHelper2 = { prod = 4 }
            TN_SumSectorHelper2 = { prod = 5 }
            TN_SumSectorHelper2 = { prod = 6 }
            TN_SumSectorHelper2 = { prod = 9 }
            TN_SumSectorHelper2 = { prod = 10 }
            TN_SumSectorHelper2 = { prod = 21 }
            TN_SumSectorHelper2 = { prod = 22 }
            TN_SumSectorHelper2 = { prod = 23 }
            TN_SumSectorHelper2 = { prod = 24 }
            TN_SumSectorHelper2 = { prod = 25 }
            TN_SumSectorHelper2 = { prod = 41 }

            # Store stockpile before Trade
            set_key = { lhs = TN_SectorStockpileDelta1 which = TN_SectorStockpile1 }
            set_key = { lhs = TN_SectorStockpileDelta2 which = TN_SectorStockpile2 }
            set_key = { lhs = TN_SectorStockpileDelta4 which = TN_SectorStockpile4 }
            set_key = { lhs = TN_SectorStockpileDelta5 which = TN_SectorStockpile5 }
            set_key = { lhs = TN_SectorStockpileDelta6 which = TN_SectorStockpile6 }
            set_key = { lhs = TN_SectorStockpileDelta9 which = TN_SectorStockpile9 }
            set_key = { lhs = TN_SectorStockpileDelta10 which = TN_SectorStockpile10 }
            set_key = { lhs = TN_SectorStockpileDelta21 which = TN_SectorStockpile21 }
            set_key = { lhs = TN_SectorStockpileDelta22 which = TN_SectorStockpile22 }
            set_key = { lhs = TN_SectorStockpileDelta23 which = TN_SectorStockpile23 }
            set_key = { lhs = TN_SectorStockpileDelta24 which = TN_SectorStockpile24 }
            set_key = { lhs = TN_SectorStockpileDelta25 which = TN_SectorStockpile25 }
            set_key = { lhs = TN_SectorStockpileDelta41 which = TN_SectorStockpile41 }

            set_key = { lhs = Public_Tmp1 value = 0 }
            set_key = { lhs = Public_Tmp2 value = 0 }
        }
    }
}

# Spread sector level stockpile to each member provinces
TN_SpreadStockpile = {
    regiongroup = {
        region = {
            limit = {
                has_province_flag = TN_SectorCent
            }
            # Edit for new produce
           
            multiply_key = { lhs = TN_SectorStockpileDelta1 value = -1 }
            multiply_key = { lhs = TN_SectorStockpileDelta2 value = -1 }
            multiply_key = { lhs = TN_SectorStockpileDelta4 value = -1 }
            multiply_key = { lhs = TN_SectorStockpileDelta5 value = -1 }
            multiply_key = { lhs = TN_SectorStockpileDelta6 value = -1 }
            multiply_key = { lhs = TN_SectorStockpileDelta9 value = -1 }
            multiply_key = { lhs = TN_SectorStockpileDelta10 value = -1 } 
            multiply_key = { lhs = TN_SectorStockpileDelta21 value = -1 }
            multiply_key = { lhs = TN_SectorStockpileDelta22 value = -1 }
            multiply_key = { lhs = TN_SectorStockpileDelta23 value = -1 }
            multiply_key = { lhs = TN_SectorStockpileDelta24 value = -1 }
            multiply_key = { lhs = TN_SectorStockpileDelta25 value = -1 }
            multiply_key = { lhs = TN_SectorStockpileDelta41 value = -1 }

            change_key = { lhs = TN_SectorStockpileDelta1 which = TN_SectorStockpile1 }
            change_key = { lhs = TN_SectorStockpileDelta2 which = TN_SectorStockpile2 }
            change_key = { lhs = TN_SectorStockpileDelta4 which = TN_SectorStockpile4 }
            change_key = { lhs = TN_SectorStockpileDelta5 which = TN_SectorStockpile5 }
            change_key = { lhs = TN_SectorStockpileDelta6 which = TN_SectorStockpile6 }
            change_key = { lhs = TN_SectorStockpileDelta9 which = TN_SectorStockpile9 }
            change_key = { lhs = TN_SectorStockpileDelta10 which = TN_SectorStockpile10 } 
            change_key = { lhs = TN_SectorStockpileDelta21 which = TN_SectorStockpile21 }
            change_key = { lhs = TN_SectorStockpileDelta22 which = TN_SectorStockpile22 }
            change_key = { lhs = TN_SectorStockpileDelta23 which = TN_SectorStockpile23 }
            change_key = { lhs = TN_SectorStockpileDelta24 which = TN_SectorStockpile24 }
            change_key = { lhs = TN_SectorStockpileDelta25 which = TN_SectorStockpile25 }
            change_key = { lhs = TN_SectorStockpileDelta41 which = TN_SectorStockpile41 }

            set_key = { lhs = Display_TN_SectorStockpile1 which = TN_SectorStockpile1 }
            set_key = { lhs = Display_TN_SectorStockpile2 which = TN_SectorStockpile2 }
            set_key = { lhs = Display_TN_SectorStockpile4 which = TN_SectorStockpile4 }
            set_key = { lhs = Display_TN_SectorStockpile5 which = TN_SectorStockpile5 }
            set_key = { lhs = Display_TN_SectorStockpile6 which = TN_SectorStockpile6 }
            set_key = { lhs = Display_TN_SectorStockpile9 which = TN_SectorStockpile9 }
            set_key = { lhs = Display_TN_SectorStockpile10 which = TN_SectorStockpile10 }
			
            set_key = { lhs = Display_TN_SectorStockpile21 which = TN_SectorStockpile21 }
            set_key = { lhs = Display_TN_SectorStockpile22 which = TN_SectorStockpile22 }
            set_key = { lhs = Display_TN_SectorStockpile23 which = TN_SectorStockpile23 }
            set_key = { lhs = Display_TN_SectorStockpile24 which = TN_SectorStockpile24 }
            set_key = { lhs = Display_TN_SectorStockpile25 which = TN_SectorStockpile25 }
			
            set_key = { lhs = Display_TN_SectorStockpile41 which = TN_SectorStockpile41 }
            
            
			
			# Modify desired stockpile size based on how much was sold
            # Edit for new produce
            TN_SpreadStockpileHelper1 = { prod = 1 }
            TN_SpreadStockpileHelper1 = { prod = 2 }
            TN_SpreadStockpileHelper1 = { prod = 4 }
            TN_SpreadStockpileHelper1 = { prod = 5 }
            TN_SpreadStockpileHelper1 = { prod = 6 }
            TN_SpreadStockpileHelper1 = { prod = 9 }
            TN_SpreadStockpileHelper1 = { prod = 10 }
            TN_SpreadStockpileHelper1 = { prod = 21 }
            TN_SpreadStockpileHelper1 = { prod = 22 }
            TN_SpreadStockpileHelper1 = { prod = 23 }
            TN_SpreadStockpileHelper1 = { prod = 24 }
            TN_SpreadStockpileHelper1 = { prod = 25 }
            TN_SpreadStockpileHelper1 = { prod = 41 } 
			
			# Desired stockpile size is capped by total commerce production
            set_key = { lhs = Public_Tmp1 which = TN_SectorSply51 }
            change_key = { lhs = Public_Tmp1 value = 1 }
            multiply_key = { lhs = Public_Tmp1 value = 200 } # Stockpile size
            multiply_key = { lhs = Public_Tmp1 which = Modi_StockpileSize } # Stockpile size modi
            
            # Edit for new produce
            TN_SpreadStockpileHelper2 = { prod = 1 PriceFactor=0.1 }
            TN_SpreadStockpileHelper2 = { prod = 2 PriceFactor=0.1 }
            TN_SpreadStockpileHelper2 = { prod = 4 PriceFactor=0.1 }
            TN_SpreadStockpileHelper2 = { prod = 5 PriceFactor=0.1 }
            TN_SpreadStockpileHelper2 = { prod = 6 PriceFactor=0.1 }
            TN_SpreadStockpileHelper2 = { prod = 9 PriceFactor=0.2 }
            TN_SpreadStockpileHelper2 = { prod = 10 PriceFactor=0.2 }
            TN_SpreadStockpileHelper2 = { prod = 21 PriceFactor=0.2 }
            TN_SpreadStockpileHelper2 = { prod = 22 PriceFactor=0.2 }
            TN_SpreadStockpileHelper2 = { prod = 23 PriceFactor=0.1 }
            TN_SpreadStockpileHelper2 = { prod = 24 PriceFactor=0.2 }
            TN_SpreadStockpileHelper2 = { prod = 25 PriceFactor=0.2 }
            TN_SpreadStockpileHelper2 = { prod = 41 PriceFactor=0.2 }

            set_key = { lhs = Public_Tmp1 value = 0 }
            set_key = { lhs = Public_Tmp2 value = 0 }
            set_key = { lhs = Public_Tmp3 value = 0 }
			
			# Minimum desired stockpile size
            # Edit for new produce
            change_key = { lhs = TN_SectorStockpileSize1 value = 1 }
            change_key = { lhs = TN_SectorStockpileSize2 value = 1 }
            change_key = { lhs = TN_SectorStockpileSize4 value = 1 }
            change_key = { lhs = TN_SectorStockpileSize5 value = 1 }
            change_key = { lhs = TN_SectorStockpileSize6 value = 1 }
            change_key = { lhs = TN_SectorStockpileSize9 value = 1 }
            change_key = { lhs = TN_SectorStockpileSize10 value = 1 }

            change_key = { lhs = TN_SectorStockpileSize21 value = 1 }
            change_key = { lhs = TN_SectorStockpileSize22 value = 1 }
            change_key = { lhs = TN_SectorStockpileSize23 value = 1 }
            change_key = { lhs = TN_SectorStockpileSize24 value = 1 }
            change_key = { lhs = TN_SectorStockpileSize25 value = 1 }

            change_key = { lhs = TN_SectorStockpileSize41 value = 1 }
			
			# Divide sector level values by total commerce production
			# Because sector level values are distributed to provinces based on their commerce share
            # Edit for new produce		
			
			
            divide_key = { lhs = TN_SectorStockpile1 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpile2 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpile4 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpile5 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpile6 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpile9 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpile10 which = TN_SectorSply51 }

            divide_key = { lhs = TN_SectorStockpile21 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpile22 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpile23 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpile24 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpile25 which = TN_SectorSply51 }

            divide_key = { lhs = TN_SectorStockpile41 which = TN_SectorSply51 }

            # Edit for new produce
            divide_key = { lhs = TN_SectorStockpileSize1 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileSize2 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileSize4 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileSize5 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileSize6 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileSize9 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileSize10 which = TN_SectorSply51 }

            divide_key = { lhs = TN_SectorStockpileSize21 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileSize22 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileSize23 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileSize24 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileSize25 which = TN_SectorSply51 }

            divide_key = { lhs = TN_SectorStockpileSize41 which = TN_SectorSply51 }


            # Edit for new produce
			
			
            divide_key = { lhs = TN_SectorStockpileIn1 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileIn2 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileIn4 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileIn5 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileIn6 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileIn9 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileIn10 which = TN_SectorSply51 }

            divide_key = { lhs = TN_SectorStockpileIn21 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileIn22 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileIn23 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileIn24 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileIn25 which = TN_SectorSply51 }

            divide_key = { lhs = TN_SectorStockpileIn41 which = TN_SectorSply51 }

            # Edit for new produce	
			
			
            divide_key = { lhs = TN_SectorStockpileOut1 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileOut2 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileOut4 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileOut5 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileOut6 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileOut9 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileOut10 which = TN_SectorSply51 }

            divide_key = { lhs = TN_SectorStockpileOut21 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileOut22 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileOut23 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileOut24 which = TN_SectorSply51 }
            divide_key = { lhs = TN_SectorStockpileOut25 which = TN_SectorSply51 }

            divide_key = { lhs = TN_SectorStockpileOut41 which = TN_SectorSply51 }

            divide_key = { lhs = Tariff_Income which = TN_SectorSply51 }
			
			# Distribute
			every_trade_node_member_province = {
				if = {
					limit = {
						owned_by = PREV
						has_province_flag = TN_SectorPart
						NOT = {
							province_id = PREV
						}
					}				
					
					# Edit for new produce
					set_key = { lhs = TN_SectorStockpile1 which = PREV }
					set_key = { lhs = TN_SectorStockpile2 which = PREV }
					set_key = { lhs = TN_SectorStockpile4 which = PREV }
					set_key = { lhs = TN_SectorStockpile5 which = PREV }
					set_key = { lhs = TN_SectorStockpile6 which = PREV }
					set_key = { lhs = TN_SectorStockpile9 which = PREV }
					set_key = { lhs = TN_SectorStockpile10 which = PREV }

					set_key = { lhs = TN_SectorStockpile21 which = PREV }
					set_key = { lhs = TN_SectorStockpile22 which = PREV }
					set_key = { lhs = TN_SectorStockpile23 which = PREV }
					set_key = { lhs = TN_SectorStockpile24 which = PREV }
					set_key = { lhs = TN_SectorStockpile25 which = PREV }

					set_key = { lhs = TN_SectorStockpile41 which = PREV }

					# Edit for new produce
					set_key = { lhs = TN_SectorStockpileSize1 which = PREV }
					set_key = { lhs = TN_SectorStockpileSize2 which = PREV }
					set_key = { lhs = TN_SectorStockpileSize4 which = PREV }
					set_key = { lhs = TN_SectorStockpileSize5 which = PREV }
					set_key = { lhs = TN_SectorStockpileSize6 which = PREV }
					set_key = { lhs = TN_SectorStockpileSize9 which = PREV }
					set_key = { lhs = TN_SectorStockpileSize10 which = PREV }

					set_key = { lhs = TN_SectorStockpileSize21 which = PREV }
					set_key = { lhs = TN_SectorStockpileSize22 which = PREV }
					set_key = { lhs = TN_SectorStockpileSize23 which = PREV }
					set_key = { lhs = TN_SectorStockpileSize24 which = PREV }
					set_key = { lhs = TN_SectorStockpileSize25 which = PREV }

					set_key = { lhs = TN_SectorStockpileSize41 which = PREV }

					# Edit for new produce
					set_key = { lhs = TN_SectorStockpileIn1 which = PREV }
					set_key = { lhs = TN_SectorStockpileIn2 which = PREV }
					set_key = { lhs = TN_SectorStockpileIn4 which = PREV }
					set_key = { lhs = TN_SectorStockpileIn5 which = PREV }
					set_key = { lhs = TN_SectorStockpileIn6 which = PREV }
					set_key = { lhs = TN_SectorStockpileIn9 which = PREV }
					set_key = { lhs = TN_SectorStockpileIn10 which = PREV }

					set_key = { lhs = TN_SectorStockpileIn21 which = PREV }
					set_key = { lhs = TN_SectorStockpileIn22 which = PREV }
					set_key = { lhs = TN_SectorStockpileIn23 which = PREV }
					set_key = { lhs = TN_SectorStockpileIn24 which = PREV }
					set_key = { lhs = TN_SectorStockpileIn25 which = PREV }

					set_key = { lhs = TN_SectorStockpileIn41 which = PREV }

					# Edit for new produce
					set_key = { lhs = TN_SectorStockpileOut1 which = PREV }
					set_key = { lhs = TN_SectorStockpileOut2 which = PREV }
					set_key = { lhs = TN_SectorStockpileOut4 which = PREV }
					set_key = { lhs = TN_SectorStockpileOut5 which = PREV }
					set_key = { lhs = TN_SectorStockpileOut6 which = PREV }
					set_key = { lhs = TN_SectorStockpileOut9 which = PREV }
					set_key = { lhs = TN_SectorStockpileOut10 which = PREV }

					set_key = { lhs = TN_SectorStockpileOut21 which = PREV }
					set_key = { lhs = TN_SectorStockpileOut22 which = PREV }
					set_key = { lhs = TN_SectorStockpileOut23 which = PREV }
					set_key = { lhs = TN_SectorStockpileOut24 which = PREV }
					set_key = { lhs = TN_SectorStockpileOut25 which = PREV }

					set_key = { lhs = TN_SectorStockpileOut41 which = PREV }

					set_key = { lhs = Tariff_Income which = PREV }
				}
			}
			every_trade_node_member_province = {
				if = {
					limit = {
						owned_by = PREV
						has_province_flag = TN_SectorPart
					}
                    
					
					# Edit for new produce
					multiply_key = { lhs = TN_SectorStockpile1 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpile2 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpile4 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpile5 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpile6 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpile9 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpile10 which = TN_ProvSply51 }

					multiply_key = { lhs = TN_SectorStockpile21 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpile22 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpile23 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpile24 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpile25 which = TN_ProvSply51 }

					multiply_key = { lhs = TN_SectorStockpile41 which = TN_ProvSply51 }

					# Edit for new produce
					multiply_key = { lhs = TN_SectorStockpileSize1 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileSize2 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileSize4 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileSize5 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileSize6 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileSize9 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileSize10 which = TN_ProvSply51 }

					multiply_key = { lhs = TN_SectorStockpileSize21 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileSize22 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileSize23 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileSize24 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileSize25 which = TN_ProvSply51 }

					multiply_key = { lhs = TN_SectorStockpileSize41 which = TN_ProvSply51 }

					# Edit for new produce
					multiply_key = { lhs = TN_SectorStockpileIn1 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileIn2 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileIn4 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileIn5 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileIn6 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileIn9 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileIn10 which = TN_ProvSply51 }

					multiply_key = { lhs = TN_SectorStockpileIn21 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileIn22 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileIn23 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileIn24 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileIn25 which = TN_ProvSply51 }

					multiply_key = { lhs = TN_SectorStockpileIn41 which = TN_ProvSply51 }

					# Edit for new produce
					multiply_key = { lhs = TN_SectorStockpileOut1 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileOut2 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileOut4 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileOut5 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileOut6 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileOut9 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileOut10 which = TN_ProvSply51 }

					multiply_key = { lhs = TN_SectorStockpileOut21 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileOut22 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileOut23 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileOut24 which = TN_ProvSply51 }
					multiply_key = { lhs = TN_SectorStockpileOut25 which = TN_ProvSply51 }

					multiply_key = { lhs = TN_SectorStockpileOut41 which = TN_ProvSply51 }		

					multiply_key = { lhs = Tariff_Income which = TN_ProvSply51 }
				}
			}
        }
    }
}

TN_SpreadStockpileHelper1 = { # Depreciate desire by 20% and increase by sold. So if you sold more than 20% of what you have (or 40% of what you wanted to sell) the desire will go up.
	multiply_key = { lhs = TN_SectorStockpileSize$prod$ value = 0.8 }
	change_key = { lhs = TN_SectorStockpileSize$prod$ which = TN_SectorStockpileOut$prod$ }
}

TN_SpreadStockpileHelper2 = {
    set_key = { lhs = Public_Tmp2 which = Public_Tmp1 }

    # The higher the price, the lower the desired stockpile.
    set_key = { lhs = Public_Tmp3 which = TN_ProvPrc$prod$ }
    #multiply_key = { lhs = Public_Tmp3 value = 1.05 }
    change_key = { lhs = Public_Tmp3 value = 4 }
    multiply_key = { lhs = Public_Tmp3 value = $PriceFactor$ } #divide_key = { lhs = Public_Tmp3 value = 5 }
    if = {
        limit = {
            NOT = { check_key = { lhs = Public_Tmp3 value = 1 } }
        }
        set_key = { lhs = Public_Tmp3 value = 1 }
    }
    divide_key = { lhs = Public_Tmp2 which = Public_Tmp3 }

    if = {
        limit = {
            check_key = { lhs = TN_SectorStockpileSize$prod$ which = Public_Tmp2 }
        }
        set_key = { lhs = TN_SectorStockpileSize$prod$ which = Public_Tmp2 }
    }
}

# Set a score for each country and sectors 
# This score determines who gets to trade first
TN_ScoreSector = {
        # All sectors have at least 1 score
        # This is for no-owner sectors
    regiongroup = {
        region = {
            limit = {
                has_province_flag = TN_SectorCent
            }
            set_key = { lhs = TN_SectorScore value = 1 }
        }
    }

        # Country score is number of merchants + 1 + stuff
        # Sector score is owner score, +1 if is capital
    every_country = {
        limit = {
            #has_country_flag = Has_TNSector
            isValidCountry = yes
        }
        #POP_GetMerchant = { return = TN_SectorScore }
        set_key = { lhs = TN_SectorScore value = 0 }
        export_to_key = { lhs = TN_SectorScore value = trigger_value:num_of_merchants }
        multiply_key = { lhs = TN_SectorScore value = 0.5 } # balancing; Mepper: Made Merchants quite a bit more influential than ships
        export_to_key = { lhs = Tmp_0 value = trigger_value:num_of_heavy_ship }
        multiply_key = { lhs = Tmp_0 value = 0.20 }
        if = {          #Curb China's outdated Heavy Ships giving them insane sector score all game
            limit = {
                culture_group = chinese_group
                NOT = {
                    full_idea_group = naval_ideas
                }
            }
            if = {
                limit = {
                    NOT = {
                        is_year = 1500
                    }
                }
                multiply_key = {
                    lhs = Tmp_0 
                    value = 0.5
                }
            }
            else_if = {
                limit = { 
                    NOT = {
                        is_year = 1650
                    }
                }
                multiply_key = {
                    lhs = Tmp_0 
                    value = 0.25
                }
            }
            else = {
                multiply_key = {
                    lhs = Tmp_0 
                    value = 0.1
                }
            } 
        }
        export_to_key = { lhs = Tmp_1 value = trigger_value:num_of_light_ship }
        multiply_key = { lhs = Tmp_1 value = 0.1 }
        export_to_key = { lhs = Tmp_3 value = trigger_value:num_of_galley }
        multiply_key = { lhs = Tmp_3 value = 0.05 }

        change_key = { lhs = TN_SectorScore which = Tmp_0 }
        change_key = { lhs = TN_SectorScore which = Tmp_1 }
        change_key = { lhs = TN_SectorScore which = Tmp_3 }
        change_key = { lhs = TN_SectorScore value = 1 }

        export_to_key = { lhs = Tmp_0 value = modifier:trade_efficiency }
        export_to_key = { lhs = Tmp_1 value = modifier:global_trade_power }
        ###
        #Maximum of -90% penalty to Sector Score based on Global Trade Power and Trade Efficiency each respectively
        if = {  limit = { NOT = { check_key = { lhs = Tmp_0 value = -0.9 } } } set_key = { lhs = Tmp_0 value = -0.9 } }
        if = {  limit = { NOT = { check_key = { lhs = Tmp_1 value = -0.9 } } } set_key = { lhs = Tmp_1 value = -0.9 } }
        change_key = { lhs = Tmp_0 value = 1 }
        change_key = { lhs = Tmp_1 value = 1 }
        ###
        #Sector Score gets multiplied by Trade Efficiency ^ 2 AND Global Trade Power ^ 2 to make it's effect bigger
        multiply_key = { lhs = Tmp_0 which = Tmp_0 }
        multiply_key = { lhs = Tmp_1 which = Tmp_1 }
        multiply_key = { lhs = TN_SectorScore which = Tmp_0 }
        multiply_key = { lhs = TN_SectorScore which = Tmp_1 }

        if = {      #Differentiate between better commerce levels
            limit = {
                Rights_BGCom10Has = yes
            }
            change_key = { lhs = TN_SectorScore value = 10 }
        }
        else_if = {
            limit = {
                Rights_BGCom9Has = yes
            }
            change_key = { lhs = TN_SectorScore value = 8 }
        }
        else_if = {
            limit = { 
                Rights_BGCom8Has = yes 
            }
            change_key = { lhs = TN_SectorScore value = 6 }
        }
        else_if = {
            limit = {
                Rights_BGCom7Has = yes
            }
            change_key = { lhs = TN_SectorScore value = 4 }
        }
        else_if = {
            limit = {
                Rights_BGCom6Has = yes
            }
            change_key = { lhs = TN_SectorScore value = 2 }
        }
        else_if = {
            limit = {
                Rights_BGCom5Has = yes
            }
            change_key = { lhs = TN_SectorScore value = 1 }
        }
        if = {
            limit = {
                has_reform = Pol_Mandate3
                #is_key_equal = { lhs = Pol_Mandate value = 2 }
            }
            multiply_key = { lhs = TN_SectorScore value = 1.2 }
        }
        if = {
            limit = {
                has_idea_group = free_trade_ideas
            }
            multiply_key = { lhs = TN_SectorScore value = 1.3 }
        }
        else_if = {
            limit = {
                has_idea_group = mercantilism_ideas
            }
            multiply_key = { lhs = TN_SectorScore value = 1.2 }
        }
        else_if = {
            limit = {
                has_idea_group = trade_ideas
            }
            multiply_key = { lhs = TN_SectorScore value = 1.1 }
        }

        Compute_Commercial_Risk = yes # Has nothing to do with TN_SectorScore. This is mainly to pass it later and calc it once per owner

        capital_scope = {
            save_event_target_as = Prov
        }

        every_province = {
            limit = {
				owned_by = PREV
                has_province_flag = TN_SectorCent
            }
            set_key = { lhs = TN_SectorScore which = PREV }
            if = {
                limit = {
                    same_trade_node_as = event_target:Prov
                }
                change_key = { lhs = TN_SectorScore value = 3 }
            }
            if = { 
                limit = {
                    is_strongest_trade_power = PREV
                }
                change_key = { lhs = TN_SectorScore value = 3 }
            }
            if = {
                limit = {
                    has_most_province_trade_power = PREV
                }
                multiply_key = { lhs = TN_SectorScore value = 1.1 }
            }
            
            if = {
                limit = {
                    NOT = { check_key = { lhs = TN_SectorScore value = 1 } }
                }
                set_key = { lhs = TN_SectorScore value = 1 }
			}
            # If has no center of trade within a sector, set score to 0
            # That prevents the sector from trading with other sectors
            if = {
                limit = {
                    NOT = {
                        any_trade_node_member_province = {
						    owned_by = PREV
                            has_province_flag = TN_COT
                            has_province_flag = TN_SectorPart
                        }
                    }
                }
                set_key = { lhs = TN_SectorScore value = 0 }
                #log = "Error: Sector has no Center of Trade!"     #Should be fine, no need to have logging for this on all the time
            }
        }
    }
}

# Do trade by resolving bids and offers in each sectors
TN_DoTrade = {
        # Set bids and offers
        # Each sectors set 2 types of bid/offer
        # One type is for the sector, the other is for sector's merchants
        # Sector bids/offers are for selling what the sector produced or fulfilling what the sector demands
        # Merchant bids/offers are for making profit by buying low and selling high
    regiongroup = {
        region = {
            limit = {
                has_province_flag = TN_SectorCent
            }
            if = {
				limit = {
					is_key_equal = { lhs = TN_SectorScore value = 0 }
				}
				set_province_flag = TN_SectorCentNoTC
			}
			
                    # Sector bid/offer
            # Edit for new produce
            set_key = { lhs = TN_SectorBid1 which = TN_SectorDmnd1 }
            set_key = { lhs = TN_SectorBid2 which = TN_SectorDmnd2 }
            set_key = { lhs = TN_SectorBid4 which = TN_SectorDmnd4 }
            set_key = { lhs = TN_SectorBid5 which = TN_SectorDmnd5 }
            set_key = { lhs = TN_SectorBid6 which = TN_SectorDmnd6 }
            set_key = { lhs = TN_SectorBid9 which = TN_SectorDmnd9 }
            set_key = { lhs = TN_SectorBid10 which = TN_SectorDmnd10 }
            set_key = { lhs = TN_SectorBid21 which = TN_SectorDmnd21 }
            set_key = { lhs = TN_SectorBid22 which = TN_SectorDmnd22 }
            set_key = { lhs = TN_SectorBid23 which = TN_SectorDmnd23 }
            set_key = { lhs = TN_SectorBid24 which = TN_SectorDmnd24 }
            set_key = { lhs = TN_SectorBid25 which = TN_SectorDmnd25 }
            set_key = { lhs = TN_SectorBid41 which = TN_SectorDmnd41 }

            # Edit for new produce
            set_key = { lhs = TN_SectorOffer1 which = TN_SectorSply1 }
            set_key = { lhs = TN_SectorOffer2 which = TN_SectorSply2 }
            set_key = { lhs = TN_SectorOffer4 which = TN_SectorSply4 }
            set_key = { lhs = TN_SectorOffer5 which = TN_SectorSply5 }
            set_key = { lhs = TN_SectorOffer6 which = TN_SectorSply6 }
            set_key = { lhs = TN_SectorOffer9 which = TN_SectorSply9 }
            set_key = { lhs = TN_SectorOffer10 which = TN_SectorSply10 }
            set_key = { lhs = TN_SectorOffer21 which = TN_SectorSply21 }
            set_key = { lhs = TN_SectorOffer22 which = TN_SectorSply22 }
            set_key = { lhs = TN_SectorOffer23 which = TN_SectorSply23 }
            set_key = { lhs = TN_SectorOffer24 which = TN_SectorSply24 }
            set_key = { lhs = TN_SectorOffer25 which = TN_SectorSply25 }
            set_key = { lhs = TN_SectorOffer41 which = TN_SectorSply41 }

            # Edit for new produce
            set_key = { lhs = TN_SectorSpend1 value = 0 }
            set_key = { lhs = TN_SectorSpend2 value = 0 }
            set_key = { lhs = TN_SectorSpend4 value = 0 }
            set_key = { lhs = TN_SectorSpend5 value = 0 }
            set_key = { lhs = TN_SectorSpend6 value = 0 }
            set_key = { lhs = TN_SectorSpend9 value = 0 }
            set_key = { lhs = TN_SectorSpend10 value = 0 }
            set_key = { lhs = TN_SectorSpend21 value = 0 }
            set_key = { lhs = TN_SectorSpend22 value = 0 }
            set_key = { lhs = TN_SectorSpend23 value = 0 }
            set_key = { lhs = TN_SectorSpend24 value = 0 }
            set_key = { lhs = TN_SectorSpend25 value = 0 }
            set_key = { lhs = TN_SectorSpend41 value = 0 }

            # Edit for new produce
            set_key = { lhs = TN_SectorEarn1 value = 0 }
            set_key = { lhs = TN_SectorEarn2 value = 0 }
            set_key = { lhs = TN_SectorEarn4 value = 0 }
            set_key = { lhs = TN_SectorEarn5 value = 0 }
            set_key = { lhs = TN_SectorEarn6 value = 0 }
            set_key = { lhs = TN_SectorEarn9 value = 0 }
            set_key = { lhs = TN_SectorEarn10 value = 0 }
            set_key = { lhs = TN_SectorEarn21 value = 0 }
            set_key = { lhs = TN_SectorEarn22 value = 0 }
            set_key = { lhs = TN_SectorEarn23 value = 0 }
            set_key = { lhs = TN_SectorEarn24 value = 0 }
            set_key = { lhs = TN_SectorEarn25 value = 0 }
            set_key = { lhs = TN_SectorEarn41 value = 0 }

            set_key = { lhs = TN_SectorTraffic1 value = 0 }
            set_key = { lhs = TN_SectorTraffic2 value = 0 }
            set_key = { lhs = TN_SectorTraffic4 value = 0 }
            set_key = { lhs = TN_SectorTraffic5 value = 0 }
            set_key = { lhs = TN_SectorTraffic6 value = 0 }
            set_key = { lhs = TN_SectorTraffic9 value = 0 }
            set_key = { lhs = TN_SectorTraffic10 value = 0 }
            set_key = { lhs = TN_SectorTraffic21 value = 0 }
            set_key = { lhs = TN_SectorTraffic22 value = 0 }
            set_key = { lhs = TN_SectorTraffic23 value = 0 }
            set_key = { lhs = TN_SectorTraffic24 value = 0 }
            set_key = { lhs = TN_SectorTraffic25 value = 0 }
            set_key = { lhs = TN_SectorTraffic41 value = 0 }

            set_key = { lhs = TN_SectorTV value = 0 }

            # Merchant bid/offer
            # Edit for new produce
            set_key = { lhs = TN_SectorStockpileOffer1 which = TN_SectorStockpile1 }
            set_key = { lhs = TN_SectorStockpileOffer2 which = TN_SectorStockpile2 }
            set_key = { lhs = TN_SectorStockpileOffer4 which = TN_SectorStockpile4 }
            set_key = { lhs = TN_SectorStockpileOffer5 which = TN_SectorStockpile5 }
            set_key = { lhs = TN_SectorStockpileOffer6 which = TN_SectorStockpile6 }
            set_key = { lhs = TN_SectorStockpileOffer9 which = TN_SectorStockpile9 }
            set_key = { lhs = TN_SectorStockpileOffer10 which = TN_SectorStockpile10 }
            set_key = { lhs = TN_SectorStockpileOffer21 which = TN_SectorStockpile21 }
            set_key = { lhs = TN_SectorStockpileOffer22 which = TN_SectorStockpile22 }
            set_key = { lhs = TN_SectorStockpileOffer23 which = TN_SectorStockpile23 }
            set_key = { lhs = TN_SectorStockpileOffer24 which = TN_SectorStockpile24 }
            set_key = { lhs = TN_SectorStockpileOffer25 which = TN_SectorStockpile25 }
            set_key = { lhs = TN_SectorStockpileOffer41 which = TN_SectorStockpile41 }

            # Edit for new produce
            #multiply_key = { lhs = TN_SectorStockpileOffer1 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer2 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer4 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer5 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer6 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer9 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer10 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer21 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer22 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer23 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer24 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer25 value = 0.5 }
            #multiply_key = { lhs = TN_SectorStockpileOffer41 value = 0.5 }

            
            # Edit for new produce
            set_key = { lhs = TN_SectorStockpileBid1 which = TN_SectorStockpileSize1 }
            set_key = { lhs = TN_SectorStockpileBid2 which = TN_SectorStockpileSize2 }
            set_key = { lhs = TN_SectorStockpileBid4 which = TN_SectorStockpileSize4 }
            set_key = { lhs = TN_SectorStockpileBid5 which = TN_SectorStockpileSize5 }
            set_key = { lhs = TN_SectorStockpileBid6 which = TN_SectorStockpileSize6 }
            set_key = { lhs = TN_SectorStockpileBid9 which = TN_SectorStockpileSize9 }
            set_key = { lhs = TN_SectorStockpileBid10 which = TN_SectorStockpileSize10 }
            set_key = { lhs = TN_SectorStockpileBid21 which = TN_SectorStockpileSize21 }
            set_key = { lhs = TN_SectorStockpileBid22 which = TN_SectorStockpileSize22 }
            set_key = { lhs = TN_SectorStockpileBid23 which = TN_SectorStockpileSize23 }
            set_key = { lhs = TN_SectorStockpileBid24 which = TN_SectorStockpileSize24 }
            set_key = { lhs = TN_SectorStockpileBid25 which = TN_SectorStockpileSize25 }
            set_key = { lhs = TN_SectorStockpileBid41 which = TN_SectorStockpileSize41 }
            
            # Edit for new produce
            subtract_key = { lhs = TN_SectorStockpileBid1 which = TN_SectorStockpile1 }
            subtract_key = { lhs = TN_SectorStockpileBid2 which = TN_SectorStockpile2 }
            subtract_key = { lhs = TN_SectorStockpileBid4 which = TN_SectorStockpile4 }
            subtract_key = { lhs = TN_SectorStockpileBid5 which = TN_SectorStockpile5 }
            subtract_key = { lhs = TN_SectorStockpileBid6 which = TN_SectorStockpile6 }
            subtract_key = { lhs = TN_SectorStockpileBid9 which = TN_SectorStockpile9 }
            subtract_key = { lhs = TN_SectorStockpileBid10 which = TN_SectorStockpile10 }
            subtract_key = { lhs = TN_SectorStockpileBid21 which = TN_SectorStockpile21 }
            subtract_key = { lhs = TN_SectorStockpileBid22 which = TN_SectorStockpile22 }
            subtract_key = { lhs = TN_SectorStockpileBid23 which = TN_SectorStockpile23 }
            subtract_key = { lhs = TN_SectorStockpileBid24 which = TN_SectorStockpile24 }
            subtract_key = { lhs = TN_SectorStockpileBid25 which = TN_SectorStockpile25 }
            subtract_key = { lhs = TN_SectorStockpileBid41 which = TN_SectorStockpile41 }
            
            # Edit for new produce
            if = {
                limit = {
                    has_global_flag = POP_Sim
                }
                set_key = { lhs = Tmp_8 value = 0.75 }
            }
            else = {
                owner = { set_key = { lhs = Tmp_8 which = Commerce_Risk_Factor } } # Comes from Compute_Commercial_Risk
                set_key = { lhs = Tmp_8 which = owner }
            }
            
            Set_Offer_And_Bid = { prod = 1 }
            Set_Offer_And_Bid = { prod = 2 }
            Set_Offer_And_Bid = { prod = 4 }
            Set_Offer_And_Bid = { prod = 5 }
            Set_Offer_And_Bid = { prod = 6 }
            Set_Offer_And_Bid = { prod = 9 }
            Set_Offer_And_Bid = { prod = 10 }
            Set_Offer_And_Bid = { prod = 21 }
            Set_Offer_And_Bid = { prod = 22 }
            Set_Offer_And_Bid = { prod = 23 }
            Set_Offer_And_Bid = { prod = 24 }
            Set_Offer_And_Bid = { prod = 25 }
            Set_Offer_And_Bid = { prod = 41 }
            
            
            # Merchant bids/offers are first matched with the bids/offers of the sector they're located in
            # Edit for new produce
            
            TN_DoTradeHelper1 = { prod = 1 } # Bought food from sectors gets immediately added to stockpile.
            TN_DoTradeHelper1 = { prod = 2 }
            TN_DoTradeHelper1 = { prod = 4 }
            TN_DoTradeHelper1 = { prod = 5 }
            TN_DoTradeHelper1 = { prod = 6 }
            TN_DoTradeHelper1 = { prod = 9 }
            TN_DoTradeHelper1 = { prod = 10 }
            TN_DoTradeHelper1 = { prod = 21 }
            TN_DoTradeHelper1 = { prod = 22 }
            TN_DoTradeHelper1 = { prod = 23 }
            TN_DoTradeHelper1 = { prod = 24 }
            TN_DoTradeHelper1 = { prod = 25 }
            TN_DoTradeHelper1 = { prod = 41 }
            
            
            if = {
                limit = {
                    owner = {
                        ai = no                        
                    }
                }
                Nat_Stockpile_Take = { prod = 1 }
                Nat_Stockpile_Take = { prod = 2 }
                Nat_Stockpile_Take = { prod = 5 }
                Nat_Stockpile_Take = { prod = 21 }
                Nat_Stockpile_Take = { prod = 22 }
                Nat_Stockpile_Take = { prod = 24 }
                Nat_Stockpile_Take = { prod = 41 }
            }
            
            # If local demand of food wasn't met or demand is higher than surplus don't sell abroad, stockpile it.
            # Also only if stockpile is at least 3 time the demand allow to sell.
            set_key = { lhs = Tmp_0 which = TN_SectorStockpile1 }
            divide_key = { lhs = Tmp_0 which = TN_SectorDmnd1 }
            if = {
                limit = {
                    NOT = { check_key = { lhs = Tmp_0 value = 3 } }
                    OR = {
                        check_key = { lhs = TN_SectorBid1 value = 0.1 }
                        check_key = { lhs = TN_SectorDmnd1 which = TN_SectorSply1 }
                    }
                }
                set_key = { lhs = TN_SectorStockpileOffer1 value = 0 }
            }
        }
    }
        
        # Begin the main loop
        # Loop ends when there's no country left with score higher than or equal to 1
    set_global_flag = TN_Loop1
        
        # Grabs best sector of each node
    tradenode_centers = {
        save_event_target_as = Prov

        if = {
            limit = {
                NOT = {
                    has_province_flag = TN_SectorCent
                }
            }
            set_key = { lhs = TN_SectorScore value = 0 }
        }

        every_trade_node_member_province = {
            if = {
                limit = {
                    has_province_flag = TN_SectorCent
                    check_key = { lhs = TN_SectorScore which = event_target:Prov }
                }
                save_event_target_as = Prov
            }
        }
        # Flags the best sector of each node
        event_target:Prov = {
            set_province_flag = TN_SectorCentNodeBest
        }
    }
    AAA = { set_key = { lhs = Sector_ScoreDisp value = 0 } }
    while = {
        limit = {
            has_global_flag = TN_Loop1
        }
        save_event_target_as = Prov
        # Playoffs competition between all the bests sectors of each node
        
        every_province = {
            limit = {
                isValidProv = yes
                has_province_flag = TN_SectorCentNodeBest
                check_key = { lhs = TN_SectorScore which = event_target:Prov }
            }
            save_event_target_as = Prov # This is the winner, highest sector score of the world
        }


        event_target:Prov = {
            if = {
                limit = {
                    is_key_equal = { lhs = TN_SectorScore value = 0 }
                }
                clr_global_flag = TN_Loop1
            }
            else = {
                AAA = { 
                    change_key = { lhs = Sector_ScoreDisp value = 1 }
                    PREV = { set_key = { lhs = Sector_ScoreDisp which = PREV } }                
                }
                if = { limit = { has_province_modifier = TN_Dominant } set_global_flag = Is_TN_Dominant } 
                else_if = { limit = {  has_province_modifier = TN_Major } set_global_flag = Is_TN_Major }
                else_if = { limit = {  has_province_modifier = TN_Important } set_global_flag = Is_TN_Important }
                if = {
                    limit = {                        
                        owner = {
                            capital_scope = {
                                same_trade_node_as = event_target:Prov                              
                            }
                        }
                    }
                    set_global_flag = IsCapitalTN
                }
                # Set which sectors are within reach and how far they are
                
                TN_SetReach = yes
                
				owner = {
					save_event_target_as = ProvOwner
                }                    
				
                # Flag all tradenodes that contain at least one sector that is within Prov's reach
                tradenode_centers = {
                    limit = {
                        any_trade_node_member_province = {
                            has_province_flag = TN_SectorCentReachWithin
                        }
                    }
                    set_province_flag = TN_SectorCentReachContain
					  
					every_trade_node_member_province = {
						if = {
							limit = {
								has_province_flag = TN_SectorCentReachWithin
								NOT = {
									province_id = event_target:Prov
								}
                                NOT = {
                                    owned_by = event_target:ProvOwner
                                }
							}
							set_key = { lhs = Public_Tmp8 which = Modi_TradeScoreExternal }
                            if = {
                                limit = {
                                    NOT = { has_global_flag = POP_Sim }
                                }
                                owner = {
                                    sectorTradeScoreCalcHelper = { return = Public_Tmp8 } # modify external sector trade score based on opinion and other inter country relationships
                                }                                
                            }
						}
						set_key = { lhs = Public_Tmp9 value = 0 }
					}
                }
                    
                # Resolve bids and offers with sectors that are within reach
                # Edit for new produce
                # If you want any good to exit through ChangeAmountsImport or ChangeAmountsExport you need to add the parameter ChangeAmounts = yes 
                # Example:  TN_DoTradeHelper2 = { type = Import prod = 22 mil = yes ChangeAmounts = yes }
                TN_DoTradeHelper2 = { type = Import prod = 1 food = yes }
                TN_DoTradeHelper2 = { type = Import prod = 2 }
                TN_DoTradeHelper2 = { type = Import prod = 4 }
                TN_DoTradeHelper2 = { type = Import prod = 5 }
                TN_DoTradeHelper2 = { type = Import prod = 6 }
                TN_DoTradeHelper2 = { type = Import prod = 9 }
                TN_DoTradeHelper2 = { type = Import prod = 10 }
                TN_DoTradeHelper2 = { type = Import prod = 21 }
                TN_DoTradeHelper2 = { type = Import prod = 22 mil = yes }
                TN_DoTradeHelper2 = { type = Import prod = 23 }
                TN_DoTradeHelper2 = { type = Import prod = 24 }
                TN_DoTradeHelper2 = { type = Import prod = 25 }
                TN_DoTradeHelper2 = { type = Import prod = 41 }
				
				TN_DoTradeHelper2 = { type = Export prod = 1 food = yes }
                TN_DoTradeHelper2 = { type = Export prod = 2 }
                TN_DoTradeHelper2 = { type = Export prod = 4 }
                TN_DoTradeHelper2 = { type = Export prod = 5 }
                TN_DoTradeHelper2 = { type = Export prod = 6 }
                TN_DoTradeHelper2 = { type = Export prod = 9 }
                TN_DoTradeHelper2 = { type = Export prod = 10 }
                TN_DoTradeHelper2 = { type = Export prod = 21 }
                TN_DoTradeHelper2 = { type = Export prod = 22 mil = yes }
                TN_DoTradeHelper2 = { type = Export prod = 23 }
                TN_DoTradeHelper2 = { type = Export prod = 24 }
                TN_DoTradeHelper2 = { type = Export prod = 25 }
                TN_DoTradeHelper2 = { type = Export prod = 41 }
				
				# Long distance trade 
				if = { 
					limit = {
						check_key = { lhs = Public_Tmp9 value = 0.001 }
					}	
					
					# Jumpers and Conductees long distance trade distribution
					
						# Loop through conductees 
					tradenode_centers = {
						limit = {
							has_province_flag = TN_SectorCentReachContain
							NOT = { same_trade_node_as = event_target:Prov }
						}
						
						every_trade_node_member_province = { 
							if = {
								limit = {
									has_province_flag = conductee_target
									check_key = { lhs = Public_Tmp9 value = 0.001 }
								}
								set_key = { lhs = Tmp_0 which = Public_Tmp9 }
								save_event_target_as = ProvNew # save current Conductee
									
									# Loop and find all 'jumpers' for this Conductee
								tradenode_centers = {
									limit = {
										has_province_flag = TN_SectorCentReachContain
									}
									every_trade_node_member_province = {
										if = {
											limit = {
												has_province_flag = jumped_success # must be a jumper 
												
												NOT = { check_key = { lhs = Public_Tmp3 which = event_target:ProvNew } } # distance of conductor->jumper has to be smaller than conductor->conductee
												NOT = { province_id = event_target:ProvNew } # not the conductee											
											}
											
											set_key = { lhs = Tmp_0 which = event_target:ProvNew } # Trade money to be distributed from the Conductee
											
											change_key = { lhs = TN_SectorTrade which = Tmp_0 }
											change_key = { lhs = Intermediary_Income which = Tmp_0 }
										
											if = {
												limit = {
													check_key = { lhs = Tmp_0 value = 1 }
												}
                                                multiply_key = { lhs = Tmp_0 value = 0.02 } #divide_key = { lhs = Tmp_0 value = 50 }												
												change_key = { lhs = TN_SectorTV which = Tmp_0 }
											}
											else = {
												change_key = { lhs = TN_SectorTV value = 0.01 }
											}			
										}
									}
								}								
                                multiply_key = { lhs = Public_Tmp9 value = 0.5 } #divide_key = { lhs = Public_Tmp9 value = 2 }
								change_key = { lhs = TN_SectorTrade which = Public_Tmp9 }																
								if = {
									limit = {
										check_key = { lhs = Public_Tmp9 value = 1 }
									}
									multiply_key = { lhs = Public_Tmp9 value = 0.02 } #divide_key = { lhs = Public_Tmp9 value = 50 }
									change_key = { lhs = TN_SectorTV which = Public_Tmp9 }
								}
								else = {
									change_key = { lhs = TN_SectorTV value = 0.01 }
								}
							}
						}
					}
					event_target:Prov = {
                        multiply_key = { lhs = Public_Tmp9 value = 0.5 } #divide_key = { lhs = Public_Tmp9 value = 2 }						
						change_key = { lhs = TN_SectorTrade which = Public_Tmp9 }			
			
						if = {
							limit = {
								check_key = { lhs = Public_Tmp9 value = 0.5 }
							}
                            multiply_key = { lhs = Public_Tmp9 value = 0.02 } #divide_key = { lhs = Public_Tmp9 value = 50 }							
							change_key = { lhs = TN_SectorTV which = Public_Tmp9 }
						}
						else = {
							change_key = { lhs = TN_SectorTV value = 0.01 }
						}
					}
				}
				
				
				# OLD DEPRECATED SYSTEM 
				#tradenode_centers = {
                #    limit = {
                #        has_province_flag = TN_SectorCentReachContain
                #    }
                #    every_trade_node_member_province = {
                #        if = {
                #            limit = {
                #                has_province_flag = TN_SectorCentReachWithin
                #                 
				#				check_key = { lhs = Public_Tmp9 value = 0.001 } # This checks if at the end of 1 trade iteration there exists a Sector that was Jumped. Inverse djikistra so to speak
                #            }
				#			set_key = { lhs = Public_Tmp0 which = Public_Tmp9 }
				#			
                #            
				#			save_event_target_as = ProvNew
				#
				#			while = { # Distribute money on sectors where trade passed through
				#				limit = {
				#					event_target:ProvNew = {
				#						NOT = {
				#							province_id = event_target:Prov
				#						}
				#					}
				#				}
				#				event_target:ProvNew = { #
				#					change_key = { lhs = TN_SectorTrade which = Public_Tmp0 }
                #                    change_key = { lhs = Intermediary_Income which = Public_Tmp0 }
				#
				#					POP_GetProv = { var = Public_Tmp2 return = ProvNew }
				#
				#					event_target:ProvNew = {
				#						set_key = { lhs = Public_Tmp0 which = PREV }
				#					}
				#
				#					if = {
				#						limit = {
				#							check_key = { lhs = Public_Tmp0 value = 1 }
				#						}
				#						divide_key = { lhs = Public_Tmp0 value = 100 }
				#						change_key = { lhs = TN_SectorTV which = Public_Tmp0 }
				#					}
				#					else = {
				#						change_key = { lhs = TN_SectorTV value = 0.01 }
				#					}
				#				}
				#			}
				#
				#			event_target:Prov = {
				#				change_key = { lhs = TN_SectorTrade which = Public_Tmp0 }
				#
				#				if = {
				#					limit = {
				#						check_key = { lhs = Public_Tmp0 value = 0.5 }
				#					}
				#					divide_key = { lhs = Public_Tmp0 value = 50 }
				#					change_key = { lhs = TN_SectorTV which = Public_Tmp0 }
				#				}
				#				else = {
				#					change_key = { lhs = TN_SectorTV value = 0.01 }
				#				}
				#			}
				#			
				#			change_key = { lhs = TN_SectorTV which = Public_Tmp0 }
                #        }
                #    }
                #}
				
				                    
                # Clean
                tradenode_centers = {
                    limit = {
                        has_province_flag = TN_SectorCentReachContain
                    }
                    clr_province_flag = TN_SectorCentReachContain
                      
                    every_trade_node_member_province = {
                        clr_province_flag = TN_SectorCentReachWithin
						clr_province_flag = jumper_cand
						clr_province_flag = jumped_success
						clr_province_flag = conductee_target
                    }
                }

                # Find the next high-scored sector inside that winner.
                clr_province_flag = TN_SectorCentNodeBest
                
                set_key = { lhs = TN_SectorScore value = -100 }
                
                save_event_target_as = Prov
                
                every_trade_node_member_province = {
                    if = {
                        limit = {
                            has_province_flag = TN_SectorCent
                            
                            check_key = { lhs = TN_SectorScore which = event_target:Prov }
                        }
                        save_event_target_as = Prov
                    }
                }
                # This is to compare it to the previous winners in the loop -> it goes on top to be matched against the previous winners again.
                event_target:Prov = {
                    set_province_flag = TN_SectorCentNodeBest
                }
            }
        }
    }   

    # Clean
    regiongroup = {
        region = {
            limit = {
                isValidProv = yes
            }
            set_key = { lhs = Tmp_0 value = 0 }
            set_key = { lhs = Tmp_1 value = 0 }
            set_key = { lhs = Tmp_2 value = 0 }
    
            set_key = { lhs = Public_Tmp1 value = 0 }
            set_key = { lhs = Public_Tmp2 value = 0 }
            set_key = { lhs = Public_Tmp3 value = 0 }
            set_key = { lhs = Public_Tmp4 value = 0 }
            set_key = { lhs = Public_Tmp5 value = 0 }
            set_key = { lhs = Public_Tmp6 value = 0 }
            set_key = { lhs = Public_Tmp7 value = 0 }
            set_key = { lhs = Public_Tmp8 value = 0 }
            set_key = { lhs = Public_Tmp9 value = 0 }    
            clr_province_flag = TN_SectorCentNodeBest
			clr_province_flag = TN_SectorCentNoTC
			
        }
    }
}

# Set which sectors are within reach and how far they are
TN_SetReach = {
	# Itself is always within reach
    set_province_flag = TN_SectorCentReachWithin
    #set_province_flag = TN_SectorCentReachSpread
	
	# Later used in TN_effect11 triggers
	owner = {
		save_event_target_as = ProvNew
	}
	
	# Node distance in origin
    set_key = { lhs = Public_Tmp1 value = 1 }

    # Each sectors with TN_SectorCentReachSpread flag will spread its reach to other connected sectors   

    TN_effect11 = yes # Everyone can trade with everything in same sector
    if = {
        limit = { # Only Important or higher can trade with neighboring sectors
            OR = {
                has_global_flag = Is_TN_Dominant
                has_global_flag = Is_TN_Major
                has_global_flag = Is_TN_Important                
            }
        }
        TN_effect = { 
            effect = TN_effect20
        }

        if = {
            limit = { # Only Major or higher than jump/spread
                OR = {
                    has_province_flag = HasSeaAccess
                    has_province_flag = HasRiverSeaAccess
                    has_province_flag = HasRiverSeaBAccess
                    has_province_flag = HasSilkAccess
                }
                OR = {
                    has_global_flag = Is_TN_Dominant
                    has_global_flag = Is_TN_Major                    
                }
            }
            set_global_flag = 1_jump
            every_province = {
                limit = {
                    isValidProv = yes
                    has_province_flag = TN_SectorCentReachSpread
                    OR = {
                        owned_by = event_target:ProvNew
                        AND = {
                            owner = {
                                is_colonial_nation_of = event_target:ProvNew
                            }
                        }
                    }
                }
                clr_province_flag = TN_SectorCentReachSpread
                TN_effect11 = yes
                TN_effect = {
                    effect = TN_effect24
                }
            }
            clr_global_flag = 1_jump
            
            if = {
                limit = { # Only dominants can spread twice
                    has_global_flag = Is_TN_Dominant
                    has_province_flag = HasSeaAccess
                }
                set_global_flag = 2_jump
                every_province = {
                    limit = {
                        isValidProv = yes
                        has_province_flag = TN_SectorCentReachSpread2
                        OR = {
                            owned_by = event_target:ProvNew
                            AND = {
                                owner = {
                                    is_colonial_nation_of = event_target:ProvNew
                                }
                            }
                        }
                    }
                    clr_province_flag = TN_SectorCentReachSpread2
                    TN_effect11 = yes
                    TN_effect = { 
                        effect = TN_effect22
                    }
                }
                clr_global_flag = 2_jump
            }
        }
    }

    # Capitals that are dominants or major can connect to every province in the world
    if = {
        limit = {
            has_global_flag = IsCapitalTN
            has_province_flag = HasSeaAccess
            OR = {
                
                OR = {
                    has_global_flag = Is_TN_Dominant
                    has_global_flag = Is_TN_Major
                }                

                AND = {
                    has_global_flag = Is_TN_Important
                    owner = {
                        any_owned_province = {
                            OR = {
                                has_province_modifier = TN_Major
                                has_province_modifier = TN_Dominant
                            }
                            is_key_equal = { lhs = ID_SR which = event_target:Prov }
                        }
                    }
                }
            }
        }
        owner = {
            every_owned_province = {
                limit = {
                    has_province_flag = TN_SectorCent
                    NOT = { has_province_flag = TN_SectorCentReachWithin }
                    has_province_flag = HasSeaAccess
                }
                TN_effect = { 
                    effect = TN_effect21 # Connect every owned place in the world
                }                       
            }
        }
    }

    if = { # Connect to all trade posts
        limit = {
            has_global_flag = HasTradePost
        }
        clr_global_flag = HasTradePost
        regiongroup = {
            region = {
                limit = {
                    has_province_flag = TradePost@event_target:ProvNew
                    has_province_flag = TN_SectorCentReachWithin
                }
                TN_effect = { 
                    effect = TN_effect23
                }
            }
        }
    }

    clr_global_flag = Is_TN_Dominant
    clr_global_flag = Is_TN_Major
    clr_global_flag = Is_TN_Important
    clr_global_flag = IsCapitalTN
	
	# Set distance value. Trade passing through each sectors will drop 10% of its value as commerce industry income
    regiongroup = {
        region = {
            limit = {
                has_province_flag = TN_SectorCentReachWithin
            }
            set_key = { lhs = Public_Tmp3 value = 2 }
            multiply_key = { lhs = Public_Tmp3 which = Public_Tmp1 }
            multiply_key = { lhs = Public_Tmp3 value = 0.01 } 
            change_key = { lhs = Public_Tmp3 value = 1 } 
            # Uncomment below to find connections. Can only do it once since the variables aren't refreshed. Let a year pass.
            #set_province_flag = traded_with_@event_target:Prov 
        }
    }
}

Compute_Commercial_Risk = {
    owner = {        
        # Scale war exhaustion from 0.1 to 1.2
        export_to_key = { lhs = Commerce_Risk_Factor value = war_exhaustion }
        multiply_key = { lhs = Commerce_Risk_Factor value = -0.033 }
        change_key = { lhs = Commerce_Risk_Factor value = 1.45 } 
        if = {
            limit = {
                NOT = { stability = 1 }
            }
            multiply_key = { lhs = Commerce_Risk_Factor value = 0.90 }
            if = {
                limit = {
                    NOT = { stability = 0 }
                }
                multiply_key = { lhs = Commerce_Risk_Factor value = 0.85 }
                if = {
                    limit = {
                        NOT = { stability = -1 }
                    }
                    multiply_key = { lhs = Commerce_Risk_Factor value = 0.80 }
                    if = {
                        limit = {
                            NOT = { stability = -2 }
                        }
                        multiply_key = { lhs = Commerce_Risk_Factor value = 0.80 }
                    }
                }
            }
        }

        # Institution factor
        if = {
            limit = {
                NOT = {
                    has_institution = Banking
                }
            }
            multiply_key = { lhs = Commerce_Risk_Factor value = 0.85 }
        }
        if = {
            limit = {
                NOT = {
                    has_institution = Global_Trade
                }
            }
            multiply_key = { lhs = Commerce_Risk_Factor value = 0.85 }
        }
        # Tech factor. From 0.5 to 1. Tech 52 is max
        export_to_key = { lhs = Tmp_7 value = dip_tech }
        if = {
            limit = {
                check_key = { lhs = Tmp_7 value = 12 }
            }
            subtract_key = { lhs = Tmp_7 value = 12 } 
            multiply_key = { lhs = Tmp_7 value = 0.014 }
            change_key = { lhs = Tmp_7 value = 0.45 }
            multiply_key = { lhs = Commerce_Risk_Factor which = Tmp_7 }
        }
        else = {
            multiply_key = { lhs = Commerce_Risk_Factor value = 0.3 }
        }
        
        if = {
            limit = {
                check_key = { lhs = Commerce_Risk_Factor value = 1 }
            }
            set_key = { lhs = Commerce_Risk_Factor value = 1 }
        }
    }
}

Set_Offer_And_Bid = {
    set_key = { lhs = Tmp_1 which = TN_SectorStockpile$prod$ }
    divide_key = { lhs = Tmp_1 which = TN_SectorDmnd$prod$ }  # divide by 0.001 is totally fine    
    if = {
        limit = { 
            OR = {
                check_key = { lhs = Tmp_1 value = 3 }

                AND = {
                    check_key = { lhs = TN_SectorSply$prod$ which = TN_SectorDmnd$prod$ }
                    check_key = { lhs = Tmp_1 value = 2 }
                }
            }
        }
        random_list = {
            1 = {
                if = {
                    limit = {
                        check_key = { lhs = Tmp_1 value = 10 }
                    }
                    set_key = { lhs = Tmp_1 value = 10 }
                }
                
                # Normalizes Tmp_1 between 0.5 and 0.9. 
                # Tmp_1 = Ratio (Stockpile/Demand) capped at 10
                change_key = { lhs = Tmp_1 value = -2 }
                multiply_key = { lhs = Tmp_1 value = 0.05 }
                change_key = { lhs = Tmp_1 value = 0.5 }
        
                multiply_key = { lhs = Tmp_1 which = Tmp_8 } # risk factor
                if = {
                    limit = {
                        check_key = { lhs = TN_SectorSply$prod$ which = TN_SectorDmnd$prod$ }
                    }
                    multiply_key = { lhs = Tmp_1 value = 1.1 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Tmp_1 value = 0.9 }
                    }
                    set_key = { lhs = Tmp_1 value = 0.9 }
                }
                else_if = {
                    limit = {
                        NOT = { check_key = { lhs = Tmp_1 value = 0.5 } }
                    }
                    set_key = { lhs = Tmp_1 value = 0.5 }
                }
                
                multiply_key = { lhs = TN_SectorStockpileOffer$prod$ which = Tmp_1 }
                multiply_key = { lhs = TN_SectorStockpileBid$prod$ which = Tmp_1 }              
            }
            1 = {
                multiply_key = { lhs = TN_SectorStockpileOffer$prod$ value = 0.5 }
                multiply_key = { lhs = TN_SectorStockpileBid$prod$ value = 0.45 }
            }
        }
    }
    else = {
        multiply_key = { lhs = TN_SectorStockpileOffer$prod$ value = 0.5 }
        multiply_key = { lhs = TN_SectorStockpileBid$prod$ value = 0.43 }
    }
}


# Set how much of sector's supply and demand were satisfied
# Also update sector price
TN_SetPrcFill = {
	# Set fulfillment
    if = {
        limit = {
            check_key = { lhs = TN_SectorDmnd$prod$ value = 0.001 }
        }
        set_key = { lhs = TN_ProvFill$prod$ which = TN_SectorDmnd$prod$ } 
        subtract_key = { lhs = TN_ProvFill$prod$ which = TN_SectorBid$prod$ } 
        divide_key = { lhs = TN_ProvFill$prod$ which = TN_SectorDmnd$prod$ }
        multiply_key = { lhs = TN_ProvFill$prod$ value = 100 }
    }
    else = {
        set_key = { lhs = TN_ProvFill$prod$ value = 100 }
    }
    # Record previous price
    set_key = { lhs = TN_ProvPrcRec$prod$ which = TN_ProvPrc$prod$ }    
	
	# Update price
    if = {
        limit = {
            check_key = { lhs = TN_SectorStockpileSize$prod$ value = 0.001 }
        }
        set_key = { lhs = Public_Tmp1 which = TN_SectorStockpileBid$prod$ }  #unresolved bids ->how much of what it wanted to buy remained unbought
        change_key = { lhs = Public_Tmp1 which = TN_SectorBid$prod$ } #Unmet demand
        change_key = { lhs = Public_Tmp1 which = TN_SectorStockpileOut$prod$ } # how much it sold
        subtract_key = { lhs = Public_Tmp1 which = TN_SectorStockpileOffer$prod$ } # how much it remained to sell
        subtract_key = { lhs = Public_Tmp1 which = TN_SectorStockpileIn$prod$ } # how much it bought
        divide_key = { lhs = Public_Tmp1 which = TN_SectorStockpileSize$prod$ } # how much it wants to buy        
        
		# If positive, 1 + that becomes the multiplier
		# If negative, 1 - that becomes the divisor
        if = {
            limit = {
                check_key = { lhs = Public_Tmp1 value = 0 }
            }
            set_key = { lhs = Public_Tmp0 which = TN_ProvPrc$prod$ }
            multiply_key = { lhs = Public_Tmp0 value = 0.02 }
            change_key = { lhs = Public_Tmp0 value = 1 }
            divide_key = { lhs = Public_Tmp1 which = Public_Tmp0 }

            multiply_key = { lhs = Public_Tmp1 value = 11 } # Fluctuation factor
            [[fluctuationFactor] multiply_key = { lhs = Public_Tmp1 value = $fluctuationFactor$ } ]

            change_key = { lhs = Public_Tmp1 value = 100 }            
            multiply_key = { lhs = TN_ProvPrc$prod$ which = Public_Tmp1 }
			multiply_key = { lhs = TN_ProvPrc$prod$ value = 0.01 }
        }
        else = {
            set_key = { lhs = Public_Tmp0 which = TN_ProvPrc$prod$ }
            multiply_key = { lhs = Public_Tmp0 value = -0.02 }
            change_key = { lhs = Public_Tmp0 value = 3 }
            divide_key = { lhs = Public_Tmp1 which = Public_Tmp0 }

            multiply_key = { lhs = Public_Tmp1 value = 11 } # Fluctuation factor
            [[fluctuationFactor] multiply_key = { lhs = Public_Tmp1 value = $fluctuationFactor$ } ]

            multiply_key = { lhs = Public_Tmp1 value = -1 }
            change_key = { lhs = Public_Tmp1 value = 100 }
			multiply_key = { lhs = TN_ProvPrc$prod$ value = 100 }
            divide_key = { lhs = TN_ProvPrc$prod$ which = Public_Tmp1 }
        }     

        # Cap price belief
        if = {
            limit = {
                check_key = { lhs = TN_ProvPrc$prod$ value = 80 }
            }
            set_key = { lhs = TN_ProvPrc$prod$ value = 80 }
        }
        else_if = {
            limit = {
                NOT = {
                    check_key = { lhs = TN_ProvPrc$prod$ value = 1 }
                }
            }
            set_key = { lhs = TN_ProvPrc$prod$ value = 1 }
        }

        set_key = { lhs = Public_Tmp1 value = 0 }
    }

	multiply_key = { lhs = TN_ProvPrcRec$prod$ value = -1 }
    change_key = { lhs = TN_ProvPrcRec$prod$ which = TN_ProvPrc$prod$ }
}

#State supplies armies from it's stockpile
TN_SetMilFills = {
    set_key = { lhs = Mil_$prod$ which = $var$ }    
    multiply_key = { lhs = Mil_$prod$ which = TN_ProvFill$prod$ }
    multiply_key = { lhs = Mil_$prod$ value = 0.01 }
    owner = {
        change_key = { lhs = Mil_$prod$ which = PREV }
    }

    if = {
        limit = {
            owner = {
                ai = no
                #is_at_war = yes
            }
            NOT = { check_key = { lhs = TN_ProvFill$prod$ value = 99.999 } }
            owner = { check_key = { lhs = Nat_Stockpile$prod$ value = 0.001 } }
        }
        set_key = { lhs = Nat_Stockpile$prod$ which = owner }
        set_key = { lhs = Tmp_1 which = $var$ } #  $var$ = Total amount of needed military goods. 
        set_key = { lhs = Mil_Fill$prod$ value = 100 }
        subtract_key = { lhs = Mil_Fill$prod$ which = TN_ProvFill$prod$ } # How much remaining Fill is needed        
        
        set_key = { lhs = PublicHelper_Tmp9 which = Mil_Fill$prod$ }
        multiply_key = { lhs = PublicHelper_Tmp9 value = 0.01 }
        multiply_key = { lhs = $var$ which = PublicHelper_Tmp9 } # How much net amount of goods remained unfullfilled for the armies need

        if = {
            limit = {
                check_key = { lhs = Nat_Stockpile$prod$ which = $var$ } # If it can supply everything, easy.
            }
            subtract_key = { lhs = Nat_Stockpile$prod$ which = $var$ } # Remove from stockpile 
            #log = "testingg"
            owner = {
                set_key = { lhs = $var$ which = PREV }
                subtract_key = { lhs = Nat_Stockpile$prod$ which = $var$ }
                change_key = { lhs = TN_SectorExported$prod$ which = $var$ } # How much Country gave. Display purpose
            }
            set_key = { lhs = $var$ value = 0 } 
        }
        else = {
            subtract_key = { lhs = $var$ which = Nat_Stockpile$prod$ } # Give them everything we have
            # Calculate how much it was fullfiled.
            divide_key = { lhs = $var$ which = Tmp_1 } 
            set_key = { lhs = Tmp_0 value = 1 }
            subtract_key = { lhs = Tmp_0 which = Tmp_1 } # How much it was filled
            multiply_key = { lhs = Mil_Fill$prod$ which = Tmp_0 }  # How much it filled of what remained to be filled
            owner = {
                change_key = { lhs = TN_SectorExported$prod$ which = Nat_Stockpile$prod$ }
                set_key = { lhs = Nat_Stockpile$prod$ value = 0 }
            }            
        }
    }    
}

# Assign income and spending after bids/offers are resolved
TN_DoTradeAfter = {
    set_key = { lhs = TN_ProvFill$prod$ which = PREV }
    set_key = { lhs = TN_ProvPrc$prod$ which = PREV }
    set_key = { lhs = TN_ProvPrcRec$prod$ which = PREV }
	
	# Industry spending
    TN_DoTradeAfterHelper1 = { slot = 0 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 1 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 2 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 3 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 4 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 5 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 6 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 7 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 8 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 9 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 10 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 11 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 12 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 13 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 14 prod = $prod$ }
    TN_DoTradeAfterHelper1 = { slot = 15 prod = $prod$ }
	
	# Class spending
    [[type]
        TN_DoTradeAfterHelper2 = { class = SF prod = $prod$ type = $type$ }
        TN_DoTradeAfterHelper2 = { class = NM prod = $prod$ type = $type$ }
        TN_DoTradeAfterHelper2 = { class = RE prod = $prod$ type = $type$ }
        TN_DoTradeAfterHelper2 = { class = NO prod = $prod$ type = $type$ }
        TN_DoTradeAfterHelper2 = { class = BG prod = $prod$ type = $type$ }
        TN_DoTradeAfterHelper2 = { class = CL prod = $prod$ type = $type$ }
    ]
	
	# Industry income
    TN_DoTradeAfterHelper3 = { slot = 0 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 1 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 2 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 3 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 4 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 5 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 6 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 7 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 8 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 9 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 10 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 11 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 12 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 13 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 14 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
    TN_DoTradeAfterHelper3 = { slot = 15 prod = $prod$ [[DirectBuy] DirectBuy=yes ] }
	
	# Class spending
    [[DirectBuy]
    if = {
        limit = {
           always = $DirectBuy$
        }
        TN_DoTradeAfterHelper5 = { class = SF prod = $prod$ }
        TN_DoTradeAfterHelper5 = { class = NM prod = $prod$ }
        TN_DoTradeAfterHelper5 = { class = NO prod = $prod$ }
        TN_DoTradeAfterHelper5 = { class = CL prod = $prod$ }
        TN_DoTradeAfterHelper5 = { class = RE prod = $prod$ }
        TN_DoTradeAfterHelper5 = { class = BG prod = $prod$ }
    }
    ]
}

# Helper for resolving sector bids/offers with those of their merchant
TN_DoTradeHelper1 = {
	# Resolve merchant bid
    # The sector sells it's produced goods to the merchants
    # Whatever they can't sell just gets wasted
    if = {
        limit = {
            check_key = { lhs = TN_SectorStockpileBid$prod$ value = 0.001 } # Merchant bid
        }
		# Sector offer
        if = {
            limit = {
                check_key = { lhs = TN_SectorOffer$prod$ value = 0.001 } # TN_SectorOffer$prod$ = Total amount of supplied goods industries that year
            }
            set_key = { lhs = Public_Tmp4 which = TN_SectorStockpileBid$prod$ } # how much merchants want to buy

            if = {
                limit = {
                    check_key = { lhs = Public_Tmp4 which = TN_SectorOffer$prod$ }
                }
                set_key = { lhs = Public_Tmp4 which = TN_SectorOffer$prod$ }
            }

            change_key = { lhs = TN_SectorStockpile$prod$ which = Public_Tmp4 }
            change_key = { lhs = TN_SectorStockpileIn$prod$ which = Public_Tmp4 }
            subtract_key = { lhs = TN_SectorStockpileBid$prod$ which = Public_Tmp4 }
            subtract_key = { lhs = TN_SectorOffer$prod$ which = Public_Tmp4 }
            set_key = { lhs = TN_SectorTraffic$prod$ which = Public_Tmp4 }
            change_key = { lhs = TN_SectorStockpileOffer$prod$ which = Public_Tmp4 }

            multiply_key = { lhs = Public_Tmp4 which = TN_ProvPrc$prod$ } # total value of goods: price*amount
            change_key = { lhs = TN_SectorTrade which = Public_Tmp4 } # merchant asset gain due to goods value
            multiply_key = { lhs = Public_Tmp4 value = 0.99 } # merchants buy locally for 99% of sector price
            subtract_key = { lhs = TN_SectorTrade which = Public_Tmp4 } # merchants cash loss from purchase
			
            change_key = { lhs = TN_SectorEarn$prod$ which = Public_Tmp4 } # sector cash gain from sale, distributed on provinces per output
			
			set_key = { lhs = TradeDisplay_SectorEarn$prod$ which = Public_Tmp4 }
			
			if = {
				limit = {
					check_key = { lhs = Public_Tmp4 value = 0.99 }
				}
				divide_key = { lhs = Public_Tmp4 value = 195 }
				change_key = { lhs = TN_SectorTV which = Public_Tmp4 }
			}
			else = {
				change_key = { lhs = TN_SectorTV value = 0.01 }
			}
        }
    }
	
	# Resolve merchant offer
    # Sector buys what they need from the merchants from their stockpile.
    if = {
        limit = {
            check_key = { lhs = TN_SectorStockpileOffer$prod$ value = 0.001 }
        }
		# Sector bid
        if = {
            limit = {
                check_key = { lhs = TN_SectorBid$prod$ value = 0.001 } # Sector bid. It's basically what the sector demanded.
            }
            set_key = { lhs = Public_Tmp4 which = TN_SectorStockpileOffer$prod$ }

            if = {
                limit = {
                    check_key = { lhs = Public_Tmp4 which = TN_SectorBid$prod$ }
                }
                set_key = { lhs = Public_Tmp4 which = TN_SectorBid$prod$ }
            }
            subtract_key = { lhs = TN_SectorStockpile$prod$ which = Public_Tmp4 }
            change_key = { lhs = TN_SectorStockpileOut$prod$ which = Public_Tmp4 }
            subtract_key = { lhs = TN_SectorStockpileOffer$prod$ which = Public_Tmp4 }
            subtract_key = { lhs = TN_SectorBid$prod$ which = Public_Tmp4 }    
            
            set_key = { lhs = TN_SectorMarketPurchase$prod$ which = Public_Tmp4 }

            multiply_key = { lhs = Public_Tmp4 which = TN_ProvPrc$prod$ } # total value of goods: price * amount
            subtract_key = { lhs = TN_SectorTrade which = Public_Tmp4 } # merchant asset loss due to goods value
            multiply_key = { lhs = Public_Tmp4 value = 1.01 } # merchants sell locally for 101% of sector price
            change_key = { lhs = TN_SectorTrade which = Public_Tmp4 } # merchants cash gain from sale

            change_key = { lhs = TN_SectorSpend$prod$ which = Public_Tmp4 } # sector cash loss from purchase
			
			change_key = { lhs = TradeDisplay_SectorSpend$prod$ which = Public_Tmp4 }

			if = {
				limit = {
					check_key = { lhs = Public_Tmp4 value = 1.01 }
				}
				divide_key = { lhs = Public_Tmp4 value = 205 }
				change_key = { lhs = TN_SectorTV which = Public_Tmp4 }
			}
			else = {
				change_key = { lhs = TN_SectorTV value = 0.01 }
			}
        }
    }
}

Nat_Stockpile_Take = {
    # State buys from Merchants
    if = {
        limit = {
            check_key = { lhs = TN_SectorStockpileOffer$prod$ value = 0.001 } # Anything left to sell?
            owner = { check_key = { lhs = Nat_Capital$prod$ value = 0.001 } } # how much money the state is putting into buying goods
        }
        set_key = { lhs = Nat_Capital$prod$ which = owner }
        set_key = { lhs = Tmp_0 which = Nat_Capital$prod$ }
        set_key = { lhs = Tmp_1 which = TN_ProvPrc$prod$ }
        multiply_key = { lhs = Tmp_1 value = 1.1 } # price you pay
        divide_key = { lhs = Tmp_0 which = Tmp_1 } # How many goods it can purchase.         

        if = {
            limit = { ##FUNDS > OFFER
                check_key = { lhs = Tmp_0 which = TN_SectorStockpileOffer$prod$ }
            }
            set_key = { lhs = Tmp_0 which = TN_SectorStockpileOffer$prod$ } # This is what it can buy.
            multiply_key = { lhs = Tmp_1 which = Tmp_0 } # price * goods
            
            set_key = { lhs = Nat_Capital$prod$ which = Tmp_1 } # this is how much money was spent            
            change_key = { lhs = TN_SectorTrade which = Tmp_1 } # add income to merchants

            set_key = { lhs = Nat_Stockpile$prod$ which = Tmp_0 } # Add goods to national stockpile
            set_key = { lhs = TN_SectorStockpileOffer$prod$ value = 0 } # Nothing left to sell
            change_key = { lhs = TN_SectorStockpileOut$prod$ which = Tmp_0 }
            subtract_key = { lhs = TN_SectorStockpile$prod$ which = Tmp_0 }
            owner = {
                subtract_key = { lhs = Nat_Capital$prod$ which = PREV }
                change_key = { lhs = Nat_Stockpile$prod$ which = PREV }
            }
            set_key = { lhs = Nat_Capital$prod$ which = Tmp_0 } # display
            
        }
        else = { ##OFFER > FUNDS
            multiply_key = { lhs = Tmp_1 which = Tmp_0 } # price * goods
            change_key = { lhs = TN_SectorTrade which = Tmp_1 } # add income to merchants
            
            set_key = { lhs = Nat_Stockpile$prod$ which = Tmp_0 } # Add goods to national stockpile
            subtract_key = { lhs = TN_SectorStockpileOffer$prod$ which = Tmp_0 }
            change_key = { lhs = TN_SectorStockpileOut$prod$ which = Tmp_0 }
            subtract_key = { lhs = TN_SectorStockpile$prod$ which = Tmp_0 }
            owner = {
                set_key = { lhs = Nat_Capital$prod$ value = 0 } # No more funds left
                change_key = { lhs = Nat_Stockpile$prod$ which = PREV }
            }
            set_key = { lhs = Nat_Capital$prod$ which = Tmp_0 } # How much the State bought. Store for display purposes
        }
    }    
}

TN_DoTradeSetScoreImport = {
	#save_event_target_as = Prov
	
	set_key = { lhs = Public_Tmp0 which = $tariff$ } ## Tarrifs
	set_key = { lhs = Public_Tmp1 which = $price$ } ## Price
	
	tradenode_centers = {
		limit = {
			has_province_flag = TN_SectorCentReachContain
		}
		every_trade_node_member_province = {
			if = {
				limit = {
					has_province_flag = TN_SectorCentReachWithin
					
					NOT = {
						province_id = event_target:Prov
					}

                    check_key = { lhs = Tmp_1 value = 0.001 }
				}
				set_key = { lhs = $return$ which = Public_Tmp3 }	# Distance
				multiply_key = { lhs = $return$ which = $price$ } ## Price
				
				if = {
					limit = {
                        NOT = { owned_by = event_target:ProvOwner }
					}
					set_key = { lhs = Public_Tmp0 which = event_target:Prov } ## Tarrifs
					set_key = { lhs = Public_Tmp1 which = event_target:Prov } ## Price
					
					change_key = { lhs = Public_Tmp1 which = $price$ } ## Price
					multiply_key = { lhs = Public_Tmp1 value = 0.5 } # average
					multiply_key = { lhs = Public_Tmp1 which = Public_Tmp0 } # tarriffs
                    
					
					change_key = { lhs = $return$ which = Public_Tmp1 }
				}
				
				set_key = { lhs = Public_Tmp1 which = event_target:Prov } # Price
				subtract_key = { lhs = $return$ which = Public_Tmp1 } # Price
				multiply_key = { lhs = $return$ value = -1 } # Invert
				
				if = {
					limit = {
						NOT = {
							check_key = { lhs = $return$ value = 0.001 } # min value
						}
					}
					set_key = { lhs = $return$ value = 0 } # min value
				}
				else = {
                    
					# Exponential falloff for sector score
					# in desmos, z=5000
					#f=1-\left(\frac{z}{15000}\right)
					#x=\left(\left(f\cdot f\right)\right)\cdot z\cdot0.45
					## removed
					change_key = { lhs = $return$ value = 0.1 }
					if = {
						limit = {
							owned_by = event_target:ProvOwner
						}
                        
						multiply_key = { lhs = $return$ which = Modi_TradeScoreInternal } # API
					}
					else = {
						multiply_key = { lhs = $return$ which = Public_Tmp8 }
					}
				}
			}
            else = {
                set_key = { lhs = $return$ value = 0 }
            }
		}
	}
}
TN_DoTradeSetScoreExport = {
	#save_event_target_as = Prov
	
	set_key = { lhs = Public_Tmp0 which = $price$ }
	
	tradenode_centers = {
		limit = {
			has_province_flag = TN_SectorCentReachContain
		}
		every_trade_node_member_province = {
			if = {
				limit = {
					has_province_flag = TN_SectorCentReachWithin
					
					NOT = {
						province_id = event_target:Prov
					}

                    check_key = { lhs = Tmp_1 value = 0.001 }				
				}
				set_key = { lhs = Public_Tmp0 which = event_target:Prov }
				
				set_key = { lhs = $return$ which = Public_Tmp3 }	# Distance
				subtract_key = { lhs = $return$ value = 1 }
				multiply_key = { lhs = $return$ which = Public_Tmp0 }
				subtract_key = { lhs = $return$ which = $price$ }
				multiply_key = { lhs = $return$ value = -1 }
				subtract_key = { lhs = $return$ which = Public_Tmp0 }
				
				if = {
					limit = {
						NOT = { owned_by = event_target:ProvOwner }
					}
                    
					change_key = { lhs = Public_Tmp0 which = $price$ }
                    multiply_key = { lhs = Public_Tmp0 value = 0.5 } #divide_key = { lhs = Public_Tmp0 value = 2 }					
					multiply_key = { lhs = Public_Tmp0 which = $tariff$ }
					subtract_key = { lhs = $return$ which = Public_Tmp0 }
					
				}				
				if = {
					limit = {
						NOT = {
							check_key = { lhs = $return$ value = 0.001 } # min value
						}
					}
					set_key = { lhs = $return$ value = 0 }
				}
				else = {
                    
					# Exponential falloff for sector score
					# in desmos, z=5000
					#f=1-\left(\frac{z}{15000}\right)
					#x=\left(\left(f\cdot f\right)\right)\cdot z\cdot0.45
					## removed
					change_key = { lhs = $return$ value = 0.1 }
					if = {
						limit = {
							owned_by = event_target:ProvOwner
						}
                        
						multiply_key = { lhs = $return$ which = Modi_TradeScoreInternal }
					}
					else = {
						multiply_key = { lhs = $return$ which = Public_Tmp8 } # score
					}
				}
			}
            else = {
                set_key = { lhs = $return$ value = 0 }
            }
		}
	}
}
sectorTradeScoreCalcHelper = {
    if = {
		limit = {
			is_colonial_nation = yes
			is_colonial_nation_of = event_target:ProvOwner
		}
		if = {
			limit = {
				has_opinion = {
					who = event_target:ProvOwner
					value = 0
				}
				event_target:ProvOwner = {
					has_opinion = {
						who = PREV
						value = 0
					}
				}
			}
			PREV = { multiply_key = { lhs = $return$ value = 20 } }
		}
		else = {
			PREV = { multiply_key = { lhs = $return$ value = 12 } }
		}
    }
    else = {
        event_target:ProvOwner = { export_to_key = { lhs = Public_Tmp6 value = opinion who = PREV } }
        export_to_key = { lhs = Public_Tmp6 value = opinion who = event_target:ProvOwner }
        change_key = { lhs = Public_Tmp6 which = event_target:ProvOwner } #-400 to 400
        multiply_key = { lhs = Public_Tmp6 value = 0.01 } # -4 to 4
        multiply_key = { lhs = Public_Tmp6 value = 0.5 }  # -2 to 2
        change_key = { lhs = Public_Tmp6 value = 2.01 }   # 0.01 to 4.01        
        multiply_key = { lhs = Public_Tmp6 which = Public_Tmp6 }
        if = {
            limit = {
                transfers_trade_power_to = event_target:ProvOwner
            }
            multiply_key = { lhs = Public_Tmp6 value = 2 }
        }
        if = {
            limit = {
                alliance_with = event_target:ProvOwner
            }
            multiply_key = { lhs = Public_Tmp6 value = 1.5 }
        }
        PREV = {
            set_key = { lhs = Public_Tmp6 which = owner }
            multiply_key = { lhs = $return$ which = Public_Tmp6 }
        }
    }
}

TN_DoTradeSetAmountImport = {
	#save_event_target_as = Prov
    if = {
        limit = {
            check_key = { lhs = $bid$ value = 0.01 }
        }
        set_key = { lhs = $return$ which = $bid$ }
        set_key = { lhs = Tmp_8 which = $return$ }
        set_key = { lhs = Tmp_6 which = Sector_ScoreDisp }
        
        tradenode_centers = {
            limit = {
                has_province_flag = TN_SectorCentReachContain
            }
            every_trade_node_member_province = {
                if = {
                    limit = {
                        has_province_flag = TN_SectorCentReachWithin
                        
                        NOT = {
                            province_id = event_target:Prov
                        }
    
                        check_key = { lhs = $offer$ value = 0.01 }
    
                        [[food]
                            NOT = { check_key = { lhs = $distance$ value = 1.1 } }
                        ]
                    }
                    set_key = { lhs = $return$ which = $offer$ }
                    Set_Import_Max = { offer = $offer$ return = $return$ }
                    [[mil]
                    Calc_Tech_Difference_$type$ = { return = $return$ }                        
                    ]
                    [[ChangeAmounts]
                        ChangeAmounts$type$ = { return = $return$ }
                    ]
                }
                else = {
                    set_key = { lhs = $return$ value = 0 }
                }
            }
        }
        set_key = { lhs = $return$ which = $bid$ }	
    } 
    else = {
        set_key = { lhs = $return$ value = 0 }
    } 
}
# This function reduces imports for the first 25 sectors that trade if the target is Important or higher
# Inputs: Tmp_8 = Prov's bid // Tmp_6 = Prov's Sector_ScoreDisp
Set_Import_Max = {
    if = {
        limit = {                        
            NOT = { event_target:Prov = { check_key = { lhs = Sector_ScoreDisp value = 25 } } }
            OR = {
                has_province_modifier = TN_Major
                has_province_modifier = TN_Dominant
                has_province_modifier = TN_Important
            }
    
            OR = {
                has_global_flag = POP_Sim
                AND = {
                    NOT = {
                        owner = { has_opinion = { who = event_target:ProvOwner value = 150 } }
                        owner = { transfers_trade_power_to = event_target:ProvOwner }
                    }
                }
            }                             
        }
        
        set_key = { lhs = Tmp_8 which = event_target:Prov }
        divide_key = { lhs = Tmp_8 which = $offer$ }
    
        set_key = { lhs = Tmp_6 which = event_target:Prov }
        subtract_key = { lhs = Tmp_6 value = 1 }
        multiply_key = { lhs = Tmp_6 value = 0.024 }
        change_key = { lhs = Tmp_6 value = 1 }
        multiply_key = { lhs = Tmp_6 value = 0.60 }
        if = {
            limit = {
                check_key = { lhs = Tmp_8 which = Tmp_6 } # if bid is more than % of the offer, cap the offer.
            }
            multiply_key = { lhs = $return$ which = Tmp_6 }
        }
    }      
}

TN_DoTradeSetAmountExport = {
	#save_event_target_as = Prov
    if = {
        limit = {
            check_key = { lhs = $offer$ value = 0.01 }
        }
        tradenode_centers = {
            limit = {
                has_province_flag = TN_SectorCentReachContain
            }        
            every_trade_node_member_province = {
                if = {
                    limit = {
                        has_province_flag = TN_SectorCentReachWithin
                        
                        NOT = {
                            province_id = event_target:Prov
                        }
    
                        check_key = { lhs = $bid$ value = 0.01 }
    
                        [[food]
                            NOT = { check_key = { lhs = $distance$ value = 1.1 } }
                        ]
                    }
                    set_key = { lhs = $return$ which = $bid$ }
                    [[mil]
                        Calc_Tech_Difference_$type$ = { return = $return$ }
                    ]
                    [[ChangeAmounts]
                        ChangeAmounts$type$ = { return = $return$ }
                    ]
                }
                else = {
                    set_key = { lhs = $return$ value = 0 }
                }
            }
        }
        
        set_key = { lhs = $return$ which = $offer$ }
    }
    else = {
        set_key = { lhs = $return$ value = 0 }
    }	
}

TN_DoTradeDistrib = {
	#save_event_target_as = Prov
	
	set_key = { lhs = $return$ value = 0 }
	
	
	
	tradenode_centers = {
		limit = {
			has_province_flag = TN_SectorCentReachContain
		}
		every_trade_node_member_province = {
			if = {
				limit = {
					has_province_flag = TN_SectorCentReachWithin
					
					NOT = {
						province_id = event_target:Prov
					}
				}
				
				if = {
					limit = {
						check_key = { lhs = $score$ value = 0.001 }
					}
					set_key = { lhs = $return$ which = $amount$ }
					
					event_target:Prov = {
						change_key = { lhs = $return$ which = PREV }
					}
				}
				else = {
					set_key = { lhs = $return$ value = 0 }
				}
			}
		}
	}
	# Set a minimum score of 210000
	if = {
		limit = {
			NOT = {
				check_key = { lhs = $amount$ which = $return$ }
			}
		}
		set_key = { lhs = Public_Tmp0 value = 210000 }
		
		tradenode_centers = {
			limit = {
				has_province_flag = TN_SectorCentReachContain
			}
			every_trade_node_member_province = {
				if = {
					limit = {
						has_province_flag = TN_SectorCentReachWithin
						
						check_key = { lhs = $return$ value = 0.001 }
						
						NOT = {
							province_id = event_target:Prov
						}
					}
					set_key = { lhs = Public_Tmp0 which = $score$ }
					
					if = {
						limit = {
							NOT = {
								check_key = { lhs = Public_Tmp0 which = event_target:Prov }
							}
						}
						event_target:Prov = {
							set_key = { lhs = Public_Tmp0 which = PREV }
						}
					}
				}
			}
		}
		
		set_key = { lhs = Public_Tmp1 which = $amount$ }
		multiply_key = { lhs = Public_Tmp1 value = 100 }
		divide_key = { lhs = Public_Tmp1 which = $return$ } # desired amount needs to be reduced by this percentage		
		set_key = { lhs = $return$ value = 0 }
		# Re factor amounts
        #               (100-Percentage)*(MinScore)
        # NewAMount =  ---------------------      *(-1) + 100
        #                   Score
		tradenode_centers = {
			limit = {
				has_province_flag = TN_SectorCentReachContain
			}
			every_trade_node_member_province = {
				if = {
					limit = {
						has_province_flag = TN_SectorCentReachWithin
						
						check_key = { lhs = $return$ value = 0.001 }
						
						NOT = {
							province_id = event_target:Prov
						}
					}
					set_key = { lhs = Public_Tmp0 which = event_target:Prov } #Min score
					
					set_key = { lhs = Public_Tmp1 value = 100 }
					subtract_key = { lhs = Public_Tmp1 which = event_target:Prov }
					multiply_key = { lhs = Public_Tmp1 which = Public_Tmp0 }
					divide_key = { lhs = Public_Tmp1 which = $score$ }
					multiply_key = { lhs = Public_Tmp1 value = -1 }
					change_key = { lhs = Public_Tmp1 value = 100 }
					
					set_key = { lhs = $return$ which = $amount$ }
					multiply_key = { lhs = $return$ which = Public_Tmp1 }
                    multiply_key = { lhs = $return$ value = 0.01 } # divide_key = { lhs = $return$ value = 100 }                    
					
					event_target:Prov = {
						change_key = { lhs = $return$ which = PREV }
					}
				}
			}
		}
		
		if = {
			limit = {
				check_key = { lhs = $return$ value = 0.001 }
			}
			set_key = { lhs = Public_Tmp0 which = $amount$ }
			multiply_key = { lhs = Public_Tmp0 value = 100 }
			divide_key = { lhs = Public_Tmp0 which = $return$ }
			
			tradenode_centers = {
				limit = {
					has_province_flag = TN_SectorCentReachContain
				}
				every_trade_node_member_province = {
					if = {
						limit = {
							has_province_flag = TN_SectorCentReachWithin
							
							check_key = { lhs = $return$ value = 0.001 }
							
							NOT = {
								province_id = event_target:Prov
							}
						}
						set_key = { lhs = Public_Tmp0 which = event_target:Prov }
						
						multiply_key = { lhs = $return$ which = Public_Tmp0 }
                        multiply_key = { lhs = $return$ value = 0.01 } # divide_key = { lhs = $return$ value = 100 }
                        	
					}
				}
			}
		}
	}
}


TN_DoTradeByAmountImport = {
	#save_event_target_as = Prov
	
	set_key = { lhs = Public_Tmp0 which = Tariff_Rate$prod$ }
	set_key = { lhs = Public_Tmp1 which = TN_ProvPrc$prod$ }
	
	tradenode_centers = {
		limit = {
			has_province_flag = TN_SectorCentReachContain
		}
		every_trade_node_member_province = {
			if = {
				limit = {
					has_province_flag = TN_SectorCentReachWithin
					
					check_key = { lhs = $amount$ value = 0.001 }
					
					NOT = {
						province_id = event_target:Prov
					}
				}
				set_key = { lhs = Public_Tmp1 which = event_target:Prov }
                set_key = { lhs = Tmp_9 which = $amount$ }
				
				if = {
					limit = {
						NOT = {
							owned_by = event_target:ProvOwner
						}
					}
					set_key = { lhs = Public_Tmp0 which = Public_Tmp1 }
					change_key = { lhs = Public_Tmp0 which = TN_ProvPrc$prod$ }
                    multiply_key = { lhs = Public_Tmp0 value = 0.5 } #divide_key = { lhs = Public_Tmp0 value = 2 }					
					multiply_key = { lhs = Public_Tmp0 which = event_target:Prov }                    
                    
                    
				}
				else = {
					set_key = { lhs = Public_Tmp0 value = 0 }                   
				}
                
                # Public_Tmp4: how much the good costs to import
                set_key = { lhs = Public_Tmp4 which = Public_Tmp3 } # distance converted to a multiplier
                multiply_key = { lhs = Public_Tmp4 which = TN_ProvPrc$prod$ } # distance * prod prc conductee
                change_key = { lhs = Public_Tmp4 which = Public_Tmp0 } # + tariff
                
                # Actual transaction price is the midpoint between conductor's sector price and total import cost
                # Public_Tmp7: Excess profit per-good earned by conductee (half of conductor's sector price minus total import cost)
                set_key = { lhs = Public_Tmp7 which = Public_Tmp1 } # conductor prod prc
                subtract_key = { lhs = Public_Tmp7 which = Public_Tmp4 } # difference 
                multiply_key = { lhs = Public_Tmp7 value = 0.5 } #divide_key = { lhs = Public_Tmp7 value = 2 }                
                
                # Public_Tmp5: Total excess profit earned by conductee
                set_key = { lhs = Public_Tmp5 which = Public_Tmp7 }
                multiply_key = { lhs = Public_Tmp5 which = $amount$ }
                
                subtract_key = { lhs = TN_SectorStockpileOffer$prod$ which = $amount$ }
                subtract_key = { lhs = TN_SectorStockpile$prod$ which = $amount$ }
                change_key = { lhs = TN_SectorStockpileOut$prod$ which = $amount$ }
                change_key = { lhs = TN_SectorExported$prod$ which = $amount$ }
                change_key = { lhs = TN_SectorTrade which = Public_Tmp5 }

                if = {
                    limit = {
                        DisplayTradeTrigger = yes
                        check_key = { lhs = $amount$ value = 1 }
                    }
                    event_target:Prov = { set_key = { lhs = link_id which = ID_Prov } }
                    set_key = { lhs = link_id which = event_target:Prov }
                    DoTradeDisplaySold = { prod = $prod$ amount = $amount$ tradelink = link_id }
                }
				
				event_target:Prov = {
                    # Public_Tmp7: Excess profit per-good earned by conductor (half of conductor's sector price minus total import cost)
					set_key = { lhs = Public_Tmp7 which = PREV }
					set_key = { lhs = $amount$ which = PREV }
                    
                    # Public_Tmp5: Total excess profit earned by conductor
                    set_key = { lhs = Public_Tmp5 which = PREV }
					
					change_key = { lhs = TN_SectorStockpile$prod$ which = $amount$ }
					change_key = { lhs = TN_SectorStockpileIn$prod$ which = $amount$ }
					subtract_key = { lhs = TN_SectorStockpileBid$prod$ which = $amount$ }
                    change_key = { lhs = TN_SectorImported$prod$ which = $amount$ }

                    change_key = { lhs = TN_SectorTrade which = Public_Tmp5 }
                   
                    if = {
                        limit = {
                            DisplayTradeTrigger = yes
                            check_key = { lhs = $amount$ value = 1 }
                        }
                        PREV = { set_key = { lhs = link_id which = ID_Prov } }
                        set_key = { lhs = link_id which = PREV }
                        DoTradeDisplayBought = { prod = $prod$ amount = $amount$ tradelink = link_id }
                    }


					if = {
						limit = {
							NOT = {
								owned_by = PREV
							}
						}                       
                        #set_key = { lhs = Public_Tmp7 which = PREV } # Removed by jark 2024-03-30: this is already set above
						multiply_key = { lhs = Public_Tmp7 which = $amount$ }
						change_key = { lhs = Tariff_Income which = Public_Tmp7 }
					}
                    else = {
                        
                    }
                }
				
				
				set_key = { lhs = Public_Tmp7 which = $amount$ }
				multiply_key = { lhs = Public_Tmp7 which = TN_ProvPrc$prod$ }
				multiply_key = { lhs = Public_Tmp7 value = 0.02 } # 2% of generated worth trade is distributed between the sectors that were 'jumped' for the transaction to happen
				
				if = {
					limit = { # If it belongs to the same Node or is right next to it just distributed inside.
						same_trade_node_as = event_target:Prov
                        NOT = { check_key = { lhs = Public_Tmp3 value = 1.05 } }			
					}
					change_key = { lhs = TN_SectorTrade which = Public_Tmp7 }
					
					event_target:Prov = { 
						set_key = { lhs = Public_Tmp7 which = PREV }
						change_key = { lhs = TN_SectorTrade which = Public_Tmp7 }

						if = {
							limit = {
								check_key = { lhs = Public_Tmp7 value = 1 }
							}
                            multiply_key = { lhs = Public_Tmp7 value = 0.01 } #divide_key = { lhs = Public_Tmp7 value = 100 }				
							change_key = { lhs = TN_SectorTV which = Public_Tmp7 }
						}
						else = {
							change_key = { lhs = TN_SectorTV value = 0.01 }
						}
					}
					
					if = {
						limit = {
							check_key = { lhs = Public_Tmp7 value = 1 }
						}
						multiply_key = { lhs = Public_Tmp7 value = 0.01 } #divide_key = { lhs = Public_Tmp7 value = 100 }
						change_key = { lhs = TN_SectorTV which = Public_Tmp7 }
					}
					else = {
						change_key = { lhs = TN_SectorTV value = 0.01 }
					}
				}
				else = { # If not then it gets stored 
					set_province_flag = conductee_target					
                    multiply_key = { lhs = Public_Tmp7 value = 0.364 } #divide_key = { lhs = Public_Tmp7 value = 2.75 } # deflate
					multiply_key = { lhs = Public_Tmp7 which = Public_Tmp3 } #increase by distance
					change_key = { lhs = Public_Tmp9 which = Public_Tmp7 }
					
					set_key = { lhs = Plague_Tmp1 which = Public_Tmp7 }					
					
					event_target:Prov = { 
						set_key = { lhs = Plague_Tmp1 which = PREV }					
						change_key = { lhs = Public_Tmp9 which = Plague_Tmp1 } #store to be distributed
					}				
				}                     
			}
		}
	}
}

TN_DoTradeByAmountExport = {
	#save_event_target_as = Prov
	
	set_key = { lhs = Public_Tmp0 which = TN_ProvPrc$prod$ }
	
	tradenode_centers = {
		limit = {
			has_province_flag = TN_SectorCentReachContain
		}
		every_trade_node_member_province = {
			if = {
				limit = {
					has_province_flag = TN_SectorCentReachWithin
					
					check_key = { lhs = $amount$ value = 0.001 }
					
					NOT = {
						province_id = event_target:Prov
					}
				}
				set_key = { lhs = Public_Tmp0 which = event_target:Prov }
                set_key = { lhs = Tmp_9 which = $amount$ }
				
                # Public_Tmp4: Conductee's local price minus distance-added cost
				set_key = { lhs = Public_Tmp4 which = Public_Tmp3 }	# Distance multiplier
				subtract_key = { lhs = Public_Tmp4 value = 1 }
				multiply_key = { lhs = Public_Tmp4 which = Public_Tmp0 } # Distance-added cost
				subtract_key = { lhs = Public_Tmp4 which = TN_ProvPrc$prod$ }
				multiply_key = { lhs = Public_Tmp4 value = -1 } # Local price minus distance-added cost
				
				if = {
					limit = {
						NOT = {
							owned_by = event_target:ProvOwner
						}
					}
					set_key = { lhs = Public_Tmp1 which = Public_Tmp0 }
					change_key = { lhs = Public_Tmp1 which = TN_ProvPrc$prod$ }
					multiply_key = { lhs = Public_Tmp1 value = 0.5 } # midpoint between conductor and conductee sector prices
					multiply_key = { lhs = Public_Tmp1 which = Tariff_Rate$prod$ } # Tariff value: midpoint price * tariff rate
					subtract_key = { lhs = Public_Tmp4 which = Public_Tmp1 } # Reduce local price by tariff amount
					multiply_key = { lhs = Public_Tmp1 which = $amount$ } # Total tariff income: tariff value per good * goods sold
					change_key = { lhs = Tariff_Income which = Public_Tmp1 }
				}
				
                # Public_Tmp7: Excess profit per-good earned by conductee (half of [conductee's sector price minus total costs (conductor sector price, distance-added cost, tariffs)])
				set_key = { lhs = Public_Tmp7 which = Public_Tmp4 }
				subtract_key = { lhs = Public_Tmp7 which = Public_Tmp0 }
                multiply_key = { lhs = Public_Tmp7 value = 0.5 } #divide_key = { lhs = Public_Tmp7 value = 2 }
				
                # Public_Tmp5: Total excess profit earned by conductee
				set_key = { lhs = Public_Tmp5 which = Public_Tmp7 }
				multiply_key = { lhs = Public_Tmp5 which = $amount$ }
				
				change_key = { lhs = TN_SectorStockpile$prod$ which = $amount$ }
				change_key = { lhs = TN_SectorStockpileIn$prod$ which = $amount$ }
				subtract_key = { lhs = TN_SectorStockpileBid$prod$ which = $amount$ }
                change_key = { lhs = TN_SectorImported$prod$ which = $amount$ }
				change_key = { lhs = TN_SectorTrade which = Public_Tmp5 }
                
                if = {
                    limit = {
                        DisplayTradeTrigger = yes
                        check_key = { lhs = $amount$ value = 1 }
                    }                    
                    event_target:Prov = { set_key = { lhs = link_id which = ID_Prov } }
                    set_key = { lhs = link_id which = event_target:Prov }
                    DoTradeDisplayBought = { prod = $prod$ amount = $amount$ tradelink = link_id }
                }                			
                
				event_target:Prov = {
					set_key = { lhs = $amount$ which = PREV }
                    # Public_Tmp5: Total excess profit earned by conductor
					set_key = { lhs = Public_Tmp5 which = PREV }
					
					subtract_key = { lhs = TN_SectorStockpileOffer$prod$ which = $amount$ }
					subtract_key = { lhs = TN_SectorStockpile$prod$ which = $amount$ }
					change_key = { lhs = TN_SectorStockpileOut$prod$ which = $amount$ }
                    change_key = { lhs = TN_SectorExported$prod$ which = $amount$ }
                    if = {
                        limit = {
                            DisplayTradeTrigger = yes
                            check_key = { lhs = $amount$ value = 1 }
                        }
                        PREV = { set_key = { lhs = link_id which = ID_Prov } }
                        set_key = { lhs = link_id which = PREV }
                        DoTradeDisplaySold = { prod = $prod$ amount = $amount$ tradelink = link_id }
                    }
					change_key = { lhs = TN_SectorTrade which = Public_Tmp5 }
                }
                
				
				set_key = { lhs = Public_Tmp7 which = $amount$ }
				multiply_key = { lhs = Public_Tmp7 which = Public_Tmp0 }
				multiply_key = { lhs = Public_Tmp7 value = 0.02 } # 2% of generated worth trade is distributed between the sectors that were 'jumped' for the transaction to happen
				
				if = {
					limit = {
						same_trade_node_as = event_target:Prov
                        NOT = { check_key = { lhs = Public_Tmp3 value = 1.05 } }
					}
					change_key = { lhs = TN_SectorTrade which = Public_Tmp7 }
					
					event_target:Prov = {
						set_key = { lhs = Public_Tmp7 which = PREV }
						change_key = { lhs = TN_SectorTrade which = Public_Tmp7 }

						if = {
							limit = {
								check_key = { lhs = Public_Tmp7 value = 1 }
							}
                            multiply_key = { lhs = Public_Tmp7 value = 0.01 } #divide_key = { lhs = Public_Tmp7 value = 100 }			
							change_key = { lhs = TN_SectorTV which = Public_Tmp7 }
						}
						else = {
							change_key = { lhs = TN_SectorTV value = 0.01 }
						}
					}
					
					if = {
						limit = {
							check_key = { lhs = Public_Tmp7 value = 1 }
						}
						multiply_key = { lhs = Public_Tmp7 value = 0.01 } #divide_key = { lhs = Public_Tmp7 value = 100 }
						change_key = { lhs = TN_SectorTV which = Public_Tmp7 }
					}
					else = {
						change_key = { lhs = TN_SectorTV value = 0.01 }
					}
				}
				else = { # If not then it gets stored 
					set_province_flag = conductee_target
					multiply_key = { lhs = Public_Tmp7 value = 0.364 } #divide_key = { lhs = Public_Tmp7 value = 2.75 } # deflate					
					multiply_key = { lhs = Public_Tmp7 which = Public_Tmp3 } #increase by distance
					change_key = { lhs = Public_Tmp9 which = Public_Tmp7 }
					
					set_key = { lhs = Plague_Tmp1 which = Public_Tmp7 }					
					
					event_target:Prov = { 
						set_key = { lhs = Plague_Tmp1 which = PREV }					
						change_key = { lhs = Public_Tmp9 which = Plague_Tmp1 } #store to be distributed
					}				
				}           
			}
		}
	}
}

TN_DoTradeHelper2 = {
	TN_DoTradeSetAmount$type$ = { bid = TN_SectorStockpileBid$prod$ offer = TN_SectorStockpileOffer$prod$ return = Tmp_1 [[food] distance = Public_Tmp3] [[mil] type = $type$] [[ChangeAmounts] type = $type$] }
	
	if = {
		limit = {
			check_key = { lhs = Tmp_1 value = 0.01 }
		}
		TN_DoTradeSetScore$type$ = { price = TN_ProvPrc$prod$ tariff = Tariff_Rate$prod$ return = Tmp_0 }
		TN_DoTradeDistrib = { score = Tmp_0 amount = Tmp_1 return = Tmp_2 }
		TN_DoTradeByAmount$type$ = { prod = $prod$ amount = Tmp_2 }
	}
}

# Distribute commerce income generated from trade margins, and trade value generated from trade volume, from sector to its member provinces
TN_SetTradeIncome = {
    # go through each sector
    regiongroup = {
        region = {
            limit = {
                has_province_flag = TN_SectorCent
            }
            
            if = {
                limit = {
					NOT = { is_key_equal = { lhs = TN_SectorTrade value = 0 } } # Amount of money from trade
				}
				divide_key = { lhs = TN_SectorTrade which = TN_SectorSply51 } # total money / commerce supply -> normalize money vs. 1 commerce output
			}
            if = {
                limit = {
					NOT = { is_key_equal = { lhs = TN_SectorTV value = 0 } } # Trade value used for vanilla trade
				}
				divide_key = { lhs = TN_SectorTV which = TN_SectorSply51 } # trade value / commerce supply
			}

            # go through all sector member provinces. where commerce supply > 0
			every_trade_node_member_province = {
				if = {
					limit = {
						owned_by = PREV
						has_province_flag = TN_SectorPart
						check_key = { lhs = TN_ProvSply51 value = 0.001 }
					}
                                        
					if = {
						limit = {
							NOT = { province_id = PREV }
						}
						set_key = { lhs = TN_SectorTrade which = PREV }
						set_key = { lhs = TN_SectorTV which = PREV }
					}

					# Distribute trade money over all provinces for all slots
                    TN_SetTradeIncomeHelper = { slot = 0 }
					TN_SetTradeIncomeHelper = { slot = 1 }
					TN_SetTradeIncomeHelper = { slot = 2 }
					TN_SetTradeIncomeHelper = { slot = 3 }
					TN_SetTradeIncomeHelper = { slot = 4 }
					TN_SetTradeIncomeHelper = { slot = 5 }
					TN_SetTradeIncomeHelper = { slot = 6 }
					TN_SetTradeIncomeHelper = { slot = 7 }
					TN_SetTradeIncomeHelper = { slot = 8 }
					TN_SetTradeIncomeHelper = { slot = 9 }
					TN_SetTradeIncomeHelper = { slot = 10 }
					TN_SetTradeIncomeHelper = { slot = 11 }
					TN_SetTradeIncomeHelper = { slot = 12 }
					TN_SetTradeIncomeHelper = { slot = 13 }
					TN_SetTradeIncomeHelper = { slot = 14 }
					TN_SetTradeIncomeHelper = { slot = 15 }

					set_key = { lhs = Stat_Inp which = TN_SectorTV }
					multiply_key = { lhs = Stat_Inp which = TN_ProvSply51 }
                    multiply_key = { lhs = Stat_Inp value = 1.0 } # Modify in constants.txt `TRADE_POWER_VALUE_MULTIPLIER~value`
			
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 819.2 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 409.6 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 204.8 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 102.4 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 51.2 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 25.6 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 12.8 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 6.4 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 3.2 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 1.6 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 0.8 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 0.4 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 0.2 }
					POP_SetMod = { varname = Stat_Inp modname = TN_TradeVal type = province value = 0.1 }

					set_key = { lhs = Stat_Inp value = 0 }
					
					set_key = { lhs = Public_Tmp1 value = 0 }

					if = {
						limit = {
							NOT = {
								province_id = PREV
							}
						}
						set_key = { lhs = TN_SectorTrade value = 0 }
						set_key = { lhs = TN_SectorTV value = 0 }
					}
				}
			}
        }
    }
}

TN_SumSectorHelper = {
    set_key = { lhs = Public_Tmp1 which = TN_Prov$type$$prod$ }

    PREV = {
        set_key = { lhs = Public_Tmp1 which = PREV }
        change_key = { lhs = TN_Sector$type$$prod$ which = Public_Tmp1 }
    }
}
TN_SumSectorHelper2 = {
    if = {
        limit = {
            check_key = { lhs = TN_SectorDmnd$prod$ which = TN_SectorSply$prod$ } # if demand > supply 
        }
        set_key = { lhs = Public_Tmp2 which = TN_SectorDmnd$prod$ }
    }
    else = {
        set_key = { lhs = Public_Tmp2 which = TN_SectorSply$prod$ } # if supply > demand
    }

    multiply_key = { lhs = Public_Tmp2 value = 3 }
    
    if = {
        limit = {
            NOT = {
                check_key = { lhs = TN_SectorStockpileSize$prod$ which = Public_Tmp2 } # TN_SectorStockpileSize = desired stockpile for bid 
            }
        }
        set_key = { lhs = TN_SectorStockpileSize$prod$ which = Public_Tmp2 }

        AAA = { change_key = { lhs = TN_SectorStockpileSize$prod$ value = 1 } }
        
    }    

    if = {
        limit = {
            NOT = {
                check_key = { lhs = TN_SectorStockpileSize$prod$ which = TN_SectorStockpile$prod$ } # if desired stockpile < total stockpile then get rid of goods that the merchants don't want.
            }
        }
        set_key = { lhs = TN_SectorStockpile$prod$ which = TN_SectorStockpileSize$prod$ }
    }
}

# Distribute trade money over all provinces
TN_SetTradeIncomeHelper = {
    if = {
        limit = {
            check_key = { lhs = Prod_S$slot$Sply51 value = 0.001 }
        }
        set_key = { lhs = Public_Tmp1 which = TN_SectorTrade } # TN_SectorTrade = Normalized Value per 1 commerce supply
        multiply_key = { lhs = Public_Tmp1 which = Prod_S$slot$Sply51 } #commerce output - multiply TN_SectorTrade with commerce sipply

        if = {
            limit = {
                check_key = { lhs = TN_SectorTrade value = 0 }
            }
            change_key = { lhs = Prod_S$slot$IncomeProd which  = Public_Tmp1 } # change income of slot by trade income
        }
        else = {
            subtract_key = { lhs = Prod_S$slot$SpendProd which = Public_Tmp1 } # change spend of slot by trade income, neg multiply it
        }
        change_key = { lhs = Prod_S$slot$SplyC51 which = Public_Tmp1 } # not sure what this does?
    }
}

TN_DoTradeAfterHelper1 = {
    if = {
        limit = {
            check_key = { lhs = Prod_S$slot$Dmnd$prod$ value = 0.001 }
        }
        set_key = { lhs = Public_Tmp1 which = Prod_S$slot$Dmnd$prod$ }
        multiply_key = { lhs = Public_Tmp1 which = TN_SectorSpend$prod$ }

        change_key = { lhs = Prod_S$slot$SpendProd which = Public_Tmp1 }
    }
}
TN_DoTradeAfterHelper2 = {
    if = {
        limit = {
            check_key = { lhs = $class$_Total value = 0.001 }
            check_key = { lhs = $class$_Fill$type$ value = 0.001 }
        }
        TN_GetDmndProd = { prod=$prod$ class=$class$ return = Public_Tmp1 }

        if = {
            limit = {
                check_key = { lhs = Public_Tmp1 value = 0.001 }
            }
            multiply_key = { lhs = Public_Tmp1 which = $class$_Fill$type$ }
            multiply_key = { lhs = Public_Tmp1 which = TN_SectorSpend$prod$ }

            change_key = { lhs = $class$_SpendProd which = Public_Tmp1 }
        }
    }
}

TN_DoTradeAfterHelper3 = {
    if = {
        limit = {
            check_key = { lhs = Prod_S$slot$Sply$prod$ value = 0.001 }
        }
        set_key = { lhs = Public_Tmp1 which = TN_SectorEarn$prod$ } # Amount of income based on the selling of 1 supply of goods
        
        set_key = { lhs = Public_Tmp2 which = Prod_S$slot$Sply$prod$ } # Multiplied by the output of the good
        [[DirectBuy]
        if = {
            limit = {
                always = $DirectBuy$
                check_key = { lhs = Class_DirectBuy$prod$ value = 0.001 }
            }
            set_key = { lhs = Public_Tmp4 which = Class_DirectSpend$prod$ }
            # What amount of goods were sold directly to classes?
            set_key = { lhs = Public_Tmp3 which = Prod_S$slot$Sply$prod$ }
            divide_key = { lhs = Public_Tmp3 which = Class_Produce$prod$ }

            multiply_key = { lhs = Public_Tmp4 which = Public_Tmp3 }
            multiply_key = { lhs = Public_Tmp3 which = Class_DirectBuy$prod$ }

            # Dont consider that Market Sold produce
            subtract_key = { lhs = Public_Tmp2 which = Public_Tmp3 }

            change_key = { lhs = Prod_S$slot$IncomeProd which = Public_Tmp4 } # set as income in the specific slot
            change_key = { lhs = Prod_S$slot$SplyC$prod$ which = Public_Tmp4 } # supply cost ?? idk what this is
        }
        ]
        # Now whatever goods were not direct sold, apply sector pricing/what was paid
        multiply_key = { lhs = Public_Tmp1 which = Public_Tmp2 } # Multiplied by the output of the good

        # Add earnings for market sold goods
        change_key = { lhs = Prod_S$slot$IncomeProd which = Public_Tmp1 } # set as income in the specific slot
        change_key = { lhs = Prod_S$slot$SplyC$prod$ which = Public_Tmp1 } # supply cost ?? idk what this is
    }
}

### 
# THIS FUNCTION NORMALIZES THE PROFIT AGAINST 1 UNIT OF GOOD produced
###
TN_DoTradeAfterHelper0 = { # new
    if = {
        limit = {
            check_key = { lhs = TN_Sector$type$$prod$ value = 0.001 } # if supply of good in province > 0
        }
		divide_key = { lhs = TN_Sector$moneyVar$$prod$ which = TN_Sector$type$$prod$ } # normalize total profit against total supply
   }
}

## This function applies Direct Buy spending
TN_DoTradeAfterHelper5 = {
    if = {
        limit = {
            check_key = { lhs = $class$_Total value = 0.001 }
            check_key = { lhs = $class$_DirectSpend$prod$ value = 0.001 }
        }
        change_key = { lhs = $class$_SpendProd which = $class$_DirectSpend$prod$ }
    }
}

TN_DirectBuyPriceMath = {
    set_key = { lhs = $output$ value = $BasePrice$ }
    [[elite]
    if = {
        limit = {
            always = $elite$
            check_key = { lhs = $output$ which = TN_ProvPrc$prod$ }
        }
        set_key = { lhs = $output$ which = TN_ProvPrc$prod$ }
    }
    ]
}

# Calculate income, spending, and class fulfillments for each fulfillment types
TN_DoIncomeSpending = {
    # Used for excises
    TN_SetHowMuchBought = { class = SF prod = 2 type = Life }
    TN_SetHowMuchBought = { class = NM prod = 2 type = Life }
    TN_SetHowMuchBought = { class = RE prod = 2 type = Life }
    TN_SetHowMuchBought = { class = NO prod = 2 type = Life }
    TN_SetHowMuchBought = { class = BG prod = 2 type = Life }
    TN_SetHowMuchBought = { class = CL prod = 2 type = Life }

    TN_SetHowMuchBought = { class = SF prod = 9 type = Luxury }
    TN_SetHowMuchBought = { class = NM prod = 9 type = Luxury }
    TN_SetHowMuchBought = { class = RE prod = 9 type = Luxury }
    TN_SetHowMuchBought = { class = NO prod = 9 type = Luxury }
    TN_SetHowMuchBought = { class = BG prod = 9 type = Luxury }
    TN_SetHowMuchBought = { class = CL prod = 9 type = Luxury }

    TN_SetHowMuchBought = { class = SF prod = 10 type = Luxury }
    TN_SetHowMuchBought = { class = NM prod = 10 type = Luxury }
    TN_SetHowMuchBought = { class = RE prod = 10 type = Luxury }
    TN_SetHowMuchBought = { class = NO prod = 10 type = Luxury }
    TN_SetHowMuchBought = { class = BG prod = 10 type = Luxury }
    TN_SetHowMuchBought = { class = CL prod = 10 type = Luxury }

    # Calculate 3 class fulfillments
    TN_CalcFulfillType = { class = SF DirectBuy1=yes DirectBuy2=yes DirectBuy4=yes DirectBuy5=yes }
    TN_CalcFulfillType = { class = NM DirectBuy1=yes DirectBuy2=yes DirectBuy4=yes DirectBuy5=yes }
    TN_CalcFulfillType = { class = RE }
    TN_CalcFulfillType = { class = NO DirectBuy1=yes DirectBuy2=yes DirectBuy4=yes DirectBuy5=yes }
    TN_CalcFulfillType = { class = BG }
    TN_CalcFulfillType = { class = CL DirectBuy1=yes DirectBuy2=yes DirectBuy4=yes DirectBuy5=yes }
	
	set_key = { lhs = Class_FillLife value = 0 }
	
	set_key = { lhs = Tmp_0 which = SF_FillLife }
	multiply_key = { lhs = Tmp_0 which = SF_Total }
	change_key = { lhs = Class_FillLife which = Tmp_0 }
	
	set_key = { lhs = Tmp_0 which = RE_FillLife }
	multiply_key = { lhs = Tmp_0 which = RE_Total }
	change_key = { lhs = Class_FillLife which = Tmp_0 }
	
	set_key = { lhs = Tmp_0 which = NM_FillLife }
	multiply_key = { lhs = Tmp_0 which = NM_Total }
	change_key = { lhs = Class_FillLife which = Tmp_0 }
	
	set_key = { lhs = Tmp_0 which = NO_FillLife }
	multiply_key = { lhs = Tmp_0 which = NO_Total }
	change_key = { lhs = Class_FillLife which = Tmp_0 }
	
	set_key = { lhs = Tmp_0 which = BG_FillLife }
	multiply_key = { lhs = Tmp_0 which = BG_Total }
	change_key = { lhs = Class_FillLife which = Tmp_0 }
	
	set_key = { lhs = Tmp_0 which = CL_FillLife }
	multiply_key = { lhs = Tmp_0 which = CL_Total }
	change_key = { lhs = Class_FillLife which = Tmp_0 }
	
	if = {
		limit = {
			is_key_equal = { lhs = Class_Total value = 0 }
		}
		set_key = { lhs = Class_FillLife value = 1 }
	}
	else = {
		divide_key = { lhs = Class_FillLife which = Class_Total }
	}
	
	set_key = { lhs = Class_FillLifeC value = 0 }
	
	set_key = { lhs = Tmp_0 which = SF_FillLifeC }
	multiply_key = { lhs = Tmp_0 which = SF_Total }
	change_key = { lhs = Class_FillLifeC which = Tmp_0 }
	
	set_key = { lhs = Tmp_0 which = RE_FillLifeC }
	multiply_key = { lhs = Tmp_0 which = RE_Total }
	change_key = { lhs = Class_FillLifeC which = Tmp_0 }
	
	set_key = { lhs = Tmp_0 which = NM_FillLifeC }
	multiply_key = { lhs = Tmp_0 which = NM_Total }
	change_key = { lhs = Class_FillLifeC which = Tmp_0 }
	
	set_key = { lhs = Tmp_0 which = NO_FillLifeC }
	multiply_key = { lhs = Tmp_0 which = NO_Total }
	change_key = { lhs = Class_FillLifeC which = Tmp_0 }
	
	set_key = { lhs = Tmp_0 which = BG_FillLifeC }
	multiply_key = { lhs = Tmp_0 which = BG_Total }
	change_key = { lhs = Class_FillLifeC which = Tmp_0 }
	
	set_key = { lhs = Tmp_0 which = CL_FillLifeC }
	multiply_key = { lhs = Tmp_0 which = CL_Total }
	change_key = { lhs = Class_FillLifeC which = Tmp_0 }
	
	if = {
		limit = {
			is_key_equal = { lhs = Class_Total value = 0 }
		}
		set_key = { lhs = Class_FillLifeC value = 1 }
	}
	else = {
		divide_key = { lhs = Class_FillLifeC which = Class_Total }
	}
}

# Summarize various variables into total class and slot incomes
TN_SetIncome = {
    # There's a small amount of innate wealth for each classes
    TN_SetIncomeInnate = yes

    # Class Income
    set_key = { lhs = SF_Income which = SF_IncomeInnate }
    set_key = { lhs = NM_Income which = NM_IncomeInnate }
    set_key = { lhs = RE_Income which = RE_IncomeInnate }
    set_key = { lhs = NO_Income which = NO_IncomeInnate }
    set_key = { lhs = BG_Income which = BG_IncomeInnate }
    set_key = { lhs = CL_Income which = CL_IncomeInnate }
	
	# Literati
    set_key = { lhs = LT_Income which = LT_IncomeProd }
    change_key = { lhs = RE_Income which = LT_Income } # Literati are Residents

    # Wage
    change_key = { lhs = SF_Income which = SF_IncomeProd }
    change_key = { lhs = NM_Income which = NM_IncomeProd }
    change_key = { lhs = RE_Income which = RE_IncomeProd }
    change_key = { lhs = NO_Income which = NO_IncomeProd }
    change_key = { lhs = BG_Income which = BG_IncomeProd }
    change_key = { lhs = CL_Income which = CL_IncomeProd }

    # Property
    change_key = { lhs = SF_Income which = SF_IncomePrp }
    change_key = { lhs = NM_Income which = NM_IncomePrp }
    change_key = { lhs = RE_Income which = RE_IncomePrp }
    change_key = { lhs = NO_Income which = NO_IncomePrp }
    change_key = { lhs = BG_Income which = BG_IncomePrp }
    change_key = { lhs = CL_Income which = CL_IncomePrp }

    # Dole
    change_key = { lhs = SF_Income which = SF_IncomeDole }
    change_key = { lhs = NM_Income which = NM_IncomeDole }
    change_key = { lhs = RE_Income which = RE_IncomeDole }
    change_key = { lhs = NO_Income which = NO_IncomeDole }
    change_key = { lhs = BG_Income which = BG_IncomeDole }
    change_key = { lhs = CL_Income which = CL_IncomeDole }

    # Dole
    change_key = { lhs = SF_Income which = SF_IncomeTax }
    change_key = { lhs = NM_Income which = NM_IncomeTax }
    change_key = { lhs = RE_Income which = RE_IncomeTax }
    change_key = { lhs = NO_Income which = NO_IncomeTax }
    change_key = { lhs = BG_Income which = BG_IncomeTax }
    change_key = { lhs = CL_Income which = CL_IncomeTax }
	
	# Wages
	change_key = { lhs = NO_Income which = NO_IncomeAdmin }
	change_key = { lhs = BG_Income which = BG_IncomeAdmin }
	change_key = { lhs = CL_Income which = CL_IncomeAdmin }
	
	# Tax Farming
	change_key = { lhs = NO_Income which = NO_IncomeFarm }
	change_key = { lhs = BG_Income which = BG_IncomeFarm }
	change_key = { lhs = CL_Income which = CL_IncomeFarm }
	
	# Corruption
	change_key = { lhs = NO_Income which = NO_IncomeCrpt }
	change_key = { lhs = BG_Income which = BG_IncomeCrpt }
	change_key = { lhs = CL_Income which = CL_IncomeCrpt }

    # Class Spending
    set_key = { lhs = SF_Spend which = SF_SpendProd }
    set_key = { lhs = NM_Spend which = NM_SpendProd }
    set_key = { lhs = RE_Spend which = RE_SpendProd }
    set_key = { lhs = NO_Spend which = NO_SpendProd }
    set_key = { lhs = BG_Spend which = BG_SpendProd }
    set_key = { lhs = CL_Spend which = CL_SpendProd }

    # Property
    change_key = { lhs = SF_Spend which = SF_SpendPrp }
    change_key = { lhs = NM_Spend which = NM_SpendPrp }
    change_key = { lhs = RE_Spend which = RE_SpendPrp }
    change_key = { lhs = NO_Spend which = NO_SpendPrp }
    change_key = { lhs = BG_Spend which = BG_SpendPrp }
    change_key = { lhs = CL_Spend which = CL_SpendPrp }

    # Infra
    change_key = { lhs = SF_Spend which = SF_SpendInfra }
    change_key = { lhs = NM_Spend which = NM_SpendInfra }
    change_key = { lhs = RE_Spend which = RE_SpendInfra }
    change_key = { lhs = NO_Spend which = NO_SpendInfra }
    change_key = { lhs = BG_Spend which = BG_SpendInfra }
    change_key = { lhs = CL_Spend which = CL_SpendInfra }

    # Tax
    change_key = { lhs = SF_Spend which = SF_SpendTax }
    change_key = { lhs = NM_Spend which = NM_SpendTax }
    change_key = { lhs = RE_Spend which = RE_SpendTax }
    change_key = { lhs = NO_Spend which = NO_SpendTax }
    change_key = { lhs = BG_Spend which = BG_SpendTax }
    change_key = { lhs = CL_Spend which = CL_SpendTax }
				
	change_key = { lhs = NO_Spend which = NO_SpendMP }
	change_key = { lhs = BG_Spend which = BG_SpendMP }
	change_key = { lhs = NO_Spend which = TR_SpendMP }
    
    # Slot income and spending
    set_key = { lhs = Prod_S0Income which = Prod_S0IncomeProd }
    set_key = { lhs = Prod_S1Income which = Prod_S1IncomeProd }
    set_key = { lhs = Prod_S2Income which = Prod_S2IncomeProd }
    set_key = { lhs = Prod_S3Income which = Prod_S3IncomeProd }
    set_key = { lhs = Prod_S4Income which = Prod_S4IncomeProd }
    set_key = { lhs = Prod_S5Income which = Prod_S5IncomeProd }
    set_key = { lhs = Prod_S6Income which = Prod_S6IncomeProd }
    set_key = { lhs = Prod_S7Income which = Prod_S7IncomeProd }
    set_key = { lhs = Prod_S8Income which = Prod_S8IncomeProd }
    set_key = { lhs = Prod_S9Income which = Prod_S9IncomeProd }
    set_key = { lhs = Prod_S10Income which = Prod_S10IncomeProd }
    set_key = { lhs = Prod_S11Income which = Prod_S11IncomeProd }
    set_key = { lhs = Prod_S12Income which = Prod_S12IncomeProd }
    set_key = { lhs = Prod_S13Income which = Prod_S13IncomeProd }
    set_key = { lhs = Prod_S14Income which = Prod_S14IncomeProd }
    set_key = { lhs = Prod_S15Income which = Prod_S15IncomeProd }

    # Gold
    change_key = { lhs = Prod_S0Income which = Prod_S0IncomeGold }
    change_key = { lhs = Prod_S1Income which = Prod_S1IncomeGold }
    change_key = { lhs = Prod_S2Income which = Prod_S2IncomeGold }
    change_key = { lhs = Prod_S3Income which = Prod_S3IncomeGold }
    change_key = { lhs = Prod_S4Income which = Prod_S4IncomeGold }
    change_key = { lhs = Prod_S5Income which = Prod_S5IncomeGold }
    change_key = { lhs = Prod_S6Income which = Prod_S6IncomeGold }
    change_key = { lhs = Prod_S7Income which = Prod_S7IncomeGold }
    change_key = { lhs = Prod_S8Income which = Prod_S8IncomeGold }
    change_key = { lhs = Prod_S9Income which = Prod_S9IncomeGold }
    change_key = { lhs = Prod_S10Income which = Prod_S10IncomeGold }
    change_key = { lhs = Prod_S11Income which = Prod_S11IncomeGold }
    change_key = { lhs = Prod_S12Income which = Prod_S12IncomeGold }
    change_key = { lhs = Prod_S13Income which = Prod_S13IncomeGold }
    change_key = { lhs = Prod_S14Income which = Prod_S14IncomeGold }
    change_key = { lhs = Prod_S15Income which = Prod_S15IncomeGold }
	
	set_key = { lhs = Prod_S0SpendPrev which = Prod_S0Spend }
    set_key = { lhs = Prod_S1SpendPrev which = Prod_S1Spend }
    set_key = { lhs = Prod_S2SpendPrev which = Prod_S2Spend }
    set_key = { lhs = Prod_S3SpendPrev which = Prod_S3Spend }
    set_key = { lhs = Prod_S4SpendPrev which = Prod_S4Spend }
    set_key = { lhs = Prod_S5SpendPrev which = Prod_S5Spend }
    set_key = { lhs = Prod_S6SpendPrev which = Prod_S6Spend }
    set_key = { lhs = Prod_S7SpendPrev which = Prod_S7Spend }
    set_key = { lhs = Prod_S8SpendPrev which = Prod_S8Spend }
    set_key = { lhs = Prod_S9SpendPrev which = Prod_S9Spend }
    set_key = { lhs = Prod_S10SpendPrev which = Prod_S10Spend }
    set_key = { lhs = Prod_S11SpendPrev which = Prod_S11Spend }
    set_key = { lhs = Prod_S12SpendPrev which = Prod_S12Spend }
    set_key = { lhs = Prod_S13SpendPrev which = Prod_S13Spend }
    set_key = { lhs = Prod_S14SpendPrev which = Prod_S14Spend }
    set_key = { lhs = Prod_S15SpendPrev which = Prod_S15Spend }

    # Wage
    set_key = { lhs = Prod_S0Spend which = Prod_S0SpendL }
    set_key = { lhs = Prod_S1Spend which = Prod_S1SpendL }
    set_key = { lhs = Prod_S2Spend which = Prod_S2SpendL }
    set_key = { lhs = Prod_S3Spend which = Prod_S3SpendL }
    set_key = { lhs = Prod_S4Spend which = Prod_S4SpendL }
    set_key = { lhs = Prod_S5Spend which = Prod_S5SpendL }
    set_key = { lhs = Prod_S6Spend which = Prod_S6SpendL }
    set_key = { lhs = Prod_S7Spend which = Prod_S7SpendL }
    set_key = { lhs = Prod_S8Spend which = Prod_S8SpendL }
    set_key = { lhs = Prod_S9Spend which = Prod_S9SpendL }
    set_key = { lhs = Prod_S10Spend which = Prod_S10SpendL }
    set_key = { lhs = Prod_S11Spend which = Prod_S11SpendL }
    set_key = { lhs = Prod_S12Spend which = Prod_S12SpendL }
    set_key = { lhs = Prod_S13Spend which = Prod_S13SpendL }
    set_key = { lhs = Prod_S14Spend which = Prod_S14SpendL }
    set_key = { lhs = Prod_S15Spend which = Prod_S15SpendL }

    # Input materials
    change_key = { lhs = Prod_S0Spend which = Prod_S0SpendProd }
    change_key = { lhs = Prod_S1Spend which = Prod_S1SpendProd }
    change_key = { lhs = Prod_S2Spend which = Prod_S2SpendProd }
    change_key = { lhs = Prod_S3Spend which = Prod_S3SpendProd }
    change_key = { lhs = Prod_S4Spend which = Prod_S4SpendProd }
    change_key = { lhs = Prod_S5Spend which = Prod_S5SpendProd }
    change_key = { lhs = Prod_S6Spend which = Prod_S6SpendProd }
    change_key = { lhs = Prod_S7Spend which = Prod_S7SpendProd }
    change_key = { lhs = Prod_S8Spend which = Prod_S8SpendProd }
    change_key = { lhs = Prod_S9Spend which = Prod_S9SpendProd }
    change_key = { lhs = Prod_S10Spend which = Prod_S10SpendProd }
    change_key = { lhs = Prod_S11Spend which = Prod_S11SpendProd }
    change_key = { lhs = Prod_S12Spend which = Prod_S12SpendProd }
    change_key = { lhs = Prod_S13Spend which = Prod_S13SpendProd }
    change_key = { lhs = Prod_S14Spend which = Prod_S14SpendProd }
    change_key = { lhs = Prod_S15Spend which = Prod_S15SpendProd }

    # Tax
    change_key = { lhs = Prod_S0Spend which = Prod_S0SpendTax }
    change_key = { lhs = Prod_S1Spend which = Prod_S1SpendTax }
    change_key = { lhs = Prod_S2Spend which = Prod_S2SpendTax }
    change_key = { lhs = Prod_S3Spend which = Prod_S3SpendTax }
    change_key = { lhs = Prod_S4Spend which = Prod_S4SpendTax }
    change_key = { lhs = Prod_S5Spend which = Prod_S5SpendTax }
    change_key = { lhs = Prod_S6Spend which = Prod_S6SpendTax }
    change_key = { lhs = Prod_S7Spend which = Prod_S7SpendTax }
    change_key = { lhs = Prod_S8Spend which = Prod_S8SpendTax }
    change_key = { lhs = Prod_S9Spend which = Prod_S9SpendTax }
    change_key = { lhs = Prod_S10Spend which = Prod_S10SpendTax }
    change_key = { lhs = Prod_S11Spend which = Prod_S11SpendTax }
    change_key = { lhs = Prod_S12Spend which = Prod_S12SpendTax }
    change_key = { lhs = Prod_S13Spend which = Prod_S13SpendTax }
    change_key = { lhs = Prod_S14Spend which = Prod_S14SpendTax }
    change_key = { lhs = Prod_S15Spend which = Prod_S15SpendTax }

    # Finalize by adding income and subtracting spending from wealth
    set_key = { lhs = SF_IncomeSpend which = SF_Income }
    set_key = { lhs = NM_IncomeSpend which = NM_Income }
    set_key = { lhs = RE_IncomeSpend which = RE_Income }
    set_key = { lhs = NO_IncomeSpend which = NO_Income }
    set_key = { lhs = BG_IncomeSpend which = BG_Income }
    set_key = { lhs = CL_IncomeSpend which = CL_Income }

    if = { limit = { check_key = { lhs = SF_Spend value = 0.001 } } subtract_key = { lhs = SF_IncomeSpend which = SF_Spend } }
    if = { limit = { check_key = { lhs = NM_Spend value = 0.001 } } subtract_key = { lhs = NM_IncomeSpend which = NM_Spend } }
    if = { limit = { check_key = { lhs = RE_Spend value = 0.001 } } subtract_key = { lhs = RE_IncomeSpend which = RE_Spend } }
    if = { limit = { check_key = { lhs = NO_Spend value = 0.001 } } subtract_key = { lhs = NO_IncomeSpend which = NO_Spend } }
    if = { limit = { check_key = { lhs = BG_Spend value = 0.001 } } subtract_key = { lhs = BG_IncomeSpend which = BG_Spend } }
    if = { limit = { check_key = { lhs = CL_Spend value = 0.001 } } subtract_key = { lhs = CL_IncomeSpend which = CL_Spend } }

    change_key = { lhs = SF_Wealth which = SF_IncomeSpend }
    change_key = { lhs = NM_Wealth which = NM_IncomeSpend }
    change_key = { lhs = RE_Wealth which = RE_IncomeSpend }
    change_key = { lhs = NO_Wealth which = NO_IncomeSpend }
    change_key = { lhs = BG_Wealth which = BG_IncomeSpend }
    change_key = { lhs = CL_Wealth which = CL_IncomeSpend }

    if = { limit = { NOT = { check_key = { lhs = SF_Wealth value = 1 } } } set_key = { lhs = SF_Wealth value = 1 } }
    if = { limit = { NOT = { check_key = { lhs = NM_Wealth value = 1 } } } set_key = { lhs = NM_Wealth value = 1 } }
    if = { limit = { NOT = { check_key = { lhs = RE_Wealth value = 1 } } } set_key = { lhs = RE_Wealth value = 1 } }
    if = { limit = { NOT = { check_key = { lhs = NO_Wealth value = 1 } } } set_key = { lhs = NO_Wealth value = 1 } }
    if = { limit = { NOT = { check_key = { lhs = BG_Wealth value = 1 } } } set_key = { lhs = BG_Wealth value = 1 } }
    if = { limit = { NOT = { check_key = { lhs = CL_Wealth value = 1 } } } set_key = { lhs = CL_Wealth value = 1 } }
    if = { limit = { NOT = { check_key = { lhs = BU_Wealth value = 0 } } } set_key = { lhs = BU_Wealth value = 0 } }

    # Get wealth per capita
    TN_GetWealthPC = { class = SF }
    TN_GetWealthPC = { class = NM }
    TN_GetWealthPC = { class = RE }
    TN_GetWealthPC = { class = NO }
    TN_GetWealthPC = { class = BG }
    TN_GetWealthPC = { class = CL }
    
    change_key = { lhs = Infra_Wealth which = Infra_Income }
    change_key = { lhs = Infra_Wealth which = Infra_StateSpend }
    subtract_key = { lhs = Infra_Wealth which = Infra_Spend }

    # Reduce wealth by 0.998999
    if = {
        limit = {
            has_global_flag = POP_Sim
            NOT = { has_global_flag = POP_Sim4 }
            always = no
        }
        multiply_key = { lhs = SF_Wealth value = 0.999 }
        multiply_key = { lhs = NM_Wealth value = 0.999 }
        multiply_key = { lhs = RE_Wealth value = 0.999 }
        multiply_key = { lhs = NO_Wealth value = 0.999 }
        multiply_key = { lhs = BG_Wealth value = 0.999 }
        multiply_key = { lhs = CL_Wealth value = 0.999 }
    }

    #multiply_key = { lhs = Infra_Wealth value = 0.999 }

    if = {
        limit = {
            NOT = {
                check_key = { lhs = Infra_Wealth value = 1 }
            }
        }
        set_key = { lhs = Infra_Wealth value = 1 }
    }

    POP_SumWealth = yes
}

TN_SetHowMuchBought = {
    if = {
        limit = {
            check_key = { lhs = $class$_Total value = 0.001 }
            check_key = { lhs = $class$_Fill$type$ value = 0.001 }
        }
        TN_GetDmndProd = { prod=$prod$ class=$class$ return = $class$_Bought$prod$ }

        if = {
            limit = {
                check_key = { lhs = $class$_Bought$prod$ value = 0.001 }
            }
            multiply_key = { lhs = $class$_Bought$prod$ which = $class$_Fill$type$ }
            multiply_key = { lhs = $class$_Bought$prod$ which = TN_ProvFill$prod$ }
			multiply_key = { lhs = $class$_Bought$prod$ value = 0.01 }
        }
    }
	else = {
       set_key = { lhs = $class$_Bought$prod$ value = 0 }
	}
}

TN_ApplyDirectFulfilR = {
	subtract_key = { lhs = TN_ProvSply$prod$ which = SF_DirectBuy$prod$ }
	subtract_key = { lhs = TN_ProvSply$prod$ which = NM_DirectBuy$prod$ }
	subtract_key = { lhs = TN_ProvSply$prod$ which = NO_DirectBuy$prod$ }
	subtract_key = { lhs = TN_ProvSply$prod$ which = CL_DirectBuy$prod$ }
    if = {
        limit = {
            NOT = { check_key = { lhs = TN_ProvSply$prod$ value = 0 } }
        }
        set_key = { lhs = TN_ProvSply$prod$ value = 0 }
    }
}
TN_ApplyDirectFulfilU = {
	subtract_key = { lhs = TN_ProvSply$prod$ which = RE_DirectBuy$prod$ }
	subtract_key = { lhs = TN_ProvSply$prod$ which = BG_DirectBuy$prod$ }
    if = {
        limit = {
            NOT = { check_key = { lhs = TN_ProvSply$prod$ value = 0 } }
        }
        set_key = { lhs = TN_ProvSply$prod$ value = 0 }
    }
}

TN_GetProdCheckSlotSply = {
	change_key = { lhs = TN_ProvSply$prod$ which = Prod_S$slot$Sply$prod$ }
}

TN_GetProdCheckSlotSplyR = {
    if = {
        limit = {
            check_key = { lhs = Prod_S$slot$DmndBR value = 0.001 }
        }
        change_key = { lhs = SF_Produce$prod$ which = Prod_S$slot$Sply$prod$ }
    }
    else_if = {
        limit = {
            check_key = { lhs = Prod_S$slot$DmndBNM value = 0.001 }
        }
        change_key = { lhs = NM_Produce$prod$ which = Prod_S$slot$Sply$prod$ }
    }
	change_key = { lhs = TN_ProvSply$prod$ which = Prod_S$slot$Sply$prod$ }
}

TN_GetProdCheckSlotSplyU = {
    if = {
        limit = {
            check_key = { lhs = Prod_S$slot$DmndBUL value = 0.001 }
        }
        change_key = { lhs = RE_Produce$prod$ which = Prod_S$slot$Sply$prod$ }
    }
	change_key = { lhs = TN_ProvSply$prod$ which = Prod_S$slot$Sply$prod$ }
}

TN_GetProdCheckSlotDmnd = {
	change_key = { lhs = TN_ProvDmnd$prod$ which = Prod_S$slot$Dmnd$prod$ }
}

TN_GetProdSlot = {
    TN_GetProdCheckSlotSply = { slot = 0 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 1 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 2 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 3 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 4 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 5 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 6 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 7 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 8 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 9 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 10 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 11 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 12 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 13 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 14 prod = $prod$ }
    TN_GetProdCheckSlotSply = { slot = 15 prod = $prod$ }

    TN_GetProdCheckSlotDmnd = { slot = 0 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 1 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 2 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 3 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 4 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 5 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 6 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 7 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 8 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 9 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 10 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 11 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 12 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 13 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 14 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 15 prod = $prod$ }
}

TN_GetProdSlotDirectR = {
    set_key = { lhs = SF_Produce$prod$ value = 0 }
    set_key = { lhs = NM_Produce$prod$ value = 0 }
    TN_GetProdCheckSlotSplyR = { slot = 0 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 1 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 2 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 3 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 4 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 5 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 6 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 7 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 8 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 9 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 10 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 11 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 12 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 13 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 14 prod = $prod$ }
    TN_GetProdCheckSlotSplyR = { slot = 15 prod = $prod$ }

    TN_GetProdCheckSlotDmnd = { slot = 0 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 1 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 2 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 3 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 4 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 5 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 6 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 7 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 8 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 9 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 10 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 11 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 12 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 13 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 14 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 15 prod = $prod$ }
}

TN_GetProdSlotDirectU = {
    set_key = { lhs = RE_Produce$prod$ value = 0 }
    TN_GetProdCheckSlotSplyU = { slot = 0 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 1 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 2 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 3 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 4 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 5 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 6 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 7 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 8 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 9 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 10 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 11 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 12 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 13 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 14 prod = $prod$ }
    TN_GetProdCheckSlotSplyU = { slot = 15 prod = $prod$ }

    TN_GetProdCheckSlotDmnd = { slot = 0 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 1 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 2 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 3 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 4 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 5 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 6 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 7 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 8 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 9 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 10 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 11 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 12 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 13 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 14 prod = $prod$ }
    TN_GetProdCheckSlotDmnd = { slot = 15 prod = $prod$ }
}

# Set Demand per Good per class per fulfillment type
TN_GetProdClassHelper = {
    if = {
        limit = {
            check_key = { lhs = $class$_Fill$type$ value = 0.001 }
            check_key = { lhs = $class$_Total value = 0.001 }
        }
        TN_GetDmndProd = { prod=$prod$ class=$class$ return = Tmp_1 } # Get base need per good and apply API modifiers
        
        set_key = { lhs = $class$_Need$prod$ which = Tmp_1 } # Set goods need per product per class (also used as display variable)

        # Modify demand by last years (?) fulfillment
        multiply_key = { lhs = Tmp_1 which = $class$_Fill$type$ }
        change_key = { lhs = TN_ProvDmnd$prod$ which = Tmp_1 } # add demanded goods to province demand
        
        if = {
            limit = {
                owner = { ai = no }
                #always = yes
            }
            set_key = { lhs = $class$_Dmnd$prod$ which = Tmp_1 } # store actual demanded goods for player display only
        }

        set_key = { lhs = Tmp_1  value = 0 }
    }
	else = {
		set_key = { lhs = $class$_Need$prod$ value = 0 }
	}
}

TN_GetProdClass = {
    TN_GetProdClassHelper = { class = SF prod = $prod$ type = $type$ }
    TN_GetProdClassHelper = { class = NM prod = $prod$ type = $type$ }
    TN_GetProdClassHelper = { class = RE prod = $prod$ type = $type$ }
    TN_GetProdClassHelper = { class = NO prod = $prod$ type = $type$ }
    TN_GetProdClassHelper = { class = BG prod = $prod$ type = $type$ }
    TN_GetProdClassHelper = { class = CL prod = $prod$ type = $type$ }
}

TN_SetIncomeInnateHelperMain = {
    set_key = { lhs = $class$_IncomeInnate value = 0 }
    if = {
        limit = {
            check_key = { lhs = $class$_Total value = 0.01 }
        }
        [[Proportional]
        if = {
            limit = {
                always = $Proportional$
            }
            if = {
                limit = {
                    check_key = { lhs = $class$_Total value = $Threshold$ }
                }
                set_key = { lhs = Public_Tmp1 value = $Threshold$ }
                multiply_key = { lhs = Public_Tmp1 value = $val2$ }
                
                set_key = { lhs = $class$_IncomeInnate which = $class$_Total }
                subtract_key = { lhs = $class$_IncomeInnate value = $Threshold$ }
                multiply_key = { lhs = $class$_IncomeInnate value = $val$ }
                change_key = { lhs = $class$_IncomeInnate which = Public_Tmp1 }
                
                set_key = { lhs = Public_Tmp1 value = 0 }
            }
            else = {
                set_key = { lhs = $class$_IncomeInnate which = $class$_Total }
                multiply_key = { lhs = $class$_IncomeInnate value = $val2$ }
            }
        }]
        [[Fixed]
        if = {
            limit = {
                always = $Fixed$
            }
            set_key = { lhs = $class$_IncomeInnate value = $val$ }
        }]
        multiply_key = { lhs = $class$_IncomeInnate value = 1.333 } ## balancing
        if = {
            limit = {
                NOT = { has_global_flag = POP_Sim }
            }
            multiply_key = { lhs = $class$_IncomeInnate value = 1.0 } ## balancing
        }
        else_if = {
            limit = {
                has_global_flag = POP_Sim
            }
            multiply_key = { lhs = $class$_IncomeInnate value = 1.0 } ## balancing
            if = {
                limit = {
                    has_global_flag = POP_Sim10
                }
                multiply_key = { lhs = $class$_IncomeInnate value = 0.25 } ## balancing
                if = {
                    limit = {
                        NOT = { has_global_flag = POP_Sim6 }
                    }
                    multiply_key = { lhs = $class$_IncomeInnate value = 0.5 } ## balancing
                }
            }
        }
    }
}
TN_SetIncomeInnateHelper = {
    set_key = { lhs = $class$_IncomeInnate which = $class$_Total }
    multiply_key = { lhs = $class$_IncomeInnate value = $val$ }
}

#
# val = innate income per 1k pops after threshhold of pops
# val2 = innate income per 1k pops before threshhold
# Threshhold = pops in k below which higher innate income is applied
TN_SetIncomeInnate = {
    TN_SetIncomeInnateHelperMain = { class = SF Proportional=yes val = 0.006 val2 = 0.08 Threshold = 3 }
    TN_SetIncomeInnateHelperMain = { class = NM Proportional=yes val = 0.007 val2 = 0.08 Threshold = 3 }
    TN_SetIncomeInnateHelperMain = { class = RE Proportional=yes val = 0.008 val2 = 0.5 Threshold = 3 }
    TN_SetIncomeInnateHelperMain = { class = NO Proportional=yes val = 0.012 val2 = 0.8 Threshold = 0.5 }
    TN_SetIncomeInnateHelperMain = { class = BG Fixed=yes val = 0.5 }
    set_key = { lhs = CL_IncomeInnate value = 0 }
}

TN_GetWealthPC = {
    if = {
        limit = {
            check_key = { lhs = $class$_Total value = 0.001 }
        }
        set_key = { lhs = $class$_WealthPC which = $class$_Wealth }
        divide_key = { lhs = $class$_WealthPC which = $class$_Total }
    }
    else = {
        set_key = { lhs = $class$_WealthPC value = 0 }
    }
}

# Set how much of their demand was actually fulfilled
TN_CalcFulfillType = {
    if = {
        limit = {
            check_key = { lhs = $class$_Total value = 0.001 }
        }
        TN_GetDmndProd = { prod=1 class=$class$ return = Tmp_2 }
        TN_GetDmndProd = { prod=2 class=$class$ return = Tmp_3 }
        TN_GetDmndProd = { prod=4 class=$class$ return = Public_Tmp1 }
        TN_GetDmndProd = { prod=5 class=$class$ return = Tmp_4 }
        TN_GetDmndProd = { prod=6 class=$class$ return = Public_Tmp6 }
        TN_GetDmndProd = { prod=9 class=$class$ return = Tmp_7 }
        TN_GetDmndProd = { prod=10 class=$class$ return = Public_Tmp3 }
        TN_GetDmndProd = { prod=21 class=$class$ return = Tmp_5 }
        TN_GetDmndProd = { prod=23 class=$class$ return = Public_Tmp2 }
        TN_GetDmndProd = { prod=24 class=$class$ return = Public_Tmp5 }
        TN_GetDmndProd = { prod=25 class=$class$ return = Tmp_8 }

        ### Precalc what % of life each good fulfils
        set_key = { lhs = Tax_Tmp0 value = 0 }
        change_key = { lhs = Tax_Tmp0 which = Tmp_3 }
        change_key = { lhs = Tax_Tmp0 which = Public_Tmp1 }
        change_key = { lhs = Tax_Tmp0 which = Tmp_5 }
        set_key = { lhs = Tax_Tmp1 which = Tmp_3 }
        if = {
            limit = { check_key = { lhs = Tax_Tmp1 value = 0.001 } }
            divide_key = { lhs = Tax_Tmp1 which = Tax_Tmp0 }
        }
        set_key = { lhs = Tax_Tmp2 which = Public_Tmp1 }
        if = {
            limit = { check_key = { lhs = Tax_Tmp2 value = 0.001 } }
            divide_key = { lhs = Tax_Tmp2 which = Tax_Tmp0 }
        }
        set_key = { lhs = Tax_Tmp3 which = Tmp_4 }
        if = {
            limit = { check_key = { lhs = Tax_Tmp3 value = 0.001 } }
            divide_key = { lhs = Tax_Tmp3 which = Tax_Tmp0 }
        }
		
		set_key = { lhs = Tmp_0 which = Tmp_2 }
        # Edit for new produce
        if = {
            limit = {
                OR = {
                    check_key = { lhs = $class$_FillFood value = 0.001 }
                    [[DirectBuy1]
                    AND = {
                        always = $DirectBuy1$ 
                        check_key = { lhs = $class$_DirectFill1 value = 0.001 }
                    }
                    ]
                }
                check_key = { lhs = Tmp_0 value = 0.001 }
            }
			set_key = { lhs = Public_Tmp4 value = 0 }
			if = {
				limit = {
					check_key = { lhs = Tmp_2 value = 0.001 }
				}
				set_key = { lhs = Tmp_1 which = Tmp_2 }
				divide_key = { lhs = Tmp_1 which = Tmp_0 }
				multiply_key = { lhs = Tmp_1 which = TN_ProvFill1 }
				change_key = { lhs = Public_Tmp4 which = Tmp_1 }
			}
            multiply_key = { lhs = $class$_FillFood which = Public_Tmp4 }
			multiply_key = { lhs = $class$_FillFood value = 0.01 }
			[[DirectBuy1] change_key = { lhs = $class$_FillFood which = $class$_DirectFill1 } ]
        }
        else = {
            set_key = { lhs = $class$_FillFood value = 0 }
        }

        set_key = { lhs = $class$_FillFoodD which = $class$_FillFood }
        multiply_key = { lhs = $class$_FillFoodD value = 100 }
        [[DirectBuy1]
        set_key = { lhs = $class$_FillFoodDirectD which = $class$_DirectFill1 }
        multiply_key = { lhs = $class$_FillFoodDirectD value = 100 }
        ]
		
		set_key = { lhs = Tmp_0 which = Tmp_3 }
		change_key = { lhs = Tmp_0 which = Public_Tmp1 }
		change_key = { lhs = Tmp_0 which = Tmp_4 }

        # Edit for new produce
        if = {
            limit = {
                OR = {
                    check_key = { lhs = $class$_FillLife value = 0.001 }
                    [[DirectBuy2]
                    AND = {
                        always = $DirectBuy2$ 
                        check_key = { lhs = $class$_DirectFill2 value = 0.001 }
                    }
                    ]
                    [[DirectBuy4]
                    AND = {
                        always = $DirectBuy4$ 
                        check_key = { lhs = $class$_DirectFill4 value = 0.001 }
                    }
                    ]
                    [[DirectBuy5]
                    AND = {
                        always = $DirectBuy5$ 
                        check_key = { lhs = $class$_DirectFill5 value = 0.001 }
                    }
                    ]
                }
                check_key = { lhs = Tmp_0 value = 0.001 }
            }
			set_key = { lhs = Public_Tmp4 value = 0 }
			if = {
				limit = {
					check_key = { lhs = Tmp_3 value = 0.001 }
				}
				set_key = { lhs = Tmp_1 which = Tmp_3 }
				divide_key = { lhs = Tmp_1 which = Tmp_0 }
				multiply_key = { lhs = Tmp_1 which = TN_ProvFill2 }
				change_key = { lhs = Public_Tmp4 which = Tmp_1 }
			}
			if = {
				limit = {
					check_key = { lhs = Public_Tmp1 value = 0.001 }
				}
				set_key = { lhs = Tmp_1 which = Public_Tmp1 }
				divide_key = { lhs = Tmp_1 which = Tmp_0 }
				multiply_key = { lhs = Tmp_1 which = TN_ProvFill4 }
				change_key = { lhs = Public_Tmp4 which = Tmp_1 }
			}
			if = {
				limit = {
					check_key = { lhs = Tmp_4 value = 0.001 }
				}
				set_key = { lhs = Tmp_1 which = Tmp_4 }
				divide_key = { lhs = Tmp_1 which = Tmp_0 }
				multiply_key = { lhs = Tmp_1 which = TN_ProvFill5 }
				change_key = { lhs = Public_Tmp4 which = Tmp_1 }
			}
            multiply_key = { lhs = $class$_FillLife which = Public_Tmp4 }
			multiply_key = { lhs = $class$_FillLife value = 0.01 }
        }
        else = {
            set_key = { lhs = $class$_FillLife value = 0 }
        }

        set_key = { lhs = $class$_FillLifeDirectD value = 0 }
        [[DirectBuy2]
        set_key = { lhs = Tax_Tmp4 which = $class$_DirectFill2 }
        multiply_key = { lhs = Tax_Tmp4 which = Tax_Tmp1 }
        change_key = { lhs = $class$_FillLifeDirectD which = Tax_Tmp4 }
        ]
        [[DirectBuy4]
        set_key = { lhs = Tax_Tmp4 which = $class$_DirectFill4 }
        multiply_key = { lhs = Tax_Tmp4 which = Tax_Tmp2 }
        change_key = { lhs = $class$_FillLifeDirectD which = Tax_Tmp4 }
        ]
        [[DirectBuy5]
        set_key = { lhs = Tax_Tmp4 which = $class$_DirectFill5 }
        multiply_key = { lhs = Tax_Tmp4 which = Tax_Tmp3 }
        change_key = { lhs = $class$_FillLifeDirectD which = Tax_Tmp4 }
        ]
        change_key = { lhs = $class$_FillLife which = $class$_FillLifeDirectD }
        multiply_key = { lhs = $class$_FillLifeDirectD value = 100 }

        set_key = { lhs = $class$_FillLifeD which = $class$_FillLife }
        multiply_key = { lhs = $class$_FillLifeD value = 100 }
        
		
		set_key = { lhs = Tmp_0 which = Tmp_5 }
		change_key = { lhs = Tmp_0 which = Public_Tmp2 }
		change_key = { lhs = Tmp_0 which = Public_Tmp6 }
		
        if = {
            limit = {
                check_key = { lhs = $class$_FillComfort value = 0.001 }
                check_key = { lhs = Tmp_0 value = 0.001 }
            }
			set_key = { lhs = Public_Tmp4 value = 0 }
			if = {
				limit = {
					check_key = { lhs = Tmp_5 value = 0.001 }
				}
				set_key = { lhs = Tmp_1 which = Tmp_5 }
				divide_key = { lhs = Tmp_1 which = Tmp_0 }
				multiply_key = { lhs = Tmp_1 which = TN_ProvFill21 }
				change_key = { lhs = Public_Tmp4 which = Tmp_1 }
			}
			if = {
				limit = {
					check_key = { lhs = Public_Tmp2 value = 0.001 }
				}
				set_key = { lhs = Tmp_1 which = Public_Tmp2 }
				divide_key = { lhs = Tmp_1 which = Tmp_0 }
				multiply_key = { lhs = Tmp_1 which = TN_ProvFill23 }
				change_key = { lhs = Public_Tmp4 which = Tmp_1 }
			}
			if = {
				limit = {
					check_key = { lhs = Public_Tmp6 value = 0.001 }
				}
				set_key = { lhs = Tmp_1 which = Public_Tmp6 }
				divide_key = { lhs = Tmp_1 which = Tmp_0 }
				multiply_key = { lhs = Tmp_1 which = TN_ProvFill6 }
				change_key = { lhs = Public_Tmp4 which = Tmp_1 }
			}
            multiply_key = { lhs = $class$_FillComfort which = Public_Tmp4 }
			multiply_key = { lhs = $class$_FillComfort value = 0.01 }
        }
        else = {
            set_key = { lhs = $class$_FillComfort value = 0 }
        }

        set_key = { lhs = $class$_FillComfortD which = $class$_FillComfort }
        multiply_key = { lhs = $class$_FillComfortD value = 100 }

		set_key = { lhs = Tmp_0 which = Tmp_7 }
		change_key = { lhs = Tmp_0 which = Tmp_8 }
		change_key = { lhs = Tmp_0 which = Public_Tmp3 }
		change_key = { lhs = Tmp_0 which = Public_Tmp5 }
        if = {
            limit = {
                check_key = { lhs = $class$_FillLuxury value = 0.001 }
                check_key = { lhs = Tmp_0 value = 0.001 }
            }
			set_key = { lhs = Public_Tmp4 value = 0 }
			if = {
				limit = {
					check_key = { lhs = Tmp_7 value = 0.001 }
				}
				set_key = { lhs = Tmp_1 which = Tmp_7 }
				divide_key = { lhs = Tmp_1 which = Tmp_0 }
				multiply_key = { lhs = Tmp_1 which = TN_ProvFill9 }
				change_key = { lhs = Public_Tmp4 which = Tmp_1 }
			}
			if = {
				limit = {
					check_key = { lhs = Tmp_8 value = 0.001 }
				}
				set_key = { lhs = Tmp_1 which = Tmp_8 }
				divide_key = { lhs = Tmp_1 which = Tmp_0 }
				multiply_key = { lhs = Tmp_1 which = TN_ProvFill25 }
				change_key = { lhs = Public_Tmp4 which = Tmp_1 }
			}
			if = {
				limit = {
					check_key = { lhs = Public_Tmp3 value = 0.001 }
				}
				set_key = { lhs = Tmp_1 which = Public_Tmp3 }
				divide_key = { lhs = Tmp_1 which = Tmp_0 }
				multiply_key = { lhs = Tmp_1 which = TN_ProvFill10 }
				change_key = { lhs = Public_Tmp4 which = Tmp_1 }
			}
			if = {
				limit = {
					check_key = { lhs = Public_Tmp5 value = 0.001 }
				}
				set_key = { lhs = Tmp_1 which = Public_Tmp5 }
				divide_key = { lhs = Tmp_1 which = Tmp_0 }
				multiply_key = { lhs = Tmp_1 which = TN_ProvFill24 }
				change_key = { lhs = Public_Tmp4 which = Tmp_1 }
			}
            multiply_key = { lhs = $class$_FillLuxury which = Public_Tmp4 }
			multiply_key = { lhs = $class$_FillLuxury value = 0.01 }
        }
        else = {
            set_key = { lhs = $class$_FillLuxury value = 0 }
        }

        set_key = { lhs = $class$_FillLuxuryD which = $class$_FillLuxury }
        multiply_key = { lhs = $class$_FillLuxuryD value = 100 }

        if = {
            limit = {
                check_key = { lhs = $class$_FillKnowledge value = 0.001 }
            }
            multiply_key = { lhs = $class$_FillKnowledge which = TN_ProvFill41 }
			multiply_key = { lhs = $class$_FillKnowledge value = 0.01 }
        }
        else = {
            set_key = { lhs = $class$_FillKnowledge value = 0 }
        }

        set_key = { lhs = $class$_FillKnowledgeD which = $class$_FillKnowledge }
        multiply_key = { lhs = $class$_FillKnowledgeD value = 100 }

        set_key = { lhs = Tmp_0 value = 0 }
        set_key = { lhs = Tmp_1 value = 0 }
        set_key = { lhs = Tmp_2 value = 0 }
        set_key = { lhs = Tmp_3 value = 0 }
        set_key = { lhs = Tmp_4 value = 0 }
        set_key = { lhs = Tmp_5 value = 0 }
        set_key = { lhs = Tmp_6 value = 0 }
        set_key = { lhs = Tmp_7 value = 0 }
        set_key = { lhs = Tmp_8 value = 0 }
		set_key = { lhs = Public_Tmp1 value = 0 }
		set_key = { lhs = Public_Tmp2 value = 0 }
		set_key = { lhs = Public_Tmp3 value = 0 }
		set_key = { lhs = Public_Tmp4 value = 0 }
		set_key = { lhs = Public_Tmp5 value = 0 }
		set_key = { lhs = Public_Tmp6 value = 0 }

        # Calc weighted Life Fulfil
        set_key = { lhs = $class$_FillLifeC which = $class$_FillLife }
        multiply_key = { lhs = $class$_FillLifeC value = 0.25 }
		set_key = { lhs = Tmp_0 which = $class$_FillFood }
        multiply_key = { lhs = Tmp_0 value = 0.75 }
        change_key = { lhs = $class$_FillLifeC which = Tmp_0  }
    }
    else = {
        set_key = { lhs = $class$_FillFood value = 0.8 }
        set_key = { lhs = $class$_FillLife value = 0.0 }
        set_key = { lhs = $class$_FillComfort value = 0.0 }
        set_key = { lhs = $class$_FillLuxury value = 0 }
        set_key = { lhs = $class$_FillKnowledge value = 0 }
        set_key = { lhs = $class$_FillFoodD value = 0.8 }
        set_key = { lhs = $class$_FillLifeD value = 0.0 }
        set_key = { lhs = $class$_FillComfortD value = 0.0 }
        set_key = { lhs = $class$_FillLuxuryD value = 0 }
        set_key = { lhs = $class$_FillKnowledgeD value = 0 }
        
        set_key = { lhs = $class$_FillLifeC value = 0.4 }
    }
}
# Subsistence is updated based on sector's total production compared to sector's commerce production
TN_UpdateSubsistence = {
    set_key = { lhs = TN_Subsistence which = TN_SectorSply1 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply2 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply4 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply5 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply6 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply9 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply10 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply21 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply22 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply23 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply24 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply25 }
    change_key = { lhs = TN_Subsistence which = TN_SectorSply41 }
    
    if = {
        limit = {
            check_key = { lhs = TN_Subsistence value = 0.001 }
        }
        set_key = { lhs = Tmp_1 which = TN_SectorSply51 }
        change_key = { lhs = Tmp_1 value = 1 }
        multiply_key = { lhs = Tmp_1 value = 80 }
        multiply_key = { lhs = Tmp_1 which = Modi_StockpileSize } # Stockpile size modi

        divide_key = { lhs = TN_Subsistence which = Tmp_1 }
        if = {
            limit = {
                check_key = { lhs = TN_Subsistence value = 0.9 }
            }
            set_key = { lhs = TN_Subsistence value = 0.9 }
        }
        else_if = {
            limit = {
                NOT = {
                    check_key = { lhs = TN_Subsistence value = 0 }
                }
            }
            set_key = { lhs = TN_Subsistence value = 0 }
        }
    }
    else = {
		set_key = { lhs = TN_Subsistence value = 0.9 }
    }

	set_key = { lhs = Tmp_1 value = 0 }

	set_key = { lhs = TN_SubsistenceDisp which = TN_Subsistence }
	
	multiply_key = { lhs = TN_SubsistenceDisp value = 100 }
    
    every_trade_node_member_province = {
		if = {
			limit = {
				owned_by = PREV
				has_province_flag = TN_SectorPart
				NOT = { province_id = PREV }
			}
			set_key = { lhs = TN_Subsistence which = PREV }
			set_key = { lhs = TN_SubsistenceDisp which = PREV }
		}
	}
}


TN_DoDole = {
    if = {
        limit = {
            check_key = { lhs = $class$_Dole value = 0.001 }
        }
        TN_DoDoleHelper = { class = $class$ prod = 1 DirectBuy=yes }
    }
	else = {
		set_key = { lhs = $class$_IncomeDole value = 0 }
	}
}

TN_DoDoleHelper = {
    TN_GetDmndProd = { prod=$prod$ class=$class$ return = Tmp_0 }
    [[DirectBuy]
	if = {
		limit = {
			always = $DirectBuy$
		}
        subtract_key = { lhs = Tmp_0 which = $class$_DirectBuy$prod$ }
    }
    ]

	if = {
		limit = {
			check_key = { lhs = Tmp_0 value = 0.01 }
		}
		multiply_key = { lhs = Tmp_0 which = $class$_Dole }
		multiply_key = { lhs = Tmp_0 which = TN_SectorSpend$prod$ }

		change_key = { lhs = $class$_IncomeDole which = Tmp_0 }
	}
    [[DirectBuy]
    set_key = { lhs = Tmp_0 which = $class$_DirectBuy1 }

    if = {
        limit = {
            check_key = { lhs = Tmp_0 value = 0.01 }
        }
        multiply_key = { lhs = Tmp_0 which = $class$_Dole }
        TN_DirectBuyPriceMath = { output=Tmp_1 BasePrice=2.5 } ### BASE Good PRICE
        multiply_key = { lhs = Tmp_0 which = Tmp_1 }

        change_key = { lhs = $class$_IncomeDole which = Tmp_0 }
    }
    ]
}

Calc_Tech_Difference_Import = {
    owner = {
        export_to_key = { lhs = Tmp_9 value = mil_tech }        
        
        event_target:ProvOwner = {
            export_to_key = { lhs = Tmp_9 value = mil_tech }
            subtract_key = { lhs = Tmp_9 which = PREV }
            if = {
                limit = {
                    check_key = { lhs = Tmp_9 value = 3 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Tmp_9 value = 5 }
                    }
                    PREV = { multiply_key = { lhs = $return$ value = 0 } }
                }
                else_if = {
                    limit = {
                        check_key = { lhs = Tmp_9 value = 4 }
                    }
                    PREV = { multiply_key = { lhs = $return$ value = 0.1 } }
                }
                else = {
                    PREV = { multiply_key = { lhs = $return$ value = 0.2 } }
                }
            }
        }
    }
}
Calc_Tech_Difference_Export = {
    event_target:ProvOwner = {
        export_to_key = { lhs = Tmp_9 value = mil_tech }        
        
        owner = {
            export_to_key = { lhs = Tmp_9 value = mil_tech }
            subtract_key = { lhs = Tmp_9 which = PREV }
            if = {
                limit = {
                    check_key = { lhs = Tmp_9 value = 3 }
                }
                if = {
                    limit = {
                        check_key = { lhs = Tmp_9 value = 5 }
                    }
                    multiply_key = { lhs = $return$ value = 0 } 
                }
                else_if = {
                    limit = {
                        check_key = { lhs = Tmp_9 value = 4 }
                    }
                    multiply_key = { lhs = $return$ value = 0.1 } 
                }
                else = {
                    multiply_key = { lhs = $return$ value = 0.2 }
                }
            }
        }
    }    
}
#

