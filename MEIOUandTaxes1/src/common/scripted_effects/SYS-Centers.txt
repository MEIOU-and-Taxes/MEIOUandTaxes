# This scripted effect will take the name of the scripted effect as an argument 
# Which will in turn enter the value of the region id as its own argument

sr_effect0 = {
	sr_$id$ = {
		set_key = { lhs = ID_SR which = PREV }
	}
}

sr_effect1 = {
	sr_$id$ = {
		limit = {
			isValidProv = yes
		}
		PREV = {
			change_key = { lhs = SC_Prod which = PREV }
			change_key = { lhs = SC_Trade which = PREV }
			change_key = { lhs = SC_Edu which = PREV }
		}
	}
}

sr_effect2 = {
	sr_$id$ = {
		limit = {
			isValidProv = yes

			check_key = { lhs = SC_Prod which = event_target:SC_Targ }
		}
		save_event_target_as = SC_Targ
	}
}

sr_effect3 = {
	sr_$id$ = {
		limit = {
			check_key = { lhs = SC_Trade which = event_target:SC_Targ }
			
			isValidProv = yes
		}
		save_event_target_as = SC_Targ
	}
}

sr_effect4 = {
	sr_$id$ = {
		limit = {
			check_key = { lhs = SC_Edu which = event_target:SC_Targ }
			
			isValidProv = yes
		}
		save_event_target_as = SC_Targ
	}
}

cont_effect0 = {
	cont_$id$ = {
		set_key = { lhs = ID_Cont which = PREV }
	}
}

TN_effect8 = {
	every_trade_node_member_province = {
		limit = {
			NOT = {
				has_province_flag = TN_Cent
			}
		}
		PREV = {
			change_key = { lhs = TN_BGTotal which = PREV }
		}
	}
}

TN_effect9 = {
	every_trade_node_member_province = {
		limit = {
			NOT = {
				has_province_flag = TN_Cent
			}
		}
		set_key = { lhs = TN_BGTotal which = PREV }
	}
}

TN_effect10 = {
	every_trade_node_member_province = {
		limit = {
			NOT = {
				has_province_flag = TN_Cent
			}
		}
		set_key = { lhs = BG_IncomeTrade which = PREV }
	}
}

TN_effect11 = {
	if = { # if province is owned by owner and has a merchant or is capital
		limit = {
			owned_by = event_target:ProvNew
		}
		every_trade_node_member_province = {
			limit = { # flag all the sectors that belong to the same node as the previous province and flag them as trade partners 
				isValidProv = yes
				OR = {
					has_province_flag = TN_SectorCent
					has_province_flag = SMM_SectorCent
					has_province_flag = TN_SectorCentNoTC
				}
				NOT = {
					has_province_flag = TN_SectorCentReachWithin
				}
				check_key = { lhs = TN_SectorScore value = -1 }


				OR = {
					PREV = { province_id = event_target:Prov } # original jump
					
					PREV = {
						has_province_flag = TradePost@event_target:ProvNew
					}
					
					AND = {
						OR = {
							has_global_flag = 1_jump
							has_global_flag = 2_jump
						}
						has_province_flag = TN_COT_M
					}
				}

				owner = {
					OR = {
						transfers_trade_power_to = event_target:ProvNew
						event_target:ProvNew = { transfers_trade_power_to = PREV }
						AND = {
							OR = {
								has_global_flag = POP_Sim
								NOT = { war_with = event_target:ProvNew }
							}
							NOT = { trade_embargoing = event_target:ProvNew }
							NOT = { trade_embargo_by = event_target:ProvNew }
							has_opinion = { who = event_target:ProvNew value = -150 }
							reverse_has_opinion = { who = event_target:ProvNew value = -150 }
						}
					}
				}

			}
			set_province_flag = TN_SectorCentReachWithin			
			set_key = { lhs = Public_Tmp1 which = PREV }
			change_key = { lhs = Public_Tmp1 value = 1 }						
		}
	}
	#TN_effect20 continues on TN_effect11 for opt reasons
}

TN_effect12 = {
	every_trade_node_member_province = {
		limit = {
			has_province_flag = TN_SectorCent

			NOT = {
				province_id = PREV
			}
		}
		if = {
			limit = {
				OR = {
					has_merchant = owner

					has_trade_modifier = { who = owner key = trade_capital }
				}
			}
			set_province_flag = TN_SectorCentReachWithin

			set_key = { lhs = Public_Tmp1 which = PREV }
			change_key = { lhs = Public_Tmp1 value = 1 }

			PREV = {
				set_key = { lhs = Tmp_0 which = ID_Prov }

				PREV = {
					set_key = { lhs = Tmp_0 which = PREV }
					set_key = { lhs = Public_Tmp2 which = Tmp_0 }
					set_key = { lhs = Tmp_0 value = 0 }
				}

				set_key = { lhs = Tmp_0 value = 0 }
			}
		}
	}
}

TN_effect13 = {
	set_key = { lhs = Tmp_1 value = 0 }# Total trade power
	set_key = { lhs = Tmp_5 value = 0 }# Total knowledge power
	set_key = { lhs = Tmp_6 value = 0 }# Most trade power
	set_key = { lhs = Tmp_7 value = 0 }# Province id
	every_trade_node_member_province = {
		limit = {
			isValidProv = yes
		}
		set_key = { lhs = Tmp_2 value = 0 }
		set_key = { lhs = Tmp_3 value = 0 }
		set_key = { lhs = Tmp_0 which = Stat_TP } # current trade power
		
		# Apply EU4 modifiers
		export_to_key = { lhs = Tmp_2 value = modifier:province_trade_power_modifier }
		owner = {
			export_to_key = { lhs = Tmp_2 value = modifier:global_prov_trade_power_modifier }
			set_key = { lhs = Tmp_0 which = PREV }
			change_key = { lhs = PublicHelper_Tmp1 which = Tmp_0 }
			PREV = { 
				change_key = { lhs = Tmp_2 which = PREV }
			}
		}
		change_key = { lhs = Tmp_2 value = 1.1 } # 10% base
		multiply_key = { lhs = Tmp_0 which = Tmp_2 } # b) current trade power

		if = {
			limit = {
				is_capital = yes
			}
			multiply_key = { lhs = Tmp_0 value = 1.1 } # Give capitals a boost
		}

		if = {
			limit = {
				has_province_flag = TN_Natural_Major
			}
			multiply_key = { lhs = Tmp_0 value = 1.2 }
		}
		else_if = {
			limit = {
				has_province_flag = TN_Natural_Important
				OR = {
					has_province_flag = TN_Harbour_Major
					has_province_flag = TN_Harbour_Important
				}
			}
			multiply_key = { lhs = Tmp_0 value = 1.1 }
		}

		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 0.001 }
			}
			if = {
				limit = {
					NOT = { province_id = PREV }
				}
				set_key = { lhs = Tmp_6 which = Tmp_0 }
				set_key = { lhs = Tmp_7 which = ID_Prov }
				if = {
					limit = {
						check_key = { lhs = Tmp_6 which = PREV }
					}
					PREV = { set_key = { lhs = Tmp_6 which = PREV } }
					PREV = { set_key = { lhs = Tmp_7 which = PREV } }
				}
			}
			else_if = {
				limit = {
					check_key = { lhs = Tmp_0 which = Tmp_6 }
				}
				set_key = { lhs = Tmp_6 which = Tmp_0 }
				set_key = { lhs = Tmp_7 which = ID_Prov }
			}
		}

		set_key = { lhs = Tmp_4 which = TN_ProvSply41 } # current knowledge output
		
		if = {
			limit = {
				NOT = {
					province_id = PREV
				}
			}

			# a)*Total trade power of tradenode_centers. Sum of all tradenodes_$id$ *
			set_key = { lhs = Tmp_1 which = Tmp_0 }
			PREV = { change_key = { lhs = Tmp_1 which = PREV } }
			set_key = { lhs = Tmp_1 value = 0 }
			
			# a)*Total knowledge power of learning centers. Sum of all learning_$id$ *
			set_key = { lhs = Tmp_5 which = Tmp_4 }
			PREV = { change_key = { lhs = Tmp_5 which = PREV } }
			set_key = { lhs = Tmp_5 value = 0 }
		}
		else = {
			change_key = { lhs = Tmp_1 which = Tmp_0 }
			change_key = { lhs = Tmp_5 which = Tmp_4 }
		}
	}
}

TN_effect14 = {
	# Save province id of a province with most trade power
	set_key = { lhs = Tmp_8 which = Tmp_7 }
	if = {
		limit = {
			OR = {
				check_key = { lhs = Tmp_1 value = 0.001 }
				check_key = { lhs = Tmp_5 value = 0.001 }
			}
		}
		every_trade_node_member_province = {
			limit = {
				isValidProv = yes
			}
			if = { ### TRADE
				limit = {
					NOT = { province_id = PREV }
				}
				set_key = { lhs = Tmp_8 which = PREV } # Total trade power that comes from a)
			}
			#if = { ### DISPLAY IMPORTANCE FORCING
			#	limit = {
			#		check_key = { lhs = Tmp_0 value = 0.001 }
			#		is_key_equal = { lhs = Tmp_8 which = ID_Prov }
			#	}
			#	add_permanent_province_modifier = {
			#		name = river_notify
			#		duration = -1
			#	}
			#}
			if = { ### TRADE
				limit = {
					check_key = { lhs = Tmp_0 value = 0.001 }
					PREV = { check_key = { lhs = Tmp_1 value = 0.001 } }
				}
				set_key = { lhs = Tmp_2 which = Tmp_0 } # Share of trade power
				if = {
					limit = {
						NOT = { province_id = PREV }
					}
					set_key = { lhs = Tmp_1 which = PREV } # Total trade power that comes from a)
				}
				divide_key = { lhs = Tmp_2 which = Tmp_1 }
				set_key = { lhs = PublicHelper_Tmp1 which = owner } #is total sector trade power
				set_key = { lhs = PublicHelper_Tmp2 which = PublicHelper_Tmp1 } 
				divide_key = {lhs = PublicHelper_Tmp2 which = Tmp_1 } # sector trade power % of node
				#check for trade power inflation across gametime.
				#Adjust localization of CoT province modifiers if adjusting any of the numbers at MEIOUandTaxes1\localisation\SYS-Natural_l_english.yml from line 9 onwards.
				if = {
					limit = {
						OR = {
							AND = {
								has_province_flag = TN_SectorCent #Is the sector trade center
								check_key = { lhs = Tmp_0 value = 15 } #min 15 power
								check_key = { lhs = Tmp_2 value = 0.2 } # 20% of node
								check_key = { lhs = PublicHelper_Tmp1 value = 60 } #min 60 power in sector
								check_key = { lhs = PublicHelper_Tmp2 value = 0.50 } #min 50% sector trade power in node
								owner = {
									has_institution = Global_Trade
								}
							}
						}
					}
					set_key = { lhs = Tmp_3 value = 4 } # Dominant node
				}
				else_if = {
					limit = {
						OR = {
							AND = {
								check_key = { lhs = Tmp_0 value = 5 } # min 5 power
								check_key = { lhs = Tmp_2 value = 0.35 } # 35% of node
							}
							AND = {
								check_key = { lhs = Tmp_0 value = 8 } # min 9 power
								check_key = { lhs = Tmp_2 value = 0.30 } # 30% of node
							}
							AND = {
								check_key = { lhs = Tmp_0 value = 11 } # min 14 power
								check_key = { lhs = Tmp_2 value = 0.25 } # 25% of node
							}
							AND = {
								has_province_flag = TN_SectorCent #Is the sector trade center
								check_key = { lhs = Tmp_0 value = 5 } #min 5 power
								check_key = { lhs = Tmp_2 value = 0.05 } # 5% of node
								check_key = { lhs = PublicHelper_Tmp1 value = 20 } #min 25 power in sector
								check_key = { lhs = PublicHelper_Tmp2 value = 0.25 } #min 25% sector trade power in node
							}
						}
					}
					set_key = { lhs = Tmp_3 value = 3 } # Major node
				}
				else_if = {
					limit = {
						OR = {
							AND = {
								check_key = { lhs = Tmp_0 value = 3.5 } # min 3.5 power
								check_key = { lhs = Tmp_2 value = 0.12 } # 12% of node
							}
							AND = {
								check_key = { lhs = Tmp_0 value = 6 } # min 6 power
								check_key = { lhs = Tmp_2 value = 0.07 } # 7% of node
							}
							is_key_equal = { lhs = Tmp_8 which = ID_Prov }
						}
					}
					set_key = { lhs = Tmp_3 value = 2 } # Important node
				}
				else_if = {
					limit = {
						OR = {
							AND = {
								check_key = { lhs = Tmp_0 value = 2 } # min 1.75 power
								check_key = { lhs = Tmp_2 value = 0.025 } # 2.5% of node
							}
							AND = {
								check_key = { lhs = Tmp_0 value = 1.75 } # min 1.25 power
								check_key = { lhs = Tmp_2 value = 0.035 } # 3.5% of node
							}
							AND = {
								check_key = { lhs = Tmp_0 value = 1.5 } # min 1.25 power
								check_key = { lhs = Tmp_2 value = 0.05 } # 5% of node
							}
							
							AND = {
								check_key = { lhs = Tmp_0 value = 0.5 }
								
								OR = {
									has_province_modifier = trading_post_province
									
									owner = {
										is_colonial_nation = yes
									}
								}
							}
							
							AND = {
								owner = {
									Rights_BGCom3HasGreater = no
									OR = {
										culture_group = andean_group
										culture_group = north_central_tradition_group
									}
								}
								check_key = { lhs = Tmp_0 value = 0.1 }
								check_key = { lhs = RE_Total value = 3 }
								has_province_flag = TN_Natural
							}
						}
					}
					set_key = { lhs = Tmp_3 value = 1 } # Minor node
				}
				else = {
					set_key = { lhs = Tmp_3 value = 0 }
				}
			}
			if = { ### LEARNING
				limit = {
					check_key = { lhs = Tmp_4 value = 0.001 }
					PREV = { check_key = { lhs = Tmp_5 value = 0.001 } }
				}
				set_key = { lhs = Tmp_6 which = Tmp_4 } # Current knowledge output
				if = {
					limit = {
						NOT = { province_id = PREV }
					}
					set_key = { lhs = Tmp_5 which = PREV } # Total knowledge power that comes from a)
				}
				divide_key = { lhs = Tmp_6 which = Tmp_5 }
				
				if = {
					limit = {
						check_key = { lhs = Tmp_4 value = 8 } # min 8 power
						check_key = { lhs = Tmp_6 value = 0.2 } # 20% of node
					}
					set_key = { lhs = Tmp_7 value = 3 } # Major node
				}
				else_if = {
					limit = {
						check_key = { lhs = Tmp_4 value = 4 } # min 4 power
						check_key = { lhs = Tmp_6 value = 0.1 } # 1% of node
					}
					set_key = { lhs = Tmp_7 value = 2 } # Important node
				}
				else_if = {
					limit = {
						check_key = { lhs = Tmp_4 value = 1.0 } # min 1 power
						check_key = { lhs = Tmp_6 value = 0.075 } # 0.75% of node
					}
					set_key = { lhs = Tmp_7 value = 1 } # Minor node
				}
				else = {
					set_key = { lhs = Tmp_7 value = 0 }
				}
			}
		}
	}

	every_trade_node_member_province = {
		limit = {
			isValidProv = yes
		}
		set_key = { lhs = Tmp_0 value = 0 }
		set_key = { lhs = Tmp_1 value = 0 }
		set_key = { lhs = Tmp_2 value = 0 }
		set_key = { lhs = Tmp_4 value = 0 }
		set_key = { lhs = Tmp_5 value = 0 }
		set_key = { lhs = Tmp_6 value = 0 }
		clr_province_flag = TN_COT_M
		clr_province_flag = TN_COT_D
		if = {
			limit = { 
				OR = {
					check_key = { lhs = Tmp_3 value = 0.001 }
					AND = {
						OR = {
							region = east_sahara_region
							region = west_sahara_region
						}
						has_province_flag = TN_Natural
					}
				}
			}
			if = {
				limit = {
					is_key_equal = { lhs = Tmp_3 value = 1 } # minor
				}
				add_permanent_province_modifier = {
					name = TN_Minor
					duration = -1
				}
				remove_province_modifier = TN_Dominant
				remove_province_modifier = TN_Major
				remove_province_modifier = TN_Important
			}
			else_if = {
				limit = {
					is_key_equal = { lhs = Tmp_3 value = 2 } # important
				}
				set_province_flag = TN_COT_M
				add_permanent_province_modifier = {
					name = TN_Important
					duration = -1
				}
				remove_province_modifier = TN_Dominant
				remove_province_modifier = TN_Major
				remove_province_modifier = TN_Minor
				
			}
			else_if = {
				limit = {
					is_key_equal = { lhs = Tmp_3 value = 3 } # major
				}
				set_province_flag = TN_COT_M
				set_province_flag = TN_COT_D
				add_permanent_province_modifier = {
					name = TN_Major
					duration = -1
				}
				remove_province_modifier = TN_Dominant
				remove_province_modifier = TN_Important
				remove_province_modifier = TN_Minor
				
			}
			else_if = {
				limit = {
					is_key_equal = { lhs = Tmp_3 value = 4 } # dominant
				}
				set_province_flag = TN_COT_M
				set_province_flag = TN_COT_D
				add_permanent_province_modifier = {
					name = TN_Dominant
					duration = -1
				}
				remove_province_modifier = TN_Major
				remove_province_modifier = TN_Important
				remove_province_modifier = TN_Minor
			}
			else_if = {
				limit = {
					OR = {
						region = east_sahara_region
						region = west_sahara_region
					}
					has_province_flag = TN_Natural
				}
				add_permanent_province_modifier = {
					name = TN_Minor
					duration = -1
				}
				remove_province_modifier = TN_Dominant
				remove_province_modifier = TN_Major
				remove_province_modifier = TN_Important
			}
		}
		else = {
			remove_province_modifier = TN_Dominant
			remove_province_modifier = TN_Major
			remove_province_modifier = TN_Important
			remove_province_modifier = TN_Minor
			
		}
		if = {
			limit = {
				OR = {
					has_province_modifier = TN_Minor # Sahara
					has_province_modifier = TN_Important # Sahara
					has_province_modifier = TN_Major # Sahara
					has_province_modifier = TN_Dominant # Sahara
				}
			}
			set_province_flag = TN_COT
		}
		else = {
			clr_province_flag = TN_COT
		}
		if = {
			limit = { 
				check_key = { lhs = Tmp_7 value = 0.001 }
			}
			if = {
				limit = {
					is_key_equal = { lhs = Tmp_7 value = 1 } # minor
				}
				add_permanent_province_modifier = {
					name = LN_Minor
					duration = -1
				}
				remove_province_modifier = LN_Major
				remove_province_modifier = LN_Important
			}
			else_if = {
				limit = {
					is_key_equal = { lhs = Tmp_7 value = 2 } # important
				}
				add_permanent_province_modifier = {
					name = LN_Important
					duration = -1
				}
				remove_province_modifier = LN_Major
				remove_province_modifier = LN_Minor
				
			}
			else_if = {
				limit = {
					is_key_equal = { lhs = Tmp_7 value = 3 } # major
				}
				add_permanent_province_modifier = {
					name = LN_Major
					duration = -1
				}
				remove_province_modifier = LN_Important
				remove_province_modifier = LN_Minor
				
			}
		}
		else = {
			remove_province_modifier = LN_Major
			remove_province_modifier = LN_Important
			remove_province_modifier = LN_Minor
			
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_7 value = 1 }
			}
			set_province_flag = LN_COL
		}
		else = {
			clr_province_flag = LN_COL
		}

		set_key = { lhs = Tmp_3 value = 0 }
		set_key = { lhs = Tmp_7 value = 0 }
	}
}
TN_effect15 = {
	event_target:Plague = {
		if = {
			limit = {
				NOT = { has_province_flag = PlagueTN$param1$ }
			}
			every_trade_node_member_province = {
				limit = {
					has_province_flag = TN_COT_M
					has_province_flag = TN_Port
					has_province_flag = PlagueCand$param1$
					event_target:PlagueOwner = { has_discovered = PREV }
					NOT = { check_key = { lhs = Plague_Resistance$param1$ value = 51 } }
					OR = {
						has_merchant = event_target:PlagueOwner

						has_trade_modifier = { who = event_target:PlagueOwner key = trade_capital }
					}
				}
				random_list = {
					20 = {
						PREV = {
							set_province_flag = PlagueTN$param1$
						}
						Plague_SpreadScope = { Type=$param1$ }
						
					}
					80 = {
						PREV = {
							set_province_flag = PlagueFound$param1$
						}
					}
				}
			}
			if = {
				limit = {
					NOT = { has_province_flag = PlagueFound$param1$ }
				}
				set_province_flag = PlagueTN$param1$
			}
			else = {
				clr_province_flag = PlagueFound$param1$
			}
		}
		if = {
			limit = {
				NOT = { has_province_flag = PlagueTNM$param1$ }
			}
			tradenode_mult_$id$ = {
				save_event_target_as = PlagueReceiver
				owner = { save_event_target_as = OwnerReceiver }
				if = {
					limit = {
						has_province_flag = TN_COT_M
						has_province_flag = TN_Port
						has_province_flag = PlagueCand$param1$
						event_target:PlagueOwner = { has_discovered = PREV }
						NOT = { same_trade_node_as = PREV } 
						NOT = { check_key = { lhs = Plague_Resistance$param1$ value = 60 } }
						
						OR = {
						
							AND = { # checks if owner of infected province has merchant or is capital in both spreader and receiver provinces
								OR = {
									event_target:Plague = { has_merchant = event_target:PlagueOwner } # if owner has merchant in infected province
									event_target:PlagueOwner = { # if infected province is home node of infected owner
										capital_scope = {
											same_trade_node_as = event_target:Plague
										}
									}
								}
								OR = {
									has_merchant = event_target:PlagueOwner # reciever province
									owner = {
										capital_scope = { # if receiver province is home node of infected owner
											same_trade_node_as = event_target:Plague
									   }
									} 
								}
							}
							
							AND = { # checks if owner of receiver province has merchant or is capital in both spreader and receiver provinces
								OR = { 
									event_target:Plague = { has_merchant = event_target:OwnerReceiver }  # infected province
									event_target:PlagueOwner = { # if receiver province is home node of plague owner
										capital_scope = {
											same_trade_node_as = event_target:PlagueReceiver
										}
									}
								}
								OR = {
									has_merchant = event_target:OwnerReceiver # reciever province
									owner = { #if receiver province is home node of receiver owner
										capital_scope = {
											same_trade_node_as = event_target:PlagueReceiver
										}
									} 
								}
							}
						}
						
					}
					if = {
						limit = {
							NOT = { 
								AND = { # checks if owner of receiver province has merchant or is capital in both spreader and receiver provinces
									OR = { 
										event_target:Plague = { has_merchant = event_target:OwnerReceiver }  # infected province
										event_target:PlagueOwner = { # if receiver province is home node of plague owner
											capital_scope = {
												same_trade_node_as = event_target:PlagueReceiver
											}
										}
									}
									OR = {
										has_merchant = event_target:OwnerReceiver # reciever province
										owner = { #if receiver province is home node of receiver owner
											capital_scope = {
												same_trade_node_as = event_target:PlagueReceiver
											}
										} 
									}
								}
							}
						}
						random_list = {
							2 = {
								PREV = {
									set_province_flag = PlagueTNM$param1$
								}
								Plague_SpreadScope = { Type=$param1$ }
							}
							90 = {
								PREV = {
									set_province_flag = PlagueFound$param1$
								}
							}
						}
					}
					else = { 
						random_list = {
							10 = {
								PREV = {
									set_province_flag = PlagueTNM$param1$
								}
								Plague_SpreadScope = { Type=$param1$ }
							}
							90 = {
								PREV = {
									set_province_flag = PlagueFound$param1$
								}
							}
						}
					}
				}
			}
			if = {
				limit = {
					NOT = { has_province_flag = PlagueFound$param1$ }
				}
				set_province_flag = PlagueTNM$param1$
			}
			else = {
				clr_province_flag = PlagueFound$param1$
			}
		}	
		else = {
			set_province_flag = PlagueTNM$param1$
		}
	}
}
TN_effect16 = {
	set_key = { lhs = Tmp_0 value = 0 }
	every_trade_node_member_province = {
		limit = {
			has_province_flag = Post
		}
		if = {
			limit = {
				NOT = { province_id = PREV }
			}
			set_key = { lhs = Tmp_0 value = 0 }
		}
		if = {
			limit = { is_key_equal = { lhs = Post_S0Owner which = event_target:PostCountry } }
			change_key = { lhs = Tmp_0 which = Post_S0TradePower }
		}
		else_if = {
			limit = { is_key_equal = { lhs = Post_S1Owner which = event_target:PostCountry } }
			change_key = { lhs = Tmp_0 which = Post_S1TradePower }
		}
		else_if = {
			limit = { is_key_equal = { lhs = Post_S2Owner which = event_target:PostCountry } }
			change_key = { lhs = Tmp_0 which = Post_S2TradePower }
		}
		else_if = {
			limit = { is_key_equal = { lhs = Post_S3Owner which = event_target:PostCountry } }
			change_key = { lhs = Tmp_0 which = Post_S3TradePower }
		}
		else_if = {
			limit = { is_key_equal = { lhs = Post_S4Owner which = event_target:PostCountry } }
			change_key = { lhs = Tmp_0 which = Post_S4TradePower }
		}
		if = {
			limit = {
				NOT = { province_id = PREV }
			}
			PREV = { change_key = { lhs = Tmp_0 which = PREV } }
		}
	}
	if = {
		limit = {
			check_key = { lhs = Tmp_0 value = 0.1 }
		}
		PREV = { change_key = { lhs = Post_Merchants value = 0.5 } }
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 204.8 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 204.8
				key = Post_TP128
			}
			subtract_key = { lhs = Tmp_0 value = 204.8 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 102.4 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 102.4
				key = Post_TP64
			}
			subtract_key = { lhs = Tmp_0 value = 102.4 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 51.2 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 51.2
				key = Post_TP32
			}
			subtract_key = { lhs = Tmp_0 value = 51.2 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 25.6 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 25.6
				key = Post_TP16
			}
			subtract_key = { lhs = Tmp_0 value = 25.6 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 12.8 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 12.8
				key = Post_TP8
			}
			subtract_key = { lhs = Tmp_0 value = 12.8 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 6.4 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 6.4
				key = Post_TP4
			}
			subtract_key = { lhs = Tmp_0 value = 6.4 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 3.2 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 3.2
				key = Post_TP2
			}
			subtract_key = { lhs = Tmp_0 value = 3.2 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 1.6 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 1.6
				key = Post_TP1
			}
			subtract_key = { lhs = Tmp_0 value = 1.6 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 0.8 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 0.8
				key = Post_TP1
			}
			subtract_key = { lhs = Tmp_0 value = 0.8 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 0.4 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 0.4
				key = Post_TP1
			}
			subtract_key = { lhs = Tmp_0 value = 0.4 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 0.2 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 0.2
				key = Post_TP1
			}
			subtract_key = { lhs = Tmp_0 value = 0.2 }
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 0.1 }
			}
			add_trade_modifier = {
				who = PREV
				duration = 360
				power = 0.1
				key = Post_TP1
			}
			subtract_key = { lhs = Tmp_0 value = 0.1 }
		}
	}
}
cont_effect1 = {
	if = {
		limit = {
			isValidProv = yes
		}
		set_key = { lhs = Tmp_0 which = Class_Urban }
	}
	else = {
		set_key = { lhs = Tmp_0 value = 0 }
	}
	cont_$id$ = {
		limit = {
			isValidProv = yes
			NOT = { province_id = PREV }
		}
		set_key = { lhs = Tmp_0 which = Class_Urban }
		if = {
			limit = {
				check_key = { lhs = Tmp_0 which = PREV }
			}
			PREV = {
				set_key = { lhs = Tmp_0 which = PREV }
			}
		}
	}
}
cont_effect2 = {
	if = {
		limit = {
			check_key = { lhs = Tmp_0 value = 100 } # 100k to be Continent
		}
		if = {
			limit = {
				is_key_equal = { lhs = Tmp_0 which = Class_Urban }
			}
			if = {
				limit = {
					isValidProv = yes
					NOT = { check_key = { lhs = Tmp_1 value = 4 } }
				}
				set_key = { lhs = Tmp_1 value = 3 }
			}
		}
		else = {
			cont_$id$ = {
				limit = {
					isValidProv = yes
					NOT = { province_id = PREV }
					is_key_equal = { lhs = Tmp_0 which = PREV }
					NOT = { check_key = { lhs = Tmp_1 value = 4 } }
				}
				set_key = { lhs = Tmp_1 value = 3 }
			}
		}
	}
}
sr_effect5 = {
	if = {
		limit = {
			isValidProv = yes
		}
		set_key = { lhs = Tmp_0 which = Class_Urban }
	}
	else = {
		set_key = { lhs = Tmp_0 value = 0 }
	}
	sr_$id$ = {
		limit = {
			isValidProv = yes
			NOT = { province_id = PREV }
		}
		set_key = { lhs = Tmp_0 which = Class_Urban }
		if = {
			limit = {
				check_key = { lhs = Tmp_0 which = PREV }
			}
			PREV = {
				set_key = { lhs = Tmp_0 which = PREV }
			}
		}
	}
}
sr_effect6 = {
	if = {
		limit = {
			check_key = { lhs = Tmp_0 value = 50 } # 50k to be Superregion
		}
		if = {
			limit = {
				is_key_equal = { lhs = Tmp_0 which = Class_Urban }
			}
			if = {
				limit = {
					isValidProv = yes
					NOT = { check_key = { lhs = Tmp_1 value = 3 } }
				}
				set_key = { lhs = Tmp_1 value = 2 }
			}
		}
		else = {
			sr_$id$ = {
				limit = {
					isValidProv = yes
					NOT = { province_id = PREV }
					is_key_equal = { lhs = Tmp_0 which = PREV }
					NOT = { check_key = { lhs = Tmp_1 value = 3 } }
				}
				set_key = { lhs = Tmp_1 value = 2 }
			}
		}
	}
}
CityCenters = {
	if = {
		limit = {
			isValidProv = yes
			check_key = { lhs = Class_Urban value = 1 } # 1k to be World
		}
		set_key = { lhs = Tmp_0 which = Class_Urban }
	}
	else = {
		set_key = { lhs = Tmp_0 value = 0.9 }
	}
	set_key = { lhs = Tmp_1 value = 0 }
	every_province = {
		limit = {
			isValidProv = yes
			NOT = { province_id = PREV }
		}
		set_key = { lhs = Tmp_1 value = 0 }
		set_key = { lhs = Tmp_0 which = Class_Urban }
		if = {
			limit = {
				check_key = { lhs = Tmp_0 which = PREV }
			}
			PREV = {
				set_key = { lhs = Tmp_0 which = PREV }
			}
		}
	}
	if = {
		limit = {
			check_key = { lhs = Tmp_0 value = 1 } # 1k to be World
		}
		if = {
			limit = {
				is_key_equal = { lhs = Tmp_0 which = Class_Urban }
			}
			set_key = { lhs = Tmp_1 value = 4 }
		}
		else = {
			every_province = {
				limit = {
					isValidProv = yes
					NOT = { province_id = PREV }
					is_key_equal = { lhs = Tmp_0 which = PREV }
				}
				set_key = { lhs = Tmp_1 value = 4 }
			}
		}
	}
	set_key = { lhs = Tmp_0 value = 0 }
	contgroup = {
		cont_effect = {
			effect = cont_effect1
		}
		cont_effect = {
			effect = cont_effect2
		}
	}
	srgroup = {
		sr_effect = {
			effect = sr_effect5
		}
		sr_effect = {
			effect = sr_effect6
		}
	}
	regiongroup = {
		if = {
			limit = {
				isValidProv = yes
			}
			set_key = { lhs = Tmp_0 which = Class_Urban }
		}
		else = {
			set_key = { lhs = Tmp_0 value = 0 }
		}
		region = {
			limit = {
				isValidProv = yes
				NOT = { province_id = PREV }
			}
			set_key = { lhs = Tmp_0 which = Class_Urban }
			if = {
				limit = {
					check_key = { lhs = Tmp_0 which = PREV }
				}
				PREV = {
					set_key = { lhs = Tmp_0 which = PREV }
				}
			}
		}
		if = {
			limit = {
				check_key = { lhs = Tmp_0 value = 10 } # 10k to be region
			}
			if = {
				limit = {
					is_key_equal = { lhs = Tmp_0 which = Class_Urban }
				}
				if = {
					limit = {
						isValidProv = yes
						NOT = { check_key = { lhs = Tmp_1 value = 2 } }
					}
					set_key = { lhs = Tmp_1 value = 1 }
				}
			}
			else = {
				region = {
					limit = {
						isValidProv = yes
						NOT = { province_id = PREV }
						is_key_equal = { lhs = Tmp_0 which = PREV }
						NOT = { check_key = { lhs = Tmp_1 value = 2 } }
					}
					set_key = { lhs = Tmp_1 value = 1 }
				}
			}
		}
	}
	every_province = {
		limit = {
			isValidProv = yes
		}
		if = {
			limit = {
				is_key_equal = { lhs = Tmp_1 value = 1 } # region
			}
			add_permanent_province_modifier = {
				name = preeminent_region_city
				duration = -1
			}
			remove_province_modifier = preeminent_world_city
			remove_province_modifier = preeminent_continent_city
			remove_province_modifier = preeminent_sub_continent_city
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Tmp_1 value = 2 } # subcontinent
			}
			add_permanent_province_modifier = {
				name = preeminent_sub_continent_city
				duration = -1
			}
			remove_province_modifier = preeminent_world_city
			remove_province_modifier = preeminent_continent_city
			remove_province_modifier = preeminent_region_city
			
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Tmp_1 value = 3 } # continent
			}
			add_permanent_province_modifier = {
				name = preeminent_continent_city
				duration = -1
			}
			remove_province_modifier = preeminent_world_city
			remove_province_modifier = preeminent_sub_continent_city
			remove_province_modifier = preeminent_region_city
			
		}
		else_if = {
			limit = {
				is_key_equal = { lhs = Tmp_1 value = 4 } # world
			}
			add_permanent_province_modifier = {
				name = preeminent_world_city
				duration = -1
			}
			remove_province_modifier = preeminent_continent_city
			remove_province_modifier = preeminent_sub_continent_city
			remove_province_modifier = preeminent_region_city
			
		}
		else = {
			remove_province_modifier = preeminent_region_city
			remove_province_modifier = preeminent_sub_continent_city
			remove_province_modifier = preeminent_continent_city
			remove_province_modifier = preeminent_world_city
		}
	}
}
TNCenters = {
	tradenode_centers = {
		every_trade_node_member_country = {
			set_key = { lhs = PublicHelper_Tmp1 value = 0 }
		}
		TN_effect13 = yes
		TN_effect14 = yes
	}
}
PNCenters = {
	tradenode_centers = {
		TN_effect17 = yes
		TN_effect18 = yes
	}
}
NaturalFeatures = {
	every_province = {
		limit = {
			isValidEmpty = yes
		}
		NaturalFeaturesHelper = yes
	}
}
NaturalFeaturesHelper = {
	if = {
		limit = {
			OR = {
				has_province_modifier = oasis_route
				has_province_flag = oasis_route
			}
		}
		set_province_flag = TN_Oasis
		remove_province_modifier = oasis_route
		clr_province_flag = oasis_route
	}
	remove_province_modifier = Natural_Golden
	remove_province_modifier = Natural_Laguna
	remove_province_modifier = Natural_Canal
	remove_province_modifier = Natural_Silk
	remove_province_modifier = Natural_Oasis
	remove_province_modifier = Natural_Estuary
	remove_province_modifier = Natural_Island
	remove_province_modifier = Natural_Bay
	remove_province_modifier = Natural_Lake
	remove_province_modifier = Natural_Port
	remove_province_modifier = Natural_River
	remove_province_modifier = Natural_RiverJoint
	if = {
		limit = {
			OR = {
				has_province_flag = TN_Natural_Minor
				has_province_flag = TN_Natural_Important
				has_province_flag = TN_Natural_Major
				has_province_flag = TN_Harbour_Minor
				has_province_flag = TN_Harbour_Important
				has_province_flag = TN_Harbour_Major
				has_province_flag = TN_Canal
			}
		}
		set_province_flag = TN_Natural
		if = {
			limit = {
				has_province_flag = TN_Golden
			}
			add_permanent_province_modifier = { name = Natural_Golden duration = -1 }
		}
		else_if = {
			limit = {
				has_province_flag = TN_Laguna
			}
			add_permanent_province_modifier = { name = Natural_Laguna duration = -1 }
		}
		else_if = {
			limit = {
				has_province_flag = TN_Canal
			}
			add_permanent_province_modifier = { name = Natural_Canal duration = -1 }
		}
		else_if = {
			limit = {
				has_province_flag = TN_Delta
			}
			add_permanent_province_modifier = { name = Natural_Delta duration = -1 }
		}
		else_if = {
			limit = {
				OR = {
					has_province_flag = TN_Silk
					has_province_flag = TN_Tea
				}
				has_port = no
			}
			add_permanent_province_modifier = { name = Natural_Silk duration = -1 }
		}
		else_if = {
			limit = {
				has_province_flag = TN_Oasis
			}
			add_permanent_province_modifier = { name = Natural_Oasis duration = -1 }
		}
		else_if = {
			limit = {
				has_province_flag = TN_Estuary
			}
			add_permanent_province_modifier = { name = Natural_Estuary duration = -1 }
		}
		else_if = {
			limit = {
				has_province_flag = TN_Island
			}
			remove_province_modifier = Natural_Port
			remove_province_modifier = Natural_Bay
			if = {
				limit = {
					has_province_flag = TN_Remote
				}
				add_permanent_province_modifier = { name = Natural_IslandRemote duration = -1 }
			}
			else = {
				add_permanent_province_modifier = { name = Natural_Island duration = -1 }
			}
		}
		else_if = {
			limit = {
				has_province_flag = TN_Bay
			}
			add_permanent_province_modifier = { name = Natural_Bay duration = -1 }
		}
		else_if = {
			limit = {
				has_province_flag = TN_Lake
			}
			add_permanent_province_modifier = { name = Natural_Lake duration = -1 }
		}
		else_if = {
			limit = {
				has_port = yes
			}
			if = {
				limit = {
					check_key = { lhs = TN_River value = 1 }
					NOT = { has_province_flag = TN_Harbour_Minor }
					NOT = { has_province_flag = TN_Harbour_Important }
					NOT = { has_province_flag = TN_Harbour_Major }
				}
				add_permanent_province_modifier = { name = Natural_Estuary duration = -1 }
				set_province_flag = TN_Estuary
			}
			else_if = {
				limit = {
					has_province_flag = TN_Harbour_Major
				}
				add_permanent_province_modifier = { name = Natural_Bay duration = -1 }
			}
			else_if = {
				limit = {
					NOT = { has_province_modifier = Natural_IslandRemote }
				}
				add_permanent_province_modifier = { name = Natural_Port duration = -1 }
			}
		}
		else = {
			if = {
				limit = {
					OR = {
						has_province_flag = TN_RiverJoint
						has_province_flag = TN_RiverNatJoint
					}
				}
				add_permanent_province_modifier = { name = Natural_RiverJoint duration = -1 }
			}
			else_if = {
				limit = {
					OR = {
						check_key = { lhs = TN_River value = 1 }
						has_province_flag = TN_RiverNat
					}
				}
				add_permanent_province_modifier = { name = Natural_River duration = -1 }
			}
			else = {
				add_permanent_province_modifier = { name = Natural_Inland duration = -1 }
			}
		}
	}
	else_if = {
		limit = {
			OR = {
				island = yes
				is_island = yes
			}
			has_port = yes
			OR = {
				NOT = { region = philippines_region }
				province_id = 655
				province_id = 2586
			}
			NOT = { area = lesser_sunda_islands_area }
			NOT = { has_province_modifier = Natural_Island }
			NOT = { province_id = 1085 }
			NOT = { province_id = 1236 }
			NOT = { province_id = 502 }
			NOT = { province_id = 982 }
			NOT = { province_id = 983 }
			NOT = { province_id = 2752 }
			NOT = { province_id = 2065 }
			NOT = { province_id = 650 }
			NOT = { province_id = 1242 }
			NOT = { province_id = 1239 }
			NOT = { province_id = 1179 }
			NOT = { province_id = 890 }
			NOT = { region = cascadia_region }
			NOT = { region = papua_region }
		}
		remove_province_modifier = Natural_Port
		remove_province_modifier = Natural_Bay
		set_province_flag = TN_Natural_Minor
		set_province_flag = TN_Natural
		if = {
			limit = {
				continent = oceania
			}
			add_permanent_province_modifier = { name = Natural_IslandRemote duration = -1 }
			set_province_flag = TN_IslandRemote
		}
		else = {
			add_permanent_province_modifier = { name = Natural_Island duration = -1 }
			set_province_flag = TN_Island
		}
	}
	remove_province_modifier = POP_NaturalFeature
}

TN_effect17 = {
	set_key = { lhs = Tmp_1 value = 0 }# Total production power
	every_trade_node_member_province = {
		limit = {
			isValidProv = yes
		}
		set_key = { lhs = Tmp_0 value = 0 }
		set_key = { lhs = Tmp_3 value = 0 }
		
		set_key = { lhs = Tmp_2 which = TN_ProvSply21 }
		multiply_key = { lhs = Tmp_2 value = 6 }
		change_key = { lhs = Tmp_0 which = Tmp_2 }
		set_key = { lhs = Tmp_2 which = TN_ProvSply22 }
		multiply_key = { lhs = Tmp_2 value = 6 }
		change_key = { lhs = Tmp_0 which = Tmp_2 }
		set_key = { lhs = Tmp_2 which = TN_ProvSply23 }
		multiply_key = { lhs = Tmp_2 value = 6 }
		change_key = { lhs = Tmp_0 which = Tmp_2 }
		set_key = { lhs = Tmp_2 which = TN_ProvSply24 }
		multiply_key = { lhs = Tmp_2 value = 6 }
		change_key = { lhs = Tmp_0 which = Tmp_2 }
		set_key = { lhs = Tmp_2 which = TN_ProvSply25 }
		multiply_key = { lhs = Tmp_2 value = 18 }
		change_key = { lhs = Tmp_0 which = Tmp_2 }
		if = {
			limit = {
				NOT = {
					province_id = PREV
				}
			}
			set_key = { lhs = Tmp_1 which = Tmp_0 }
			PREV = {
				change_key = { lhs = Tmp_1 which = PREV }
			}
			set_key = { lhs = Tmp_1 value = 0 }
		}
		else = {
			change_key = { lhs = Tmp_1 which = Tmp_0 }
		}
	}
}

TN_effect18 = {
	if = {
		limit = {
			check_key = { lhs = Tmp_1 value = 0.001 }
		}
		every_trade_node_member_province = {
			limit = {
				isValidProv = yes
			}
			if = { ### PRODUCTION
				limit = {
					check_key = { lhs = Tmp_0 value = 0.001 }
					PREV = { check_key = { lhs = Tmp_1 value = 0.001 } }
				}
				set_key = { lhs = Tmp_2 which = Tmp_0 } # Share of trade power
				if = {
					limit = {
						NOT = { province_id = PREV }
					}
					set_key = { lhs = Tmp_1 which = PREV } # Total trade power that comes from a)
				}
				divide_key = { lhs = Tmp_2 which = Tmp_1 }
				
				if = {
					limit = {
						AND = {
							check_key = { lhs = Tmp_0 value = 80 } # min 6 power
							check_key = { lhs = Tmp_2 value = 0.30 } # 35% of node
						}
					}
					set_key = { lhs = Tmp_3 value = 4 } # Dominant node
				}
				else_if = {
					limit = {
						AND = {
							check_key = { lhs = Tmp_0 value = 40 } # min 50 power
							check_key = { lhs = Tmp_2 value = 0.16 } # 20% of node
						}
					}
					set_key = { lhs = Tmp_3 value = 3 } # Major node
				}
				else_if = {
					limit = {
						AND = {
							check_key = { lhs = Tmp_0 value = 15 } # min 15 power
							check_key = { lhs = Tmp_2 value = 0.08 } # 10% of node
						}
					}
					set_key = { lhs = Tmp_3 value = 2 } # Important node
				}
				else_if = {
					limit = {
						AND = {
							check_key = { lhs = Tmp_0 value = 7.5 } # min 7.5 power
							check_key = { lhs = Tmp_2 value = 0.04 } # 5% of node
						}
					}
					set_key = { lhs = Tmp_3 value = 1 } # Minor node
				}
				else = {
					set_key = { lhs = Tmp_3 value = 0 }
				}
			}
		}
	}
	every_trade_node_member_province = {
		limit = {
			isValidProv = yes
		}
		set_key = { lhs = Tmp_0 value = 0 }
		set_key = { lhs = Tmp_1 value = 0 }
		set_key = { lhs = Tmp_2 value = 0 }
		if = {
			limit = { 
				check_key = { lhs = Tmp_3 value = 0.001 }
			}
			if = {
				limit = {
					is_key_equal = { lhs = Tmp_3 value = 1 } # minor
				}
				add_permanent_province_modifier = {
					name = PN_Minor
					duration = -1
				}
				remove_province_modifier = PN_Dominant
				remove_province_modifier = PN_Major
				remove_province_modifier = PN_Important
			}
			else_if = {
				limit = {
					is_key_equal = { lhs = Tmp_3 value = 2 } # important
				}
				add_permanent_province_modifier = {
					name = PN_Important
					duration = -1
				}
				remove_province_modifier = PN_Dominant
				remove_province_modifier = PN_Major
				remove_province_modifier = PN_Minor
				
			}
			else_if = {
				limit = {
					is_key_equal = { lhs = Tmp_3 value = 3 } # major
				}
				add_permanent_province_modifier = {
					name = PN_Major
					duration = -1
				}
				remove_province_modifier = PN_Dominant
				remove_province_modifier = PN_Important
				remove_province_modifier = PN_Minor
				
			}
			else_if = {
				limit = {
					is_key_equal = { lhs = Tmp_3 value = 4 } # dominant
				}
				add_permanent_province_modifier = {
					name = PN_Dominant
					duration = -1
				}
				remove_province_modifier = PN_Major
				remove_province_modifier = PN_Important
				remove_province_modifier = PN_Minor
			}
		}
		else = {
			remove_province_modifier = PN_Dominant
			remove_province_modifier = PN_Major
			remove_province_modifier = PN_Important
			remove_province_modifier = PN_Minor
			
		}

		set_key = { lhs = Tmp_3 value = 0 }
	}
}
TN_effect19 = {
	every_trade_node_member_province = {
		limit = {
			isValidProv = yes
		}
		change_key = { lhs = Modi_CommerceNatural value = 0.30 }
	}
}
TN_effect20 = {
	# TN_effect20 continues TN_effect11
	tradenode_mult_$id$ = { # Find a sector that you can trade with. This province group is all the provinces 
							# belonging to the adjacent nodes of $id$.							 
		limit = {
			isValidProv = yes
			OR = {
				has_province_flag = TN_SectorCent
				has_province_flag = SMM_SectorCent
				has_province_flag = TN_SectorCentNoTC
			}

			check_key = { lhs = TN_SectorScore value = -1 }
			
			NOT = { has_province_flag = TN_SectorCentReachWithin }
			
			PREV = { trade_range = PREV }
			owner = {
				event_target:ProvNew = {
					knows_country = PREV
				}
			}
			owner = {
				OR = {
					transfers_trade_power_to = event_target:ProvNew
					event_target:ProvNew = { transfers_trade_power_to = PREV }
					AND = {
						OR = {
							has_global_flag = POP_Sim
							NOT = { war_with = event_target:ProvNew }
						}
						NOT = { trade_embargoing = event_target:ProvNew }
						NOT = { trade_embargo_by = event_target:ProvNew }
						has_opinion = { who = event_target:ProvNew value = -150 }
						reverse_has_opinion = { who = event_target:ProvNew value = -150 }
					}
				}
			}
			
			OR = {
				has_province_flag = TN_COT_M
				has_global_flag = Is_TN_Major
				has_global_flag = Is_TN_Dominant
				has_province_flag = TradePost@event_target:ProvNew
				event_target:ProvNew = {
					NOT = { num_of_cities = 10 }
					any_owned_province  = {
						same_trade_node_as = PREV_PREV
						has_province_flag = TN_SectorCent
					}
				}
				AND = {
					event_target:ProvNew = { num_of_cities = 10 }
					any_trade_node_member_province = {
						owned_by = event_target:ProvNew
						has_province_flag = TN_SectorCent
					}
				}
			}

			#OR = {
			#	has_trade_modifier = { who = event_target:ProvNew key = trade_capital }
			#	PREV = {
			#		has_trade_modifier = { who = event_target:ProvNew key = trade_capital }
			#	}
			#}			
		}
		if = {
			limit = { # Check if that sector also can spread trude further  Can keep spreading only if both have sea access.
				OR = {
					owned_by = PREV
					owner = {
						is_subject_of = event_target:ProvNew
						is_subject_other_than_tributary_trigger = yes
					}			
				}
				OR = {
					has_global_flag = Is_TN_Dominant
					has_global_flag = Is_TN_Major					
				}
				OR = {
					AND = {
						has_province_flag = HasSeaAccess
						event_target:Prov = { 
							OR = {
								has_province_flag = HasSeaAccess
								has_province_flag = HasRiverSeaAccess
								has_province_flag = HasRiverSeaBAccess
							}
						}
					}
					AND = {
						event_target:Prov = { has_province_flag = HasSeaAccess }
						OR = {
							has_province_flag = HasSeaAccess
							has_province_flag = HasRiverSeaAccess
							has_province_flag = HasRiverSeaBAccess
						}
					}
					AND = {
						has_province_flag = HasSilkAccess
						event_target:Prov = { has_province_flag = HasSilkAccess }
					}
					AND = {
						has_province_flag = HasRiverSeaAccess
						event_target:Prov = { has_province_flag = HasRiverSeaAccess }
					}
					AND = {
						has_province_flag = HasRiverSeaBAccess
						event_target:Prov = { has_province_flag = HasRiverSeaBAccess }
					}
				}
			}
			set_province_flag = TN_SectorCentReachSpread
		}
		else_if = {
			limit = {
				has_province_flag = TradePost@event_target:ProvNew
				OR = {
					AND = {
						has_province_flag = HasSeaAccess
						event_target:Prov = { 
							OR = {
								has_province_flag = HasSeaAccess
								has_province_flag = HasRiverSeaAccess
								has_province_flag = HasRiverSeaBAccess
							}
						}
					}
					AND = {
						event_target:Prov = { has_province_flag = HasSeaAccess }
						OR = {
							has_province_flag = HasSeaAccess
							has_province_flag = HasRiverSeaAccess
							has_province_flag = HasRiverSeaBAccess
						}
					}
					AND = {
						has_province_flag = HasSilkAccess
						event_target:Prov = { has_province_flag = HasSilkAccess }
					}
					AND = {
						has_province_flag = HasRiverSeaAccess
						event_target:Prov = { has_province_flag = HasRiverSeaAccess }
					}
					AND = {
						has_province_flag = HasRiverSeaBAccess
						event_target:Prov = { has_province_flag = HasRiverSeaBAccess }
					}
				}
			}
			set_global_flag = HasTradePost			
		}
		set_province_flag = TN_SectorCentReachWithin
		
			# Add +1 to the distance connection
		set_key = { lhs = Public_Tmp1 which = PREV }
		change_key = { lhs = Public_Tmp1 value = 1 }

		if = {
			limit = {
				NOT = { owned_by = PREV }
			}
			change_key = { lhs = Public_Tmp1 value = 0.5 } 
		}		
	}
}
TN_effect21 = {
	# Find if it is connected

	set_province_flag = TN_SectorCentReachWithin
    save_event_target_as = DistanceCalcTarget
    
    tradenode_mult_$id$ = {      
        limit = {
            has_province_flag = TN_SectorCent
            OR = {
                owned_by = PREV
                has_province_flag = TradePost@event_target:ProvNew
				owner = {
					is_colonial_nation_of = event_target:ProvNew
				}
            }
        }
		# Add +1 to the distance connection
        PREV = {
            set_key = { lhs = Public_Tmp1 which = PREV }
            change_key = { lhs = Public_Tmp1 value = 1 }
        }
        
        owner = {
            every_owned_province = {
                limit = {
                    has_province_flag = TN_SectorCent                            
                    NOT = { check_key = { lhs = Public_Tmp1 which = event_target:DistanceCalcTarget } } # Shorter distance    
                }
                set_province_flag = jumped_success
            }
        }         
    }
    
    if = {
        limit = {
            NOT = { check_key = { lhs = Public_Tmp1 value = 1 } }
        }
        set_key = { lhs = Public_Tmp1 value = 2 }
    }
}
TN_effect22 = { # Connect, jump and spread. Dominants
	# Find if it is connected
	tradenode_mult_$id$ = {
		limit = {
			isValidProv = yes
			OR = {
				has_province_flag = TN_SectorCent
				has_province_flag = SMM_SectorCent
				has_province_flag = TN_SectorCentNoTC
			}
			NOT = { has_province_flag = TN_SectorCentReachWithin }
			has_province_flag = HasSeaAccess
			check_key = { lhs = TN_SectorScore value = -1 }
			PREV = { trade_range = PREV }
			owner = {
				event_target:ProvNew = {
					knows_country = PREV
				}
			}

			OR = {
				OR = {
					owned_by = event_target:ProvNew
					owner = {
						is_colonial_nation_of = event_target:ProvNew
						capital_scope = {
							same_trade_node_as = PREV_PREV
						}
					} # This is the node where the capital of the Colonial Nation exists.
				}

				AND = {
					has_province_flag = TN_COT_D
					
					owner = {
						OR = {
							transfers_trade_power_to = event_target:ProvNew
							event_target:ProvNew = { transfers_trade_power_to = PREV }
							AND = {
								OR = {
									has_global_flag = POP_Sim
									NOT = { war_with = event_target:ProvNew }
								}
								NOT = { trade_embargoing = event_target:ProvNew }
								NOT = { trade_embargo_by = event_target:ProvNew }
								has_opinion = { who = event_target:ProvNew value = -150 }
								reverse_has_opinion = { who = event_target:ProvNew value = -150 }
							}
						}
					}							
				}
			}
		}

		set_province_flag = TN_SectorCentReachWithin
		set_key = { lhs = Public_Tmp1 which = PREV }
		change_key = { lhs = Public_Tmp1 value = 1 }
		PREV = { set_province_flag = jumped_success }
		
		if = {
			limit = {
				has_province_flag = TradePost@event_target:ProvNew # Connect with everything inside
			}
			set_global_flag = HasTradePost # Then it will do a spread but can't really jump.
			set_province_flag = TN_SectorCentReachWithin			
			TN_effect11 = yes
		}		
	}
}
TN_effect23 = {
	# Trade posts connect with every neighboring dominants or Major.
	tradenode_mult_$id$ = {
		limit = {	
			isValidProv = yes			
			has_province_flag = TN_SectorCent
			NOT = { has_province_flag = TN_SectorCentReachWithin }			
			#NOT = { has_province_flag = TN_SectorCentNoTC }
			has_province_flag = TN_COT_D

			trade_range = event_target:ProvNew
			owner = {
				knows_country = event_target:ProvNew
			}		
			owner = {
				AND = {
					OR = {
						has_global_flag = POP_Sim
						NOT = { war_with = event_target:ProvNew }
					}
					NOT = { trade_embargoing = event_target:ProvNew }
					NOT = { trade_embargo_by = event_target:ProvNew }
				}
			}	
		}
		set_province_flag = TN_SectorCentReachWithin
		# Add +1 to the distance connection
		PREV = {
			set_province_flag = jumped_success
		}
		set_key = { lhs = Public_Tmp1 which = PREV }
		change_key = { lhs = Public_Tmp1 value = 1.5 }
	}
}
TN_effect24 = { # Connect, jump and spread.
	# Find if it is connected
	tradenode_mult_$id$ = {
		limit = {
			isValidProv = yes
			OR = {
				has_province_flag = TN_SectorCent
				has_province_flag = SMM_SectorCent
				has_province_flag = TN_SectorCentNoTC
			}
			NOT = { has_province_flag = TN_SectorCentReachWithin }
			OR = {
				has_province_flag = HasSeaAccess
				has_province_flag = HasSilkAccess
				has_province_flag = HasRiverSeaAccess
				has_province_flag = HasRiverSeaBAccess
			}
			check_key = { lhs = TN_SectorScore value = -1 }
			PREV = { trade_range = PREV }
			owner = {
				event_target:ProvNew = {
					knows_country = PREV
				}
			}

			OR = {
					owned_by = event_target:ProvNew
				owner = {
						is_colonial_nation_of = event_target:ProvNew
						capital_scope = {
							same_trade_node_as = PREV_PREV
						}
					} # This is the node where the capital of the Colonial Nation exists.

				AND = {		
					has_province_flag = TN_COT_M	
					
					owner = {
						OR = {
							transfers_trade_power_to = event_target:ProvNew
							event_target:ProvNew = { transfers_trade_power_to = PREV }
							AND = {
								OR = {
									has_global_flag = POP_Sim
									NOT = { war_with = event_target:ProvNew }
								}
								NOT = { trade_embargoing = event_target:ProvNew }
								NOT = { trade_embargo_by = event_target:ProvNew }
								has_opinion = { who = event_target:ProvNew value = -150 }
								reverse_has_opinion = { who = event_target:ProvNew value = -150 }
							}
						}
					}							
				}
			}
		}

		set_province_flag = TN_SectorCentReachWithin
		set_key = { lhs = Public_Tmp1 which = PREV }
		change_key = { lhs = Public_Tmp1 value = 1 }
		PREV = { set_province_flag = jumped_success }
		
		if = {
			limit = {
				OR = {
					owned_by = event_target:ProvNew
					owner = {
						is_colonial_nation_of = event_target:ProvNew
						capital_scope = {
							same_trade_node_as = PREV_PREV
						}
					} # This is the node where the capital of the Colonial Nation exists.
				}
			}			
			set_province_flag = TN_SectorCentReachSpread2
		}
		else_if = {
			limit = {
				has_province_flag = TradePost@event_target:ProvNew # Connect with everything inside
			}
			set_global_flag = HasTradePost # Then it will do a spread but can't really jump.
			set_province_flag = TN_SectorCentReachWithin			
			TN_effect11 = yes
		}		
	}
}