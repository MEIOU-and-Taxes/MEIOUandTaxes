#A script that converts believers of one faith to another.
#Has to go from one specific religion to another specific religion.
#Requires religion to be present, so use MN_AddReligion first.
#Example of use:
#	MN_ConvertReligion = {
#		typeFrom = which from = MN_S0	# From, as in the religion who is losing its believers
#		typeTo = which to = DG_Tmp1   # To, as in the religion who is gaining new believers
#		typeChange = value change = 15   # Change, as in how many people in absolute numbers are changing
#		type = Rural	# Type, as in which type of people are being converted
#	}
MN_ConvertSlot = {
	if = {
		limit = { is_key_equal = { lhs = Class_$type$ value = 0 } }
		set_key = { lhs = MN_S$from$$type$ value = 0 }
		set_key = { lhs = MN_S$to$$type$ value = 0 }
	}
	else = {
		multiply_key = { lhs = MN_S$from$$type$ which = Class_$type$ }
		multiply_key = { lhs = MN_S$to$$type$ which = Class_$type$ }

		if = {
			limit = { check_key = { lhs = MN_S$from$$type$ $typeChange$ = $change$ } }
			change_key = { lhs = MN_S$to$$type$ $typeChange$ = $change$ }
			subtract_key = { lhs = MN_S$from$$type$ $typeChange$ = $change$ }
		}
		else = {
			change_key = { lhs = MN_S$to$$type$ which = MN_S$from$$type$ }
			set_key = { lhs = MN_S$from$$type$ value = 0 }
		}
		
		divide_key = { lhs = MN_S$from$$type$ which = Class_$type$ }
		divide_key = { lhs = MN_S$to$$type$ which = Class_$type$ }
	}
}

MN_ConvertReligionHelper2 = {
	if = {
		limit = {
			is_key_equal = { lhs = MN_S$slot$ $typeTo$ = $to$ }
		}
		[[ruralChange]MN_ConvertSlot = { from = $from$ to = $slot$ type = Rural typeChange = $typeChange$ change = $ruralChange$ }]
		[[urbanChange]MN_ConvertSlot = { from = $from$ to = $slot$ type = Urban typeChange = $typeChange$ change = $urbanChange$ }]
		[[notablesChange]MN_ConvertSlot = { from = $from$ to = $slot$ type = Notables typeChange = $typeChange$ change = $notablesChange$ }]
	}
}

MN_ConvertReligionHelper = {
	if = {
		limit = {
			is_key_equal = { lhs = MN_S$slot$ $typeFrom$ = $from$ }
		}
		MN_ConvertReligionHelper2 = { slot = 0 from = $slot$ to = $to$ typeChange = $typeChange$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
		MN_ConvertReligionHelper2 = { slot = 1 from = $slot$ to = $to$ typeChange = $typeChange$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
		MN_ConvertReligionHelper2 = { slot = 2 from = $slot$ to = $to$ typeChange = $typeChange$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
		MN_ConvertReligionHelper2 = { slot = 3 from = $slot$ to = $to$ typeChange = $typeChange$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
		MN_ConvertReligionHelper2 = { slot = 4 from = $slot$ to = $to$ typeChange = $typeChange$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
		MN_ConvertReligionHelper2 = { slot = 5 from = $slot$ to = $to$ typeChange = $typeChange$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
	}
}

MN_ConvertReligion = {
	MN_ConvertReligionHelper = { slot = 0 from = $from$ to = $to$ typeChange = $typeChange$ typeFrom = $typeFrom$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
	MN_ConvertReligionHelper = { slot = 1 from = $from$ to = $to$ typeChange = $typeChange$ typeFrom = $typeFrom$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
	MN_ConvertReligionHelper = { slot = 2 from = $from$ to = $to$ typeChange = $typeChange$ typeFrom = $typeFrom$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
	MN_ConvertReligionHelper = { slot = 3 from = $from$ to = $to$ typeChange = $typeChange$ typeFrom = $typeFrom$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
	MN_ConvertReligionHelper = { slot = 4 from = $from$ to = $to$ typeChange = $typeChange$ typeFrom = $typeFrom$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
	MN_ConvertReligionHelper = { slot = 5 from = $from$ to = $to$ typeChange = $typeChange$ typeFrom = $typeFrom$ typeTo = $typeTo$ [[ruralChange]ruralChange = $ruralChange$] [[urbanChange]urbanChange = $urbanChange$] [[notablesChange]notablesChange = $notablesChange$] }
	#[[ruralChange]MN_Regularize = { type = Rural }]
	#[[urbanChange]MN_Regularize = { type = Urban }]
	#[[notablesChange]MN_Regularize = { type = Notables }]
}

# A much needed scripted effect to change the province religion when it gets highest proportion
# not a metascript. when called, change province religion to highest proportion religion
change_religion_effect = {
	set_key = { lhs = DG_Tmp1  value = 0 }
	set_key = { lhs = DG_Tmp2  value = 0 }
	set_key = { lhs = DG_Tmp3  value = 0 }
	set_key = { lhs = DG_Tmp4  value = 0 }
	set_key = { lhs = DG_Tmp5  value = 0 }
	set_key = { lhs = DG_Tmp6  value = 0 }
	set_key = { lhs = DG_Tmp7  value = 0 }
	set_key = { lhs = DG_Tmp8  value = 0 }
	set_key = { lhs = DG_Tmp9  value = 0 }
	set_key = { lhs = DG_Tmp10 value = 0 }
	set_key = { lhs = DG_Tmp11 value = 0 }
	set_key = { lhs = DG_Tmp12 value = 0 }
	set_key = { lhs = DG_Tmp13 value = 0 }
	set_key = { lhs = DG_Tmp14 value = 0 }
	set_key = { lhs = DG_Tmp15 value = 0 }
	set_key = { lhs = DG_Tmp16 value = 0 }
	set_key = { lhs = DG_Tmp17 value = 0 }
	set_key = { lhs = DG_Tmp18 value = 0 }
	set_key = { lhs = DG_Tmp19 value = 0 }
	set_key = { lhs = DG_Tmp20 value = 0 }
	set_key = { lhs = DG_Tmp21 value = 0 }
	set_key = { lhs = DG_Tmp22 value = 0 }
	set_key = { lhs = DG_Tmp23 value = 0 }
	set_key = { lhs = DG_Tmp24 value = 0 }
	set_key = { lhs = DG_Tmp25 value = 0 }

	MN_GetSlot = { slot = 0 return = DG_Tmp23 }

	if = {
		limit = {
			NOT = {
				check_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
			}
		}
		set_key = { lhs = DG_Tmp1  which = MN_S0 }
		set_key = { lhs = DG_Tmp2  which = MN_S0RurN }
		set_key = { lhs = DG_Tmp3  which = MN_S0UrbN }
		set_key = { lhs = DG_Tmp4  which = MN_S0NotN }
		set_key = { lhs = DG_Tmp5  which = MN_S0RurP }
		set_key = { lhs = DG_Tmp6  which = MN_S0UrbP }
		set_key = { lhs = DG_Tmp7  which = MN_S0NotP }
		set_key = { lhs = DG_Tmp8  which = MN_S0TotN }
		set_key = { lhs = DG_Tmp9  which = MN_S0TotP }
		set_key = { lhs = DG_Tmp10 which = MN_S0Rural }
		set_key = { lhs = DG_Tmp11 which = MN_S0Urban }
		set_key = { lhs = DG_Tmp12 which = MN_S0Notables }
		set_key = { lhs = DG_Tmp13 which = MN_S0INF }
		set_key = { lhs = DG_Tmp14 which = MN_S0ENT }
		set_key = { lhs = DG_Tmp15 which = MN_S0Preach }
		set_key = { lhs = DG_Tmp16 which = MN_S0Inquis }
		set_key = { lhs = DG_Tmp17 which = MN_S0Tolerance }
		set_key = { lhs = DG_Tmp18 which = MN_S0Bastion }
		set_key = { lhs = DG_Tmp19 which = MN_S0MStrength }
		set_key = { lhs = DG_Tmp20 which = MN_S0_Var }
		set_key = { lhs = DG_Tmp21 value = 0 }

		set_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
	}

	MN_GetSlot = { slot = 1 return = DG_Tmp23 }

	if = {
		limit = {
			NOT = {
				check_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
			}
		}
		set_key = { lhs = DG_Tmp1  which = MN_S1 }
		set_key = { lhs = DG_Tmp10 which = MN_S1Rural }
		set_key = { lhs = DG_Tmp11 which = MN_S1Urban }
		set_key = { lhs = DG_Tmp12 which = MN_S1Notables }
		set_key = { lhs = DG_Tmp13 which = MN_S1INF }
		set_key = { lhs = DG_Tmp14 which = MN_S1ENT }
		set_key = { lhs = DG_Tmp15 which = MN_S1Preach }
		set_key = { lhs = DG_Tmp16 which = MN_S1Inquis }
		set_key = { lhs = DG_Tmp17 which = MN_S1Tolerance }
		set_key = { lhs = DG_Tmp18 which = MN_S1Bastion }
		set_key = { lhs = DG_Tmp19 which = MN_S1MStrength }
		set_key = { lhs = DG_Tmp20 which = MN_S1_Var }
		set_key = { lhs = DG_Tmp21 value = 1 }

		set_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
	}

	MN_GetSlot = { slot = 2 return = DG_Tmp23 }

	if = {
		limit = {
			NOT = {
				check_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
			}
		}
		set_key = { lhs = DG_Tmp1  which = MN_S2 }
		set_key = { lhs = DG_Tmp10 which = MN_S2Rural }
		set_key = { lhs = DG_Tmp11 which = MN_S2Urban }
		set_key = { lhs = DG_Tmp12 which = MN_S2Notables }
		set_key = { lhs = DG_Tmp13 which = MN_S2INF }
		set_key = { lhs = DG_Tmp14 which = MN_S2ENT }
		set_key = { lhs = DG_Tmp15 which = MN_S2Preach }
		set_key = { lhs = DG_Tmp16 which = MN_S2Inquis }
		set_key = { lhs = DG_Tmp17 which = MN_S2Tolerance }
		set_key = { lhs = DG_Tmp18 which = MN_S2Bastion }
		set_key = { lhs = DG_Tmp19 which = MN_S2MStrength }
		set_key = { lhs = DG_Tmp20 which = MN_S2_Var }
		set_key = { lhs = DG_Tmp21 value = 2 }

		set_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
	}

	MN_GetSlot = { slot = 3 return = DG_Tmp23 }

	if = {
		limit = {
			NOT = {
				check_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
			}
		}
		set_key = { lhs = DG_Tmp1  which = MN_S3 }
		set_key = { lhs = DG_Tmp10 which = MN_S3Rural }
		set_key = { lhs = DG_Tmp11 which = MN_S3Urban }
		set_key = { lhs = DG_Tmp12 which = MN_S3Notables }
		set_key = { lhs = DG_Tmp13 which = MN_S3INF }
		set_key = { lhs = DG_Tmp14 which = MN_S3ENT }
		set_key = { lhs = DG_Tmp15 which = MN_S3Preach }
		set_key = { lhs = DG_Tmp16 which = MN_S3Inquis }
		set_key = { lhs = DG_Tmp17 which = MN_S3Tolerance }
		set_key = { lhs = DG_Tmp18 which = MN_S3Bastion }
		set_key = { lhs = DG_Tmp19 which = MN_S3MStrength }
		set_key = { lhs = DG_Tmp20 which = MN_S3_Var }
		set_key = { lhs = DG_Tmp21 value = 3 }

		set_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
	}

	MN_GetSlot = { slot = 4 return = DG_Tmp23 }

	if = {
		limit = {
			NOT = {
				check_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
			}
		}
		set_key = { lhs = DG_Tmp1  which = MN_S4 }
		set_key = { lhs = DG_Tmp10 which = MN_S4Rural }
		set_key = { lhs = DG_Tmp11 which = MN_S4Urban }
		set_key = { lhs = DG_Tmp12 which = MN_S4Notables }
		set_key = { lhs = DG_Tmp13 which = MN_S4INF }
		set_key = { lhs = DG_Tmp14 which = MN_S4ENT }
		set_key = { lhs = DG_Tmp15 which = MN_S4Preach }
		set_key = { lhs = DG_Tmp16 which = MN_S4Inquis }
		set_key = { lhs = DG_Tmp17 which = MN_S4Tolerance }
		set_key = { lhs = DG_Tmp18 which = MN_S4Bastion }
		set_key = { lhs = DG_Tmp19 which = MN_S4MStrength }
		set_key = { lhs = DG_Tmp20 which = MN_S4_Var }
		set_key = { lhs = DG_Tmp21 value = 4 }

		set_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
	}

	MN_GetSlot = { slot = 5 return = DG_Tmp23 }

	if = {
		limit = {
			NOT = {
				check_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
			}
		}
		set_key = { lhs = DG_Tmp1  which = MN_S5 }
		set_key = { lhs = DG_Tmp2  which = MN_S0_Var }
		set_key = { lhs = DG_Tmp3  which = MN_S0Rur_Var }
		set_key = { lhs = DG_Tmp4  which = MN_S0Urb_Var }
		set_key = { lhs = DG_Tmp5  which = MN_S0Not_Var }
		set_key = { lhs = DG_Tmp10 which = MN_S5Rural }
		set_key = { lhs = DG_Tmp11 which = MN_S5Urban }
		set_key = { lhs = DG_Tmp12 which = MN_S5Notables }
		set_key = { lhs = DG_Tmp13 which = MN_S5INF }
		set_key = { lhs = DG_Tmp14 which = MN_S5ENT }
		set_key = { lhs = DG_Tmp15 which = MN_S5Preach }
		set_key = { lhs = DG_Tmp16 which = MN_S5Inquis }
		set_key = { lhs = DG_Tmp17 which = MN_S5Tolerance }
		set_key = { lhs = DG_Tmp18 which = MN_S5Bastion }
		set_key = { lhs = DG_Tmp19 which = MN_S5MStrength }
		set_key = { lhs = DG_Tmp21 value = 5 }

		set_key = { lhs = DG_Tmp22 which = DG_Tmp23 }
	}

	if = {
		limit = {
			check_key = { lhs = DG_Tmp1 value = 1 }
			NOT = { is_key_equal = { lhs = DG_Tmp1 which = MN_S0 } }
		}
		set_var_from_key = { var = DG_Tmp1 key = DG_Tmp1 }
		
		change_religion = variable:DG_Tmp1
		
		if = {
			limit = { is_key_equal = { lhs = DG_Tmp21 value = 1 } }
			set_key = { lhs = MN_S1			which = MN_S0 }
			set_key = { lhs = MN_S1_Var		which = MN_S0_Var }
			set_key = { lhs = MN_S1Rur_Var		which = MN_S0Rur_Var }
			set_key = { lhs = MN_S1Urb_Var		which = MN_S0Urb_Var }
			set_key = { lhs = MN_S1Not_Var		which = MN_S0Not_Var }
			set_key = { lhs = MN_S1Rural		which = MN_S0Rural }
			set_key = { lhs = MN_S1Urban		which = MN_S0Urban }
			set_key = { lhs = MN_S1Notables	which = MN_S0Notables }
			set_key = { lhs = MN_S1INF			which = MN_S0INF }
			set_key = { lhs = MN_S1ENT			which = MN_S0ENT }
			set_key = { lhs = MN_S1Preach		which = MN_S0Preach }
			set_key = { lhs = MN_S1Inquis		which = MN_S0Inquis }
			set_key = { lhs = MN_S1Tolerance	which = MN_S0Tolerance }
			set_key = { lhs = MN_S1Bastion		which = MN_S0Bastion }
			set_key = { lhs = MN_S1MStrength	which = MN_S0MStrength }
			if = {
				limit = { is_key_equal = { lhs = MN_S1TotN value = 0 } }
				MN_CleanSlot = { slot = 1 }
			}
		}
		else_if = {
			limit = { is_key_equal = { lhs = DG_Tmp21 value = 2 } }
			set_key = { lhs = MN_S2			which = MN_S0 }
			set_key = { lhs = MN_S2_Var		which = MN_S0_Var }
			set_key = { lhs = MN_S2Rur_Var		which = MN_S0Rur_Var }
			set_key = { lhs = MN_S2Urb_Var		which = MN_S0Urb_Var }
			set_key = { lhs = MN_S2Not_Var		which = MN_S0Not_Var }
			set_key = { lhs = MN_S2Rural		which = MN_S0Rural }
			set_key = { lhs = MN_S2Urban		which = MN_S0Urban }
			set_key = { lhs = MN_S2Notables	which = MN_S0Notables }
			set_key = { lhs = MN_S2INF			which = MN_S0INF }
			set_key = { lhs = MN_S2ENT			which = MN_S0ENT }
			set_key = { lhs = MN_S2Preach		which = MN_S0Preach }
			set_key = { lhs = MN_S2Inquis		which = MN_S0Inquis }
			set_key = { lhs = MN_S2Tolerance 	which = MN_S0Tolerance }
			set_key = { lhs = MN_S2Bastion		which = MN_S0Bastion }
			set_key = { lhs = MN_S2MStrength 	which = MN_S0MStrength }
			if = {
				limit = { is_key_equal = { lhs = MN_S2TotN value = 0 } }
				MN_CleanSlot = { slot = 2 }
			}
		}
		else_if = {
			limit = { is_key_equal = { lhs = DG_Tmp21 value = 3 } }
			set_key = { lhs = MN_S3			which = MN_S0 }
			set_key = { lhs = MN_S3_Var		which = MN_S0_Var }
			set_key = { lhs = MN_S3Rur_Var		which = MN_S0Rur_Var }
			set_key = { lhs = MN_S3Urb_Var		which = MN_S0Urb_Var }
			set_key = { lhs = MN_S3Not_Var		which = MN_S0Not_Var }
			set_key = { lhs = MN_S3Rural		which = MN_S0Rural }
			set_key = { lhs = MN_S3Urban		which = MN_S0Urban }
			set_key = { lhs = MN_S3Notables	which = MN_S0Notables }
			set_key = { lhs = MN_S3INF			which = MN_S0INF }
			set_key = { lhs = MN_S3ENT			which = MN_S0ENT }
			set_key = { lhs = MN_S3Preach		which = MN_S0Preach }
			set_key = { lhs = MN_S3Inquis		which = MN_S0Inquis }
			set_key = { lhs = MN_S3Tolerance	which = MN_S0Tolerance }
			set_key = { lhs = MN_S3Bastion		which = MN_S0Bastion }
			set_key = { lhs = MN_S3MStrength	which = MN_S0MStrength }
			if = {
				limit = { is_key_equal = { lhs = MN_S3TotN value = 0 } }
				MN_CleanSlot = { slot = 3 }
			}
		}
		else_if = {
			limit = { is_key_equal = { lhs = DG_Tmp21 value = 4 } }
			set_key = { lhs = MN_S4			which = MN_S0 }
			set_key = { lhs = MN_S4_Var		which = MN_S0_Var }
			set_key = { lhs = MN_S4Rur_Var		which = MN_S0Rur_Var }
			set_key = { lhs = MN_S4Urb_Var		which = MN_S0Urb_Var }
			set_key = { lhs = MN_S4Not_Var		which = MN_S0Not_Var }
			set_key = { lhs = MN_S4Rural		which = MN_S0Rural }
			set_key = { lhs = MN_S4Urban		which = MN_S0Urban }
			set_key = { lhs = MN_S4Notables	which = MN_S0Notables }
			set_key = { lhs = MN_S4INF			which = MN_S0INF }
			set_key = { lhs = MN_S4ENT			which = MN_S0ENT }
			set_key = { lhs = MN_S4Preach		which = MN_S0Preach }
			set_key = { lhs = MN_S4Inquis		which = MN_S0Inquis }
			set_key = { lhs = MN_S4Tolerance	which = MN_S0Tolerance }
			set_key = { lhs = MN_S4Bastion		which = MN_S0Bastion }
			set_key = { lhs = MN_S4MStrength	which = MN_S0MStrength }
			if = {
				limit = { is_key_equal = { lhs = MN_S4TotN value = 0 } }
				MN_CleanSlot = { slot = 4 }
			}
		}
		else_if = {
			limit = { is_key_equal = { lhs = DG_Tmp21 value = 5 } }
			set_key = { lhs = MN_S5			which = MN_S0 }
			set_key = { lhs = MN_S5_Var		which = MN_S0_Var }
			set_key = { lhs = MN_S5Rur_Var		which = MN_S0Rur_Var }
			set_key = { lhs = MN_S5Urb_Var		which = MN_S0Urb_Var }
			set_key = { lhs = MN_S5Not_Var		which = MN_S0Not_Var }
			set_key = { lhs = MN_S5Rural		which = MN_S0Rural }
			set_key = { lhs = MN_S5Urban		which = MN_S0Urban }
			set_key = { lhs = MN_S5Notables	which = MN_S0Notables }
			set_key = { lhs = MN_S5INF			which = MN_S0INF }
			set_key = { lhs = MN_S5ENT			which = MN_S0ENT }
			set_key = { lhs = MN_S5Preach		which = MN_S0Preach }
			set_key = { lhs = MN_S5Inquis		which = MN_S0Inquis }
			set_key = { lhs = MN_S5Tolerance	which = MN_S0Tolerance }
			set_key = { lhs = MN_S5Bastion		which = MN_S0Bastion }
			set_key = { lhs = MN_S5MStrength	which = MN_S0MStrength }
			if = {
				limit = { is_key_equal = { lhs = MN_S5TotN value = 0 } }
				MN_CleanSlot = { slot = 5 }
			}
		}
		
		set_key = { lhs = MN_S0			which = DG_Tmp1 }
		set_key = { lhs = MN_S0_Var		which = DG_Tmp2 }
		set_key = { lhs = MN_S0Rur_Var		which = DG_Tmp3 }
		set_key = { lhs = MN_S0Urb_Var		which = DG_Tmp4 }
		set_key = { lhs = MN_S0Not_Var		which = DG_Tmp5 }
		set_key = { lhs = MN_S0Rural		which = DG_Tmp10 }
		set_key = { lhs = MN_S0Urban		which = DG_Tmp11 }
		set_key = { lhs = MN_S0Notables		which = DG_Tmp12 }
		set_key = { lhs = MN_S0INF			which = DG_Tmp13 }
		set_key = { lhs = MN_S0ENT			which = DG_Tmp14 }
		set_key = { lhs = MN_S0Preach		which = DG_Tmp15 }
		set_key = { lhs = MN_S0Inquis		which = DG_Tmp16 }
		set_key = { lhs = MN_S0Tolerance	which = DG_Tmp17 }
		set_key = { lhs = MN_S0Bastion		which = DG_Tmp18 }
		set_key = { lhs = MN_S0MStrength	which = DG_Tmp19 }
		
		set_key = { lhs = DG_Tmp1 value = 0 }
	}

	else = {
		set_var_from_key = { var = DG_Tmp1 key = MN_S0 }
		change_religion = variable:DG_Tmp1
		set_key = { lhs = DG_Tmp1 value = 0 }
	}
	if = {
		limit = { has_province_flag = dg_pulse_mute }
		clr_province_flag = dg_pulse_mute
	}
	else_if = {
		limit = { owner = { UnassignedMissionaries = yes } }
		trigger_switch = {
			on_trigger = has_province_flag
			convert_50 = {
				if = {
					limit = { religion = owner  }
					clr_province_flag = convert_50
					if = {
						limit = {
							owner = {
								any_owned_province = {
									NOT = { religion = owner }
									check_key = { lhs = MN_S0MStrength value = 0.3 }
									OR = {
										has_province_flag = convert_50
										has_province_flag = convert_90
									}
									has_missionary = no
								}
							}
						}
						owner = {
							random_owned_province = {
								limit = {
									NOT = { religion = owner }
									check_key = { lhs = MN_S0MStrength value = 0.3 }
									OR = {
										has_province_flag = convert_50
										has_province_flag = convert_90
									}
									has_missionary = no
								}
								send_missionary = yes
							}
						}
					}
				}
				else_if = {
					limit = {
						has_missionary = no
					}
					send_missionary = yes
				}
			}
			convert_90 = {
				if = {
					limit = { religion = owner  }
					clr_province_flag = convert_90
					add_province_modifier = { name = minority_missionary duration = -1 hidden = yes }
					#MN_RlgShift = yes
				}
				else_if = {
					limit = {
						has_missionary = no
						NOT = { religion = owner }
						check_key = { lhs = MN_S0MStrength value = 0.3 }
					}
					send_missionary = yes
				}
			}
		}
	}
	set_key = { lhs = DG_Tmp1 value = 0 }
	set_key = { lhs = DG_Tmp2 value = 0 }
	set_key = { lhs = DG_Tmp3 value = 0 }
	set_key = { lhs = DG_Tmp4 value = 0 }
	set_key = { lhs = DG_Tmp5 value = 0 }
	set_key = { lhs = DG_Tmp6 value = 0 }
	set_key = { lhs = DG_Tmp7 value = 0 }
	set_key = { lhs = DG_Tmp8 value = 0 }
	set_key = { lhs = DG_Tmp9 value = 0 }
	set_key = { lhs = DG_Tmp10 value = 0 }
	set_key = { lhs = DG_Tmp11 value = 0 }
	set_key = { lhs = DG_Tmp12 value = 0 }
	set_key = { lhs = DG_Tmp13 value = 0 }
	set_key = { lhs = DG_Tmp14 value = 0 }
	set_key = { lhs = DG_Tmp15 value = 0 }
	set_key = { lhs = DG_Tmp16 value = 0 }
	set_key = { lhs = DG_Tmp17 value = 0 }
	set_key = { lhs = DG_Tmp18 value = 0 }
	set_key = { lhs = DG_Tmp19 value = 0 }
	set_key = { lhs = DG_Tmp20 value = 0 }
	set_key = { lhs = DG_Tmp21 value = 0 }
	set_key = { lhs = DG_Tmp22 value = 0 }
	set_key = { lhs = DG_Tmp23 value = 0 }
	set_key = { lhs = DG_Tmp24 value = 0 }
	set_key = { lhs = DG_Tmp25 value = 0 }
}
MN_RlgConv_1 = {
	set_key = { lhs = DG_Tmp2 value = 0 }
	set_key = { lhs = DG_Tmp3 value = 0 }
	set_key = { lhs = DG_Tmp4 value = 0 }
	MN_RlgConv_helper1 = { slot = 0 }
	MN_RlgConv_helper1 = { slot = 1 }
	MN_RlgConv_helper1 = { slot = 2 }
	MN_RlgConv_helper1 = { slot = 3 }
	MN_RlgConv_helper1 = { slot = 4 }
	MN_RlgConv_helper1 = { slot = 5 }
}
#Every two years, some people convert to another religion
MN_RlgConv_helper1 = {
	if = {
		limit = {
			check_key = { lhs = MN_S$slot$ value = 1 }
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = MN_S$slot$Rur_Var value = 0 } } }
			change_key   = { lhs = MN_S$slot$RurN		which = MN_S$slot$Rur_Var }
			if = {
				limit = { NOT = { check_key = { lhs = MN_S$slot$RurN value = 0 } } }
				set_key = { lhs = MN_S$slot$RurN value = 0 }
				set_key = { lhs = MN_S$slot$Rur_Var value = 0 }
			}
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = MN_S$slot$Urb_Var value = 0 } } }
			change_key   = { lhs = MN_S$slot$UrbN		which = MN_S$slot$Urb_Var }
			if = {
				limit = { NOT = { check_key = { lhs = MN_S$slot$UrbN value = 0 } } }
				set_key = { lhs = MN_S$slot$UrbN value = 0 }
				set_key = { lhs = MN_S$slot$Urb_Var value = 0 }
			}
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = MN_S$slot$Not_Var value = 0 } } }
			change_key   = { lhs = MN_S$slot$NotN	    which = MN_S$slot$Not_Var }
			if = {
				limit = { NOT = { check_key = { lhs = MN_S$slot$NotN value = 0 } } }
				set_key = { lhs = MN_S$slot$NotN value = 0 }
				set_key = { lhs = MN_S$slot$Not_Var value = 0 }
			}
		}
		#Sum up the total adjusted totals
		change_key   = { lhs = DG_Tmp2		    which = MN_S$slot$RurN }
		change_key   = { lhs = DG_Tmp3		    which = MN_S$slot$UrbN }
		change_key   = { lhs = DG_Tmp4		    which = MN_S$slot$NotN }
	}
}
MN_RlgConv_2 = {
	MN_RlgConv_helper2 = { slot = 0 }
	MN_RlgConv_helper2 = { slot = 1 }
	MN_RlgConv_helper2 = { slot = 2 }
	MN_RlgConv_helper2 = { slot = 3 }
	MN_RlgConv_helper2 = { slot = 4 }
	MN_RlgConv_helper2 = { slot = 5 }
}
MN_RlgConv_helper2 = {
	if = {
		limit = {
			check_key = { lhs = MN_S$slot$ value = 1 }
		}
		### recalc the %'s
		if = {
			limit = {
				NOT = { is_key_equal = { lhs = DG_Tmp2 value = 0 } }
			}
			set_key      = { lhs = MN_S$slot$Rural		which = MN_S$slot$RurN }
			divide_key   = { lhs = MN_S$slot$Rural		which = DG_Tmp2 }
		}
		if = {
			limit = {
				NOT = { is_key_equal = { lhs = DG_Tmp3 value = 0 } }
			}
			set_key      = { lhs = MN_S$slot$Urban		which = MN_S$slot$UrbN }
			divide_key   = { lhs = MN_S$slot$Urban		which = DG_Tmp3 }
		}
		if = {
			limit = {
				NOT = { is_key_equal = { lhs = DG_Tmp4 value = 0 } }
			}
			set_key      = { lhs = MN_S$slot$Notables	which = MN_S$slot$NotN }
			divide_key   = { lhs = MN_S$slot$Notables		which = DG_Tmp4 }
		}
	}
}

MN_RlgConv = {
	if = {
		limit = { is_key_equal = { lhs = Class_Total value = 0 } }
		MN_CleanSlot = { slot = 0 }
		MN_CleanSlot = { slot = 1 }
		MN_CleanSlot = { slot = 2 }
		MN_CleanSlot = { slot = 3 }
		MN_CleanSlot = { slot = 4 }
		MN_CleanSlot = { slot = 5 }
	}
	else = {
		# Run Entrenchment, Infrastructure, etc checks
		MN_GetInfrast = yes

		#Conversion to the owner religion, exporting it as a key
		export_to_key = {
			lhs = DG_Tmp1
			value = religion
			who = owner 
		}
		
		# Update Tolerance for Shift
		DG_Extract_ToleranceAll = yes
		
		#Adds the religion in case it isn't there already
		if = {
			limit = { NOT = { MN_CheckRelSlot = { Type = which Religion = DG_Tmp1 } } }
			MN_AddReligion = { type = which religion = DG_Tmp1 }
		}
		
		if = {
			limit = {
				is_key_equal = { lhs = MN_S0 which = DG_Tmp1 }
				check_key = { lhs = MN_S0TotP value = 90 }
				has_province_modifier = minority_missionary
			}
			remove_province_modifier = minority_missionary
			clr_province_flag = convert_50
			clr_province_flag = convert_90
			#owner = {
				#SendingAvailableMissionaries = yes
			#}
		}
		
		set_key = { lhs = DG_Tmp0 value = 0 }
		set_key = { lhs = DG_Tmp1 value = 0 }
		set_key = { lhs = DG_Tmp2 value = 0 }
		set_key = { lhs = DG_Tmp3 value = 0 }
		set_key = { lhs = DG_Tmp4 value = 0 }
		
		# Save for change_religion
		if = {
			limit = {
				OR = {
					religion = catholic 
					religion = avignonist
				}
				has_cardinal = yes
			}
			set_province_flag = had_cardinal
		}
		# Calculate how much the population will shift
		MN_RlgShift = yes
		
		# Now we need to use these calculations and apply them
		# First, apply the actual shift and ensure it doesnt fall below 0
		# Then sum up the new totals
		MN_RlgConv_1 = yes
		# Now we need to figure out what share each religion has of the new totals, effectively applying a new religion share with the shifts
		MN_RlgConv_2 = yes ### This actually applies the shift, MN_S$_Urban, _Rural and _Notables are the real holders of religion shares and are updated here
		
		# Update slot 0 and prov religion if needed
		change_religion_effect = yes # INLINED THIS CODE FOR OPT
		
		### Redo all the Totals, Raw Numbers, etc, was no need to do this yet, no need to copy them around either
		MN_GetSlotInit = yes
		# Pop any slot that needs popping
		MN_CheckSlot = yes
		
		#Converts the religion if necessary, and switches slots between former and new religion
		clr_province_flag = center_converted
		CardinalCheck = yes
		if = {
			limit = {
				owner = {
					OR = {
						religion = catholic
						religion = avignonist
					}
					is_excommunicated = no
					NOT = { tag = PAP }
					NOT = { tag = AVI }
				}
			}
			owner = { CardinalChanceC = yes }
			CardinalChanceP = yes
		}
	}
}
CardinalCheck = {
	if = {
		limit = { has_province_flag = had_cardinal }
		if = {
			limit = { 
				OR = {
					religion = catholic
					religion = avignonist
				}
				has_cardinal = no
				check_key = { lhs = MN_Cardinal value = 50 }
			}
			AddCardinal = yes
		}
		else_if = {
			limit = { NOT = { religion = catholic religion = avignonist } }
			random_province = {
				limit = {
					OR = {
						religion = catholic
						religion = avignonist
					}
					owner = { 
						OR = {
							religion = catholic 
							religion = avignonist 
						}
						check_key = { lhs = MN_Cardinal value = 50 }
					}
					check_key = { lhs = MN_Cardinal value = 50 }
				}
				AddCardinal = yes
			}
		}
		clr_province_flag = had_cardinal
	}
}

# Adding population of a specific religion following migration
# Example: MN_RlgMigration = { type = value religion = 49 class = UrbN amount = 0.075 }
# Typerel is "value" or "which"
# Religion is value or variable 
# Class is RurN, UrbN or NotN depending on who migratres
# Nummig is number of migrants (in k)
MN_RlgMigration_Influx = {
	if = {
		limit = { is_key_equal = { lhs = MN_S$slot$	$TypeRel$ = $Religion$ } }
		change_key = { lhs = MN_S$slot$$Class$			value = $Amount$ }
		change_key = { lhs = MN_S$slot$TotN			value = $Amount$ }
	}
}

MN_RlgMigration_Slot = {
	if = {
		limit = { check_key = { lhs = MN_S$slot$	value = 1 } }
		set_key = { lhs = MN_S$slot$Rural				which = MN_S$slot$RurN }
		set_key = { lhs = MN_S$slot$Urban				which = MN_S$slot$UrbN }
		set_key = { lhs = MN_S$slot$Notables			which = MN_S$slot$NotN }
		if = {
			limit = { NOT = { is_key_equal = { lhs = DG_Tmp1 value = 0 } } }
			divide_key = { lhs = MN_S$slot$Rural			which = DG_Tmp1 }
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = DG_Tmp2 value = 0 } } }
			divide_key = { lhs = MN_S$slot$Urban			which = DG_Tmp2 }
		}
		if = {
			limit = { NOT = { is_key_equal = { lhs = DG_Tmp3 value = 0 } } }
			divide_key = { lhs = MN_S$slot$Notables		which = DG_Tmp3 }
		}

		set_key = { lhs = MN_S$slot$RurP				which = MN_S$slot$Rural }
		set_key = { lhs = MN_S$slot$UrbP				which = MN_S$slot$Urban }
		set_key = { lhs = MN_S$slot$NotP				which = MN_S$slot$Notables }
		multiply_key = { lhs = MN_S$slot$RurP			value = 100 }
		multiply_key = { lhs = MN_S$slot$UrbP			value = 100 }
		multiply_key = { lhs = MN_S$slot$NotP			value = 100 }
		
		set_key = { lhs = MN_S$slot$TotP				which = MN_S$slot$TotN }
		if = {
			limit = { NOT = { is_key_equal = { lhs = DG_Tmp5 value = 0 } } }
			divide_key = { lhs = MN_S$slot$TotP			which = DG_Tmp5 }
		}
		multiply_key = { lhs = MN_S$slot$TotP			value = 100 }
	}
}

MN_RlgMigration = {
	MN_AddReligion = { type = $TypeRel$ religion = $Religion$ }
	
	MN_RlgMigration_Influx = { slot = 0 TypeRel = $TypeRel$ Religion = $Religion$ Class = $Class$ Amount = $Amount$ }
	MN_RlgMigration_Influx = { slot = 1 TypeRel = $TypeRel$ Religion = $Religion$ Class = $Class$ Amount = $Amount$ }
	MN_RlgMigration_Influx = { slot = 2 TypeRel = $TypeRel$ Religion = $Religion$ Class = $Class$ Amount = $Amount$ }
	MN_RlgMigration_Influx = { slot = 3 TypeRel = $TypeRel$ Religion = $Religion$ Class = $Class$ Amount = $Amount$ }
	MN_RlgMigration_Influx = { slot = 4 TypeRel = $TypeRel$ Religion = $Religion$ Class = $Class$ Amount = $Amount$ }
	MN_RlgMigration_Influx = { slot = 5 TypeRel = $TypeRel$ Religion = $Religion$ Class = $Class$ Amount = $Amount$ }
	
	set_key		= { lhs = DG_Tmp1 which = MN_S0RurN }
	change_key	= { lhs = DG_Tmp1 which = MN_S1RurN }
	change_key	= { lhs = DG_Tmp1 which = MN_S2RurN }
	change_key	= { lhs = DG_Tmp1 which = MN_S3RurN }
	change_key	= { lhs = DG_Tmp1 which = MN_S4RurN }
	change_key	= { lhs = DG_Tmp1 which = MN_S5RurN }
	
	set_key		= { lhs = DG_Tmp2 which = MN_S0UrbN }
	change_key	= { lhs = DG_Tmp2 which = MN_S1UrbN }
	change_key	= { lhs = DG_Tmp2 which = MN_S2UrbN }
	change_key	= { lhs = DG_Tmp2 which = MN_S3UrbN }
	change_key	= { lhs = DG_Tmp2 which = MN_S4UrbN }
	change_key	= { lhs = DG_Tmp2 which = MN_S5UrbN }
	
	set_key		= { lhs = DG_Tmp3 which = MN_S0NotN }
	change_key	= { lhs = DG_Tmp3 which = MN_S1NotN }
	change_key	= { lhs = DG_Tmp3 which = MN_S2NotN }
	change_key	= { lhs = DG_Tmp3 which = MN_S3NotN }
	change_key	= { lhs = DG_Tmp3 which = MN_S4NotN }
	change_key	= { lhs = DG_Tmp3 which = MN_S5NotN }
	
	set_key		= { lhs = DG_Tmp5 which = MN_S0TotN }
	change_key	= { lhs = DG_Tmp5 which = MN_S1TotN }
	change_key	= { lhs = DG_Tmp5 which = MN_S2TotN }
	change_key	= { lhs = DG_Tmp5 which = MN_S3TotN }
	change_key	= { lhs = DG_Tmp5 which = MN_S4TotN }
	change_key	= { lhs = DG_Tmp5 which = MN_S5TotN }

	MN_RlgMigration_Slot = { slot = 0 }
	MN_RlgMigration_Slot = { slot = 1 }
	MN_RlgMigration_Slot = { slot = 2 }
	MN_RlgMigration_Slot = { slot = 3 }
	MN_RlgMigration_Slot = { slot = 4 }
	MN_RlgMigration_Slot = { slot = 5 }
}

# Change religion from $from$ to $to$
# Has a failsafe so that, if before or after the change, there are two slots of same religion
MN_RlgChange = {
    if = {
        limit = { is_key_equal = { lhs = MN_S0 value = $from$ } }
        set_key = { lhs = MN_S0 value = $to$ }
		if = {
			limit = { is_key_equal = { lhs = MN_S1 value = $to$ } }
			change_key = { lhs = MN_S0RurN			which = MN_S1RurN }
			change_key = { lhs = MN_S0UrbN			which = MN_S1UrbN }
			change_key = { lhs = MN_S0NotN			which = MN_S1NotN }
			change_key = { lhs = MN_S0RurP			which = MN_S1RurP }
			change_key = { lhs = MN_S0UrbP			which = MN_S1UrbP }
			change_key = { lhs = MN_S0NotP			which = MN_S1NotP }
			change_key = { lhs = MN_S0TotN			which = MN_S1TotN }
			change_key = { lhs = MN_S0TotP			which = MN_S1TotP }
			change_key = { lhs = MN_S0Rural		which = MN_S1Rural }
			change_key = { lhs = MN_S0Urban		which = MN_S1Urban }
			change_key = { lhs = MN_S0Notables	which = MN_S1Notables }
			
			set_key = { lhs = MN_S1			value = 0 }
			set_key = { lhs = MN_S1RurN		value = 0 }
			set_key = { lhs = MN_S1UrbN		value = 0 }
			set_key = { lhs = MN_S1NotN		value = 0 }
			set_key = { lhs = MN_S1RurP		value = 0 }
			set_key = { lhs = MN_S1UrbP		value = 0 }
			set_key = { lhs = MN_S1NotP		value = 0 }
			set_key = { lhs = MN_S1TotN		value = 0 }
			set_key = { lhs = MN_S1TotP		value = 0 }
			set_key = { lhs = MN_S1Rural		value = 0 }
			set_key = { lhs = MN_S1Urban		value = 0 }
			set_key = { lhs = MN_S1Notables	value = 0 }
			set_key = { lhs = MN_S1INF			value = 0 }
			set_key = { lhs = MN_S1ENT			value = 0 }
			set_key = { lhs = MN_S1Preach		value = 0 }
			set_key = { lhs = MN_S1Inquis		value = 0 }
			set_key = { lhs = MN_S1Tolerance	value = 0 }
			set_key = { lhs = MN_S1Bastion	value = 0 }
			set_key = { lhs = MN_S1MStrength	value = 0 }
			set_key = { lhs = MN_S1_Var		value = 0 }
		}
		else_if = {
			limit = { is_key_equal = { lhs = MN_S2 value = $to$ } }
			change_key = { lhs = MN_S0RurN			which = MN_S2RurN }
			change_key = { lhs = MN_S0UrbN			which = MN_S2UrbN }
			change_key = { lhs = MN_S0NotN			which = MN_S2NotN }
			change_key = { lhs = MN_S0RurP			which = MN_S2RurP }
			change_key = { lhs = MN_S0UrbP			which = MN_S2UrbP }
			change_key = { lhs = MN_S0NotP			which = MN_S2NotP }
			change_key = { lhs = MN_S0TotN			which = MN_S2TotN }
			change_key = { lhs = MN_S0TotP			which = MN_S2TotP }
			change_key = { lhs = MN_S0Rural		which = MN_S2Rural }
			change_key = { lhs = MN_S0Urban		which = MN_S2Urban }
			change_key = { lhs = MN_S0Notables	which = MN_S2Notables }
			
			set_key = { lhs = MN_S2			value = 0 }
			set_key = { lhs = MN_S2RurN		value = 0 }
			set_key = { lhs = MN_S2UrbN		value = 0 }
			set_key = { lhs = MN_S2NotN		value = 0 }
			set_key = { lhs = MN_S2RurP		value = 0 }
			set_key = { lhs = MN_S2UrbP		value = 0 }
			set_key = { lhs = MN_S2NotP		value = 0 }
			set_key = { lhs = MN_S2TotN		value = 0 }
			set_key = { lhs = MN_S2TotP		value = 0 }
			set_key = { lhs = MN_S2Rural		value = 0 }
			set_key = { lhs = MN_S2Urban		value = 0 }
			set_key = { lhs = MN_S2Notables	value = 0 }
			set_key = { lhs = MN_S2INF			value = 0 }
			set_key = { lhs = MN_S2ENT			value = 0 }
			set_key = { lhs = MN_S2Preach		value = 0 }
			set_key = { lhs = MN_S2Inquis		value = 0 }
			set_key = { lhs = MN_S2Tolerance	value = 0 }
			set_key = { lhs = MN_S2Bastion	value = 0 }
			set_key = { lhs = MN_S2MStrength	value = 0 }
			set_key = { lhs = MN_S2_Var		value = 0 }
		}
		else_if = {
			limit = { is_key_equal = { lhs = MN_S3 value = $to$ } }
			change_key = { lhs = MN_S0RurN			which = MN_S3RurN }
			change_key = { lhs = MN_S0UrbN			which = MN_S3UrbN }
			change_key = { lhs = MN_S0NotN			which = MN_S3NotN }
			change_key = { lhs = MN_S0RurP			which = MN_S3RurP }
			change_key = { lhs = MN_S0UrbP			which = MN_S3UrbP }
			change_key = { lhs = MN_S0NotP			which = MN_S3NotP }
			change_key = { lhs = MN_S0TotN			which = MN_S3TotN }
			change_key = { lhs = MN_S0TotP			which = MN_S3TotP }
			change_key = { lhs = MN_S0Rural		which = MN_S3Rural }
			change_key = { lhs = MN_S0Urban		which = MN_S3Urban }
			change_key = { lhs = MN_S0Notables	which = MN_S3Notables }
			
			set_key = { lhs = MN_S3			value = 0 }
			set_key = { lhs = MN_S3RurN		value = 0 }
			set_key = { lhs = MN_S3UrbN		value = 0 }
			set_key = { lhs = MN_S3NotN		value = 0 }
			set_key = { lhs = MN_S3RurP		value = 0 }
			set_key = { lhs = MN_S3UrbP		value = 0 }
			set_key = { lhs = MN_S3NotP		value = 0 }
			set_key = { lhs = MN_S3TotN		value = 0 }
			set_key = { lhs = MN_S3TotP		value = 0 }
			set_key = { lhs = MN_S3Rural		value = 0 }
			set_key = { lhs = MN_S3Urban		value = 0 }
			set_key = { lhs = MN_S3Notables	value = 0 }
			set_key = { lhs = MN_S3INF			value = 0 }
			set_key = { lhs = MN_S3ENT			value = 0 }
			set_key = { lhs = MN_S3Preach		value = 0 }
			set_key = { lhs = MN_S3Inquis		value = 0 }
			set_key = { lhs = MN_S3Tolerance	value = 0 }
			set_key = { lhs = MN_S3Bastion	value = 0 }
			set_key = { lhs = MN_S3MStrength	value = 0 }
			set_key = { lhs = MN_S3_Var		value = 0 }
		}
		else_if = {
			limit = { is_key_equal = { lhs = MN_S4 value = $to$ } }
			change_key = { lhs = MN_S0RurN			which = MN_S4RurN }
			change_key = { lhs = MN_S0UrbN			which = MN_S4UrbN }
			change_key = { lhs = MN_S0NotN			which = MN_S4NotN }
			change_key = { lhs = MN_S0RurP			which = MN_S4RurP }
			change_key = { lhs = MN_S0UrbP			which = MN_S4UrbP }
			change_key = { lhs = MN_S0NotP			which = MN_S4NotP }
			change_key = { lhs = MN_S0TotN			which = MN_S4TotN }
			change_key = { lhs = MN_S0TotP			which = MN_S4TotP }
			change_key = { lhs = MN_S0Rural		which = MN_S4Rural }
			change_key = { lhs = MN_S0Urban		which = MN_S4Urban }
			change_key = { lhs = MN_S0Notables	which = MN_S4Notables }
			
			set_key = { lhs = MN_S4			value = 0 }
			set_key = { lhs = MN_S4RurN		value = 0 }
			set_key = { lhs = MN_S4UrbN		value = 0 }
			set_key = { lhs = MN_S4NotN		value = 0 }
			set_key = { lhs = MN_S4RurP		value = 0 }
			set_key = { lhs = MN_S4UrbP		value = 0 }
			set_key = { lhs = MN_S4NotP		value = 0 }
			set_key = { lhs = MN_S4TotN		value = 0 }
			set_key = { lhs = MN_S4TotP		value = 0 }
			set_key = { lhs = MN_S4Rural		value = 0 }
			set_key = { lhs = MN_S4Urban		value = 0 }
			set_key = { lhs = MN_S4Notables	value = 0 }
			set_key = { lhs = MN_S4INF			value = 0 }
			set_key = { lhs = MN_S4ENT			value = 0 }
			set_key = { lhs = MN_S4Preach		value = 0 }
			set_key = { lhs = MN_S4Inquis		value = 0 }
			set_key = { lhs = MN_S4Tolerance	value = 0 }
			set_key = { lhs = MN_S4Bastion	value = 0 }
			set_key = { lhs = MN_S4MStrength	value = 0 }
			set_key = { lhs = MN_S4_Var		value = 0 }
		}
		else_if = {
			limit = { is_key_equal = { lhs = MN_S5 value = $to$ } }
			change_key = { lhs = MN_S0RurN			which = MN_S5RurN }
			change_key = { lhs = MN_S0UrbN			which = MN_S5UrbN }
			change_key = { lhs = MN_S0NotN			which = MN_S5NotN }
			change_key = { lhs = MN_S0RurP			which = MN_S5RurP }
			change_key = { lhs = MN_S0UrbP			which = MN_S5UrbP }
			change_key = { lhs = MN_S0NotP			which = MN_S5NotP }
			change_key = { lhs = MN_S0TotN			which = MN_S5TotN }
			change_key = { lhs = MN_S0TotP			which = MN_S5TotP }
			change_key = { lhs = MN_S0Rural		which = MN_S5Rural }
			change_key = { lhs = MN_S0Urban		which = MN_S5Urban }
			change_key = { lhs = MN_S0Notables	which = MN_S5Notables }
			
			set_key = { lhs = MN_S5			value = 0 }
			set_key = { lhs = MN_S5RurN		value = 0 }
			set_key = { lhs = MN_S5UrbN		value = 0 }
			set_key = { lhs = MN_S5NotN		value = 0 }
			set_key = { lhs = MN_S5RurP		value = 0 }
			set_key = { lhs = MN_S5UrbP		value = 0 }
			set_key = { lhs = MN_S5NotP		value = 0 }
			set_key = { lhs = MN_S5TotN		value = 0 }
			set_key = { lhs = MN_S5TotP		value = 0 }
			set_key = { lhs = MN_S5Rural		value = 0 }
			set_key = { lhs = MN_S5Urban		value = 0 }
			set_key = { lhs = MN_S5Notables	value = 0 }
			set_key = { lhs = MN_S5INF			value = 0 }
			set_key = { lhs = MN_S5ENT			value = 0 }
			set_key = { lhs = MN_S5Preach		value = 0 }
			set_key = { lhs = MN_S5Inquis		value = 0 }
			set_key = { lhs = MN_S5Tolerance	value = 0 }
			set_key = { lhs = MN_S5Bastion	value = 0 }
			set_key = { lhs = MN_S5MStrength	value = 0 }
			set_key = { lhs = MN_S5_Var		value = 0 }
		}
	}
    else_if = {
        limit = { is_key_equal = { lhs = MN_S1 value = $from$ } }
        set_key = { lhs = MN_S1 value = $to$ }
		if = {
			limit = { is_key_equal = { lhs = MN_S2 value = $to$ } }
			change_key = { lhs = MN_S1RurN			which = MN_S2RurN }
			change_key = { lhs = MN_S1UrbN			which = MN_S2UrbN }
			change_key = { lhs = MN_S1NotN			which = MN_S2NotN }
			change_key = { lhs = MN_S1RurP			which = MN_S2RurP }
			change_key = { lhs = MN_S1UrbP			which = MN_S2UrbP }
			change_key = { lhs = MN_S1NotP			which = MN_S2NotP }
			change_key = { lhs = MN_S1TotN			which = MN_S2TotN }
			change_key = { lhs = MN_S1TotP			which = MN_S2TotP }
			change_key = { lhs = MN_S1Rural		which = MN_S2Rural }
			change_key = { lhs = MN_S1Urban		which = MN_S2Urban }
			change_key = { lhs = MN_S1Notables	which = MN_S2Notables }
			
			set_key = { lhs = MN_S2			value = 0 }
			set_key = { lhs = MN_S2RurN		value = 0 }
			set_key = { lhs = MN_S2UrbN		value = 0 }
			set_key = { lhs = MN_S2NotN		value = 0 }
			set_key = { lhs = MN_S2RurP		value = 0 }
			set_key = { lhs = MN_S2UrbP		value = 0 }
			set_key = { lhs = MN_S2NotP		value = 0 }
			set_key = { lhs = MN_S2TotN		value = 0 }
			set_key = { lhs = MN_S2TotP		value = 0 }
			set_key = { lhs = MN_S2Rural		value = 0 }
			set_key = { lhs = MN_S2Urban		value = 0 }
			set_key = { lhs = MN_S2Notables	value = 0 }
			set_key = { lhs = MN_S2INF			value = 0 }
			set_key = { lhs = MN_S2ENT			value = 0 }
			set_key = { lhs = MN_S2Preach		value = 0 }
			set_key = { lhs = MN_S2Inquis		value = 0 }
			set_key = { lhs = MN_S2Tolerance	value = 0 }
			set_key = { lhs = MN_S2Bastion	value = 0 }
			set_key = { lhs = MN_S2MStrength	value = 0 }
			set_key = { lhs = MN_S2_Var		value = 0 }
		}
		else_if = {
			limit = { is_key_equal = { lhs = MN_S3 value = $to$ } }
			change_key = { lhs = MN_S1RurN			which = MN_S3RurN }
			change_key = { lhs = MN_S1UrbN			which = MN_S3UrbN }
			change_key = { lhs = MN_S1NotN			which = MN_S3NotN }
			change_key = { lhs = MN_S1RurP			which = MN_S3RurP }
			change_key = { lhs = MN_S1UrbP			which = MN_S3UrbP }
			change_key = { lhs = MN_S1NotP			which = MN_S3NotP }
			change_key = { lhs = MN_S1TotN			which = MN_S3TotN }
			change_key = { lhs = MN_S1TotP			which = MN_S3TotP }
			change_key = { lhs = MN_S1Rural		which = MN_S3Rural }
			change_key = { lhs = MN_S1Urban		which = MN_S3Urban }
			change_key = { lhs = MN_S1Notables	which = MN_S3Notables }
			
			set_key = { lhs = MN_S3			value = 0 }
			set_key = { lhs = MN_S3RurN		value = 0 }
			set_key = { lhs = MN_S3UrbN		value = 0 }
			set_key = { lhs = MN_S3NotN		value = 0 }
			set_key = { lhs = MN_S3RurP		value = 0 }
			set_key = { lhs = MN_S3UrbP		value = 0 }
			set_key = { lhs = MN_S3NotP		value = 0 }
			set_key = { lhs = MN_S3TotN		value = 0 }
			set_key = { lhs = MN_S3TotP		value = 0 }
			set_key = { lhs = MN_S3Rural		value = 0 }
			set_key = { lhs = MN_S3Urban		value = 0 }
			set_key = { lhs = MN_S3Notables	value = 0 }
			set_key = { lhs = MN_S3INF			value = 0 }
			set_key = { lhs = MN_S3ENT			value = 0 }
			set_key = { lhs = MN_S3Preach		value = 0 }
			set_key = { lhs = MN_S3Inquis		value = 0 }
			set_key = { lhs = MN_S3Tolerance	value = 0 }
			set_key = { lhs = MN_S3Bastion	value = 0 }
			set_key = { lhs = MN_S3MStrength	value = 0 }
			set_key = { lhs = MN_S3_Var		value = 0 }
		}
		else_if = {
			limit = { is_key_equal = { lhs = MN_S4 value = $to$ } }
			change_key = { lhs = MN_S1RurN			which = MN_S4RurN }
			change_key = { lhs = MN_S1UrbN			which = MN_S4UrbN }
			change_key = { lhs = MN_S1NotN			which = MN_S4NotN }
			change_key = { lhs = MN_S1RurP			which = MN_S4RurP }
			change_key = { lhs = MN_S1UrbP			which = MN_S4UrbP }
			change_key = { lhs = MN_S1NotP			which = MN_S4NotP }
			change_key = { lhs = MN_S1TotN			which = MN_S4TotN }
			change_key = { lhs = MN_S1TotP			which = MN_S4TotP }
			change_key = { lhs = MN_S1Rural		which = MN_S4Rural }
			change_key = { lhs = MN_S1Urban		which = MN_S4Urban }
			change_key = { lhs = MN_S1Notables	which = MN_S4Notables }
			
			set_key = { lhs = MN_S4			value = 0 }
			set_key = { lhs = MN_S4RurN		value = 0 }
			set_key = { lhs = MN_S4UrbN		value = 0 }
			set_key = { lhs = MN_S4NotN		value = 0 }
			set_key = { lhs = MN_S4RurP		value = 0 }
			set_key = { lhs = MN_S4UrbP		value = 0 }
			set_key = { lhs = MN_S4NotP		value = 0 }
			set_key = { lhs = MN_S4TotN		value = 0 }
			set_key = { lhs = MN_S4TotP		value = 0 }
			set_key = { lhs = MN_S4Rural		value = 0 }
			set_key = { lhs = MN_S4Urban		value = 0 }
			set_key = { lhs = MN_S4Notables	value = 0 }
			set_key = { lhs = MN_S4INF			value = 0 }
			set_key = { lhs = MN_S4ENT			value = 0 }
			set_key = { lhs = MN_S4Preach		value = 0 }
			set_key = { lhs = MN_S4Inquis		value = 0 }
			set_key = { lhs = MN_S4Tolerance	value = 0 }
			set_key = { lhs = MN_S4Bastion	value = 0 }
			set_key = { lhs = MN_S4MStrength	value = 0 }
			set_key = { lhs = MN_S4_Var		value = 0 }
		}
		else_if = {
			limit = { is_key_equal = { lhs = MN_S5 value = $to$ } }
			change_key = { lhs = MN_S1RurN			which = MN_S5RurN }
			change_key = { lhs = MN_S1UrbN			which = MN_S5UrbN }
			change_key = { lhs = MN_S1NotN			which = MN_S5NotN }
			change_key = { lhs = MN_S1RurP			which = MN_S5RurP }
			change_key = { lhs = MN_S1UrbP			which = MN_S5UrbP }
			change_key = { lhs = MN_S1NotP			which = MN_S5NotP }
			change_key = { lhs = MN_S1TotN			which = MN_S5TotN }
			change_key = { lhs = MN_S1TotP			which = MN_S5TotP }
			change_key = { lhs = MN_S1Rural		which = MN_S5Rural }
			change_key = { lhs = MN_S1Urban		which = MN_S5Urban }
			change_key = { lhs = MN_S1Notables	which = MN_S5Notables }
			
			set_key = { lhs = MN_S5			value = 0 }
			set_key = { lhs = MN_S5RurN		value = 0 }
			set_key = { lhs = MN_S5UrbN		value = 0 }
			set_key = { lhs = MN_S5NotN		value = 0 }
			set_key = { lhs = MN_S5RurP		value = 0 }
			set_key = { lhs = MN_S5UrbP		value = 0 }
			set_key = { lhs = MN_S5NotP		value = 0 }
			set_key = { lhs = MN_S5TotN		value = 0 }
			set_key = { lhs = MN_S5TotP		value = 0 }
			set_key = { lhs = MN_S5Rural		value = 0 }
			set_key = { lhs = MN_S5Urban		value = 0 }
			set_key = { lhs = MN_S5Notables	value = 0 }
			set_key = { lhs = MN_S5INF			value = 0 }
			set_key = { lhs = MN_S5ENT			value = 0 }
			set_key = { lhs = MN_S5Preach		value = 0 }
			set_key = { lhs = MN_S5Inquis		value = 0 }
			set_key = { lhs = MN_S5Tolerance	value = 0 }
			set_key = { lhs = MN_S5Bastion	value = 0 }
			set_key = { lhs = MN_S5MStrength	value = 0 }
			set_key = { lhs = MN_S5_Var		value = 0 }
		}
    }
    else_if = {
        limit = { is_key_equal = { lhs = MN_S2 value = $from$ } }
        set_key = { lhs = MN_S2 value = $to$ }
		if = {
			limit = { is_key_equal = { lhs = MN_S3 value = $to$ } }
			change_key = { lhs = MN_S2RurN			which = MN_S3RurN }
			change_key = { lhs = MN_S2UrbN			which = MN_S3UrbN }
			change_key = { lhs = MN_S2NotN			which = MN_S3NotN }
			change_key = { lhs = MN_S2RurP			which = MN_S3RurP }
			change_key = { lhs = MN_S2UrbP			which = MN_S3UrbP }
			change_key = { lhs = MN_S2NotP			which = MN_S3NotP }
			change_key = { lhs = MN_S2TotN			which = MN_S3TotN }
			change_key = { lhs = MN_S2TotP			which = MN_S3TotP }
			change_key = { lhs = MN_S2Rural		which = MN_S3Rural }
			change_key = { lhs = MN_S2Urban		which = MN_S3Urban }
			change_key = { lhs = MN_S2Notables	which = MN_S3Notables }
			
			set_key = { lhs = MN_S3			value = 0 }
			set_key = { lhs = MN_S3RurN		value = 0 }
			set_key = { lhs = MN_S3UrbN		value = 0 }
			set_key = { lhs = MN_S3NotN		value = 0 }
			set_key = { lhs = MN_S3RurP		value = 0 }
			set_key = { lhs = MN_S3UrbP		value = 0 }
			set_key = { lhs = MN_S3NotP		value = 0 }
			set_key = { lhs = MN_S3TotN		value = 0 }
			set_key = { lhs = MN_S3TotP		value = 0 }
			set_key = { lhs = MN_S3Rural		value = 0 }
			set_key = { lhs = MN_S3Urban		value = 0 }
			set_key = { lhs = MN_S3Notables	value = 0 }
			set_key = { lhs = MN_S3INF			value = 0 }
			set_key = { lhs = MN_S3ENT			value = 0 }
			set_key = { lhs = MN_S3Preach		value = 0 }
			set_key = { lhs = MN_S3Inquis		value = 0 }
			set_key = { lhs = MN_S3Tolerance	value = 0 }
			set_key = { lhs = MN_S3Bastion	value = 0 }
			set_key = { lhs = MN_S3MStrength	value = 0 }
			set_key = { lhs = MN_S3_Var		value = 0 }
		}
		else_if = {
			limit = { is_key_equal = { lhs = MN_S4 value = $to$ } }
			change_key = { lhs = MN_S2RurN			which = MN_S4RurN }
			change_key = { lhs = MN_S2UrbN			which = MN_S4UrbN }
			change_key = { lhs = MN_S2NotN			which = MN_S4NotN }
			change_key = { lhs = MN_S2RurP			which = MN_S4RurP }
			change_key = { lhs = MN_S2UrbP			which = MN_S4UrbP }
			change_key = { lhs = MN_S2NotP			which = MN_S4NotP }
			change_key = { lhs = MN_S2TotN			which = MN_S4TotN }
			change_key = { lhs = MN_S2TotP			which = MN_S4TotP }
			change_key = { lhs = MN_S2Rural		which = MN_S4Rural }
			change_key = { lhs = MN_S2Urban		which = MN_S4Urban }
			change_key = { lhs = MN_S2Notables	which = MN_S4Notables }
			
			set_key = { lhs = MN_S4			value = 0 }
			set_key = { lhs = MN_S4RurN		value = 0 }
			set_key = { lhs = MN_S4UrbN		value = 0 }
			set_key = { lhs = MN_S4NotN		value = 0 }
			set_key = { lhs = MN_S4RurP		value = 0 }
			set_key = { lhs = MN_S4UrbP		value = 0 }
			set_key = { lhs = MN_S4NotP		value = 0 }
			set_key = { lhs = MN_S4TotN		value = 0 }
			set_key = { lhs = MN_S4TotP		value = 0 }
			set_key = { lhs = MN_S4Rural		value = 0 }
			set_key = { lhs = MN_S4Urban		value = 0 }
			set_key = { lhs = MN_S4Notables	value = 0 }
			set_key = { lhs = MN_S4INF			value = 0 }
			set_key = { lhs = MN_S4ENT			value = 0 }
			set_key = { lhs = MN_S4Preach		value = 0 }
			set_key = { lhs = MN_S4Inquis		value = 0 }
			set_key = { lhs = MN_S4Tolerance	value = 0 }
			set_key = { lhs = MN_S4Bastion	value = 0 }
			set_key = { lhs = MN_S4MStrength	value = 0 }
			set_key = { lhs = MN_S4_Var		value = 0 }
		}
		else_if = {
			limit = { is_key_equal = { lhs = MN_S5 value = $to$ } }
			change_key = { lhs = MN_S2RurN			which = MN_S5RurN }
			change_key = { lhs = MN_S2UrbN			which = MN_S5UrbN }
			change_key = { lhs = MN_S2NotN			which = MN_S5NotN }
			change_key = { lhs = MN_S2RurP			which = MN_S5RurP }
			change_key = { lhs = MN_S2UrbP			which = MN_S5UrbP }
			change_key = { lhs = MN_S2NotP			which = MN_S5NotP }
			change_key = { lhs = MN_S2TotN			which = MN_S5TotN }
			change_key = { lhs = MN_S2TotP			which = MN_S5TotP }
			change_key = { lhs = MN_S2Rural		which = MN_S5Rural }
			change_key = { lhs = MN_S2Urban		which = MN_S5Urban }
			change_key = { lhs = MN_S2Notables	which = MN_S5Notables }
			
			set_key = { lhs = MN_S5			value = 0 }
			set_key = { lhs = MN_S5RurN		value = 0 }
			set_key = { lhs = MN_S5UrbN		value = 0 }
			set_key = { lhs = MN_S5NotN		value = 0 }
			set_key = { lhs = MN_S5RurP		value = 0 }
			set_key = { lhs = MN_S5UrbP		value = 0 }
			set_key = { lhs = MN_S5NotP		value = 0 }
			set_key = { lhs = MN_S5TotN		value = 0 }
			set_key = { lhs = MN_S5TotP		value = 0 }
			set_key = { lhs = MN_S5Rural		value = 0 }
			set_key = { lhs = MN_S5Urban		value = 0 }
			set_key = { lhs = MN_S5Notables	value = 0 }
			set_key = { lhs = MN_S5INF			value = 0 }
			set_key = { lhs = MN_S5ENT			value = 0 }
			set_key = { lhs = MN_S5Preach		value = 0 }
			set_key = { lhs = MN_S5Inquis		value = 0 }
			set_key = { lhs = MN_S5Tolerance	value = 0 }
			set_key = { lhs = MN_S5Bastion	value = 0 }
			set_key = { lhs = MN_S5MStrength	value = 0 }
			set_key = { lhs = MN_S5_Var		value = 0 }
		}
    }
    else_if = {
        limit = { is_key_equal = { lhs = MN_S3 value = $from$ } }
        set_key = { lhs = MN_S3 value = $to$ }
		if = {
			limit = { is_key_equal = { lhs = MN_S4 value = $to$ } }
			change_key = { lhs = MN_S3RurN			which = MN_S4RurN }
			change_key = { lhs = MN_S3UrbN			which = MN_S4UrbN }
			change_key = { lhs = MN_S3NotN			which = MN_S4NotN }
			change_key = { lhs = MN_S3RurP			which = MN_S4RurP }
			change_key = { lhs = MN_S3UrbP			which = MN_S4UrbP }
			change_key = { lhs = MN_S3NotP			which = MN_S4NotP }
			change_key = { lhs = MN_S3TotN			which = MN_S4TotN }
			change_key = { lhs = MN_S3TotP			which = MN_S4TotP }
			change_key = { lhs = MN_S3Rural		which = MN_S4Rural }
			change_key = { lhs = MN_S3Urban		which = MN_S4Urban }
			change_key = { lhs = MN_S3Notables	which = MN_S4Notables }
			
			set_key = { lhs = MN_S4			value = 0 }
			set_key = { lhs = MN_S4RurN		value = 0 }
			set_key = { lhs = MN_S4UrbN		value = 0 }
			set_key = { lhs = MN_S4NotN		value = 0 }
			set_key = { lhs = MN_S4RurP		value = 0 }
			set_key = { lhs = MN_S4UrbP		value = 0 }
			set_key = { lhs = MN_S4NotP		value = 0 }
			set_key = { lhs = MN_S4TotN		value = 0 }
			set_key = { lhs = MN_S4TotP		value = 0 }
			set_key = { lhs = MN_S4Rural		value = 0 }
			set_key = { lhs = MN_S4Urban		value = 0 }
			set_key = { lhs = MN_S4Notables	value = 0 }
			set_key = { lhs = MN_S4INF			value = 0 }
			set_key = { lhs = MN_S4ENT			value = 0 }
			set_key = { lhs = MN_S4Preach		value = 0 }
			set_key = { lhs = MN_S4Inquis		value = 0 }
			set_key = { lhs = MN_S4Tolerance	value = 0 }
			set_key = { lhs = MN_S4Bastion	value = 0 }
			set_key = { lhs = MN_S4MStrength	value = 0 }
			set_key = { lhs = MN_S4_Var		value = 0 }
		}
		else_if = {
			limit = { is_key_equal = { lhs = MN_S5 value = $to$ } }
			change_key = { lhs = MN_S3RurN			which = MN_S5RurN }
			change_key = { lhs = MN_S3UrbN			which = MN_S5UrbN }
			change_key = { lhs = MN_S3NotN			which = MN_S5NotN }
			change_key = { lhs = MN_S3RurP			which = MN_S5RurP }
			change_key = { lhs = MN_S3UrbP			which = MN_S5UrbP }
			change_key = { lhs = MN_S3NotP			which = MN_S5NotP }
			change_key = { lhs = MN_S3TotN			which = MN_S5TotN }
			change_key = { lhs = MN_S3TotP			which = MN_S5TotP }
			change_key = { lhs = MN_S3Rural		which = MN_S5Rural }
			change_key = { lhs = MN_S3Urban		which = MN_S5Urban }
			change_key = { lhs = MN_S3Notables	which = MN_S5Notables }
			
			set_key = { lhs = MN_S5			value = 0 }
			set_key = { lhs = MN_S5RurN		value = 0 }
			set_key = { lhs = MN_S5UrbN		value = 0 }
			set_key = { lhs = MN_S5NotN		value = 0 }
			set_key = { lhs = MN_S5RurP		value = 0 }
			set_key = { lhs = MN_S5UrbP		value = 0 }
			set_key = { lhs = MN_S5NotP		value = 0 }
			set_key = { lhs = MN_S5TotN		value = 0 }
			set_key = { lhs = MN_S5TotP		value = 0 }
			set_key = { lhs = MN_S5Rural		value = 0 }
			set_key = { lhs = MN_S5Urban		value = 0 }
			set_key = { lhs = MN_S5Notables	value = 0 }
			set_key = { lhs = MN_S5INF			value = 0 }
			set_key = { lhs = MN_S5ENT			value = 0 }
			set_key = { lhs = MN_S5Preach		value = 0 }
			set_key = { lhs = MN_S5Inquis		value = 0 }
			set_key = { lhs = MN_S5Tolerance	value = 0 }
			set_key = { lhs = MN_S5Bastion	value = 0 }
			set_key = { lhs = MN_S5MStrength	value = 0 }
			set_key = { lhs = MN_S5_Var		value = 0 }
		}
    }
    else_if = {
        limit = { is_key_equal = { lhs = MN_S4 value = $from$ } }
        set_key = { lhs = MN_S4 value = $to$ }
		if = {
			limit = { is_key_equal = { lhs = MN_S5 value = $to$ } }
			change_key = { lhs = MN_S4RurN			which = MN_S5RurN }
			change_key = { lhs = MN_S4UrbN			which = MN_S5UrbN }
			change_key = { lhs = MN_S4NotN			which = MN_S5NotN }
			change_key = { lhs = MN_S4RurP			which = MN_S5RurP }
			change_key = { lhs = MN_S4UrbP			which = MN_S5UrbP }
			change_key = { lhs = MN_S4NotP			which = MN_S5NotP }
			change_key = { lhs = MN_S4TotN			which = MN_S5TotN }
			change_key = { lhs = MN_S4TotP			which = MN_S5TotP }
			change_key = { lhs = MN_S4Rural		which = MN_S5Rural }
			change_key = { lhs = MN_S4Urban		which = MN_S5Urban }
			change_key = { lhs = MN_S4Notables	which = MN_S5Notables }
			
			set_key = { lhs = MN_S5			value = 0 }
			set_key = { lhs = MN_S5RurN		value = 0 }
			set_key = { lhs = MN_S5UrbN		value = 0 }
			set_key = { lhs = MN_S5NotN		value = 0 }
			set_key = { lhs = MN_S5RurP		value = 0 }
			set_key = { lhs = MN_S5UrbP		value = 0 }
			set_key = { lhs = MN_S5NotP		value = 0 }
			set_key = { lhs = MN_S5TotN		value = 0 }
			set_key = { lhs = MN_S5TotP		value = 0 }
			set_key = { lhs = MN_S5Rural		value = 0 }
			set_key = { lhs = MN_S5Urban		value = 0 }
			set_key = { lhs = MN_S5Notables	value = 0 }
			set_key = { lhs = MN_S5INF			value = 0 }
			set_key = { lhs = MN_S5ENT			value = 0 }
			set_key = { lhs = MN_S5Preach		value = 0 }
			set_key = { lhs = MN_S5Inquis		value = 0 }
			set_key = { lhs = MN_S5Tolerance	value = 0 }
			set_key = { lhs = MN_S5Bastion	value = 0 }
			set_key = { lhs = MN_S5MStrength	value = 0 }
			set_key = { lhs = MN_S5_Var		value = 0 }
		}
    }
    else_if = {
        limit = { is_key_equal = { lhs = MN_S5 value = $from$ } }
        set_key = { lhs = MN_S5 value = $to$ }
    }
}

ConversionNotificationCleanup = {
	clr_province_flag = ConversionNotification01perc
	clr_province_flag = ConversionNotification03perc
	clr_province_flag = ConversionNotification05perc
	clr_province_flag = ConversionNotification07perc
	clr_province_flag = ConversionNotification09perc
	clr_province_flag = ConversionNotification10perc
	clr_province_flag = ConversionNotification11perc
	clr_province_flag = ConversionNotification15perc
	clr_province_flag = ConversionNotification20perc
	clr_province_flag = ConversionNotification25perc
	clr_province_flag = ConversionNotification30perc
}

UnrestNofificationCleanup = {
	clr_province_flag = mn_unrest_min_1
	clr_province_flag = mn_unrest_min_5
	clr_province_flag = mn_unrest_min_10
	clr_province_flag = mn_unrest_low_1
	clr_province_flag = mn_unrest_low_5
	clr_province_flag = mn_unrest_low_10
	clr_province_flag = mn_unrest_mid_1
	clr_province_flag = mn_unrest_mid_5
	clr_province_flag = mn_unrest_mid_10
	clr_province_flag = mn_unrest_imp_1
	clr_province_flag = mn_unrest_imp_5
	clr_province_flag = mn_unrest_imp_10
	clr_province_flag = mn_unrest_max_1
	clr_province_flag = mn_unrest_max_5
	clr_province_flag = mn_unrest_max_10
}

TraumaNotificationCleanup = {
	clr_province_flag = mn_trauma_10 
	clr_province_flag = mn_trauma_20 
	clr_province_flag = mn_trauma_30 
	clr_province_flag = mn_trauma_40 
	clr_province_flag = mn_trauma_50 
	clr_province_flag = mn_trauma_60 
	clr_province_flag = mn_trauma_70 
	clr_province_flag = mn_trauma_80 
	clr_province_flag = mn_trauma_90 	
}