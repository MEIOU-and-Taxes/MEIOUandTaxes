
DG_on_province_religion_converted_effect = {
	#Conversion to the owner religion, exporting it as a key
	export_to_key = {
		 lhs = DG_Tmp1
		 value = religion
		 who = owner 
	}
	#Adds the religion in case it isn't there already
	MN_AddReligion = { type = which religion = DG_Tmp1 }
	
	MN_CleaningUp = yes

	#Base conversion number based on entrenchment level
	set_key      = { lhs = DG_Tmp5 value = 100 }
	subtract_key = { lhs = DG_Tmp5 which = MN_S0ENT }
	divide_key   = { lhs = DG_Tmp5 value = 1000 }
	
	#Bonus of having selected the Evangelical idea group
	if = {
		limit = { has_idea = evangelical_ideas_1 }
		if = {
			limit = { has_idea = evangelical_ideas_7 }
			multiply_key = { lhs = DG_Tmp5 value = 1.25 }
		}
		else = {
			multiply_key = { lhs = DG_Tmp5 value = 1.10 }
		}
	}
	
	if = {
		limit = { has_global_flag = historical_religion }
		divide_key = { lhs = DG_Tmp5 value = 3 }
		#Assigning the variation for rural pops
		set_key    = { lhs = DG_Tmp2 value = 1.00 }
		change_key = { lhs = DG_Tmp2 which = DG_Tmp5 }
		
		#Assigning the variation for urban pops
		set_key      = { lhs = DG_Tmp3 value = 1.50 }
		change_key = { lhs = DG_Tmp3 which = DG_Tmp5 }
		
		#Assigning the variation for elite pops
		set_key      = { lhs = DG_Tmp4 value = 0.75 }
		change_key = { lhs = DG_Tmp4 which = DG_Tmp5 }
	}
	else = {
		#Assigning the variation for rural pops
		set_key      = { lhs = DG_Tmp2 value = 1.10 }
		multiply_key = { lhs = DG_Tmp2 which = DG_Tmp5 }
		multiply_key = { lhs = DG_Tmp2 which = MN_S0RurN }
		change_key   = { lhs = DG_Tmp2 value = 1.00 }
		
		#Assigning the variation for urban pops
		set_key      = { lhs = DG_Tmp3 value = 1.25 }
		multiply_key = { lhs = DG_Tmp3 which = DG_Tmp5 }
		multiply_key = { lhs = DG_Tmp3 which = MN_S0UrbN }
		change_key   = { lhs = DG_Tmp3 value = 2.00 }
	
		#Assigning the variation for elite pops
		set_key      = { lhs = DG_Tmp4 value = 1.50 }
		multiply_key = { lhs = DG_Tmp4 which = DG_Tmp5 }
		multiply_key = { lhs = DG_Tmp4 which = MN_S0NotN }
		change_key   = { lhs = DG_Tmp4 value = 1.00 }
	}
	
	#Cleaning up if majority religion is reaching very low levels
	if = {
		limit = { NOT = { check_key = { lhs = MN_S0RurN which = DG_Tmp2 } } }
		set_key = { lhs = DG_Tmp2 which = MN_S0RurN }
	}
	if = {
		limit = { NOT = { check_key = { lhs = MN_S0UrbN which = DG_Tmp3 } } }
		set_key = { lhs = DG_Tmp3 which = MN_S0UrbN }
	}
	if = {
		limit = { NOT = { check_key = { lhs = MN_S0NotN which = DG_Tmp4 } } }
		set_key = { lhs = DG_Tmp4 which = MN_S0NotN }
	}

	MN_HeresyHelper = { from = MN_S0 typefrom = which to = DG_Tmp1 typeto = which }
	
	set_key = { lhs = DG_Tmp1 value = 0 }
	set_key = { lhs = DG_Tmp2 value = 0 }
	set_key = { lhs = DG_Tmp3 value = 0 }
	set_key = { lhs = DG_Tmp4 value = 0 }
	set_key = { lhs = DG_Tmp5 value = 0 }
	
	MN_GetSlotInit = yes
	#Converts the religion if necessary, and switches slots between former and new religion
	set_province_flag = center_converted
	set_province_flag = DG_Update
}

DG_on_convert_by_trade_policy_effect = {
	#Conversion to the main religion
	export_to_key = {
		 lhs = DG_Tmp1
		 value = religion
	}
	#Adds the religion in case it isn't there already
	MN_AddReligion = { type = which religion = DG_Tmp1 }
	
	MN_CleaningUp = yes

	#Base conversion number based on entrenchment level
	set_key      = { lhs = DG_Tmp5 value = 100 }
	subtract_key = { lhs = DG_Tmp5 which = MN_S0ENT }
	divide_key   = { lhs = DG_Tmp5 value = 1000 }
	
	#Bonus of having selected the Evangelical idea group
	if = {
		limit = { has_idea = evangelical_ideas_1 }
		if = {
			limit = { has_idea = evangelical_ideas_7 }
			multiply_key = { lhs = DG_Tmp5 value = 1.25 }
		}
		else = {
			multiply_key = { lhs = DG_Tmp5 value = 1.10 }
		}
	}
	
	if = {
		limit = { has_global_flag = historical_religion }
		#Assigning the variation for rural pops
		set_key      = { lhs = DG_Tmp2 value = 2.00 }
		if = {
			limit = { check_key = { lhs = MN_S0RurN which = DG_Tmp2 } }
		}
		else = {
			set_key = { lhs = DG_Tmp2 which = MN_S0RurN }
		}
		
		#Assigning the variation for urban pops
		set_key      = { lhs = DG_Tmp2 value = 1.00 }
		if = {
			limit = { check_key = { lhs = MN_S0UrbN which = DG_Tmp3 } }
		}
		else = {
			set_key = { lhs = DG_Tmp3 which = MN_S0UrbN }
		}
		
		#Assigning the variation for elite pops
		set_key      = { lhs = DG_Tmp2 value = 1.00 }
		if = {
			limit = { check_key = { lhs = MN_S0NotN which = DG_Tmp3 } }
		}
		else = {
			set_key = { lhs = DG_Tmp4 which = MN_S0NotN }
		}
	}
	else = {
		#Assigning the variation for rural pops
		set_key      = { lhs = DG_Tmp2 value = 1.10 }
		multiply_key = { lhs = DG_Tmp2 which = DG_Tmp5 }
		multiply_key = { lhs = DG_Tmp2 which = MN_S0RurN }
		change_key   = { lhs = DG_Tmp2 value = 1.00 }
		if = {
			limit = { check_key = { lhs = MN_S0RurN which = DG_Tmp2 } }
		}
		else = {
			set_key = { lhs = DG_Tmp2 which = MN_S0RurN }
		}
		
		#Assigning the variation for urban pops
		set_key      = { lhs = DG_Tmp3 value = 1.25 }
		multiply_key = { lhs = DG_Tmp3 which = DG_Tmp5 }
		multiply_key = { lhs = DG_Tmp3 which = MN_S0UrbN }
		change_key   = { lhs = DG_Tmp3 value = 2.00 }
		if = {
			limit = { check_key = { lhs = MN_S0UrbN which = DG_Tmp3 } }
		}
		else = {
			set_key = { lhs = DG_Tmp3 which = MN_S0UrbN }
		}
		
		#Assigning the variation for elite pops
		set_key      = { lhs = DG_Tmp4 value = 1.50 }
		multiply_key = { lhs = DG_Tmp4 which = DG_Tmp5 }
		multiply_key = { lhs = DG_Tmp4 which = MN_S0NotN }
		change_key   = { lhs = DG_Tmp4 value = 1.00 }
		if = {
			limit = { check_key = { lhs = MN_S0NotN which = DG_Tmp3 } }
		}
		else = {
			set_key = { lhs = DG_Tmp4 which = MN_S0NotN }
		}
	}
	
	MN_HeresyHelper = { to = DG_Tmp1 typeto = which from = MN_S0 typefrom = which }
	
	set_key = { lhs = DG_Tmp1 value = 0 }
	set_key = { lhs = DG_Tmp2 value = 0 }
	set_key = { lhs = DG_Tmp3 value = 0 }
	set_key = { lhs = DG_Tmp4 value = 0 }
	set_key = { lhs = DG_Tmp5 value = 0 }
	
	MN_GetSlotInit = yes
	#Converts the religion if necessary, and switches slots between former and new religion
	set_province_flag = center_converted
	set_province_flag = DG_Update
}

DG_on_province_owner_change_effect = {
	#Conversion to the owner religion, exporting it as a key
	export_to_key = {
		 lhs = DG_Tmp1
		 value = religion
		 who = owner 
	}
	#Adds the religion in case it isn't there already
	MN_AddReligion = { type = which religion = DG_Tmp1 }
	
	MN_CleaningUp = yes
	
	set_key      = { lhs = DG_Tmp2 value = 0.00 }
	set_key      = { lhs = DG_Tmp3 value = 0.05 }
	set_key      = { lhs = DG_Tmp4 value = 0.10 }
	
	MN_HeresyHelper = { to = DG_Tmp1 typeto = which from = MN_S0 typefrom = which }
	
	set_key = { lhs = DG_Tmp1 value = 0 }
	set_key = { lhs = DG_Tmp2 value = 0 }
	set_key = { lhs = DG_Tmp3 value = 0 }
	set_key = { lhs = DG_Tmp4 value = 0 }
	
	MN_GetSlotInit = yes
	#Converts the religion if necessary, and switches slots between former and new religion
	set_province_flag = center_converted
	set_province_flag = DG_Update
}