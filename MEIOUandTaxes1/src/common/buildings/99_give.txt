give_Agriculture_10 = {
	cost = 10
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Agriculture value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Agriculture which = Building_AgricultureMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}			
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Agriculture_10
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_AgricultureShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Agriculture value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Agriculture } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_AgricultureShareSF }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareRE }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareNM }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareNO }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareBG }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_AgricultureShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_AgricultureWealth value = 5 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_AgricultureWealth value = 10 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Agriculture_50 = {
	cost = 50
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Agriculture value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Agriculture which = Building_AgricultureMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Agriculture_50
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_AgricultureShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Agriculture value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Agriculture } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_AgricultureShareSF }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareRE }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareNM }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareNO }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareBG }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_AgricultureShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_AgricultureWealth value = 45 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_AgricultureWealth value = 50 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Agriculture_100 = {
	cost = 100
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Agriculture value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Agriculture which = Building_AgricultureMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Agriculture_100
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_AgricultureShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Agriculture value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Agriculture } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_AgricultureShareSF }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareRE }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareNM }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareNO }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareBG }
				change_key = { lhs = Tmp_1 which = Building_AgricultureShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_AgricultureShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_AgricultureWealth value = 95 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_AgricultureWealth value = 100 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}


give_Forestry_10 = {
	cost = 10
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Forestry value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Forestry which = Building_ForestryMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}			
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Forestry_10
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_ForestryShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Forestry value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Forestry } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_ForestryShareSF }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareRE }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareNM }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareNO }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareBG }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_ForestryShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_ForestryWealth value = 5 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_ForestryWealth value = 10 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Forestry_50 = {
	cost = 50
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Forestry value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Forestry which = Building_ForestryMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Forestry_50
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_ForestryShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Forestry value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Forestry } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_ForestryShareSF }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareRE }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareNM }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareNO }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareBG }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_ForestryShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_ForestryWealth value = 45 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_ForestryWealth value = 50 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Forestry_100 = {
	cost = 100
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Forestry value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Forestry which = Building_ForestryMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Forestry_100
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_ForestryShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Forestry value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Forestry } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_ForestryShareSF }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareRE }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareNM }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareNO }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareBG }
				change_key = { lhs = Tmp_1 which = Building_ForestryShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_ForestryShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_ForestryWealth value = 95 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_ForestryWealth value = 100 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}

give_Extraction_10 = {
	cost = 10
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Extraction value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Extraction which = Building_ExtractionMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}			
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Extraction_10
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_ExtractionShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Extraction value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Extraction } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_ExtractionShareSF }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareRE }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareNM }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareNO }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareBG }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_ExtractionShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_ExtractionWealth value = 5 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_ExtractionWealth value = 10 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Extraction_50 = {
	cost = 50
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Extraction value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Extraction which = Building_ExtractionMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Extraction_50
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_ExtractionShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Extraction value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Extraction } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_ExtractionShareSF }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareRE }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareNM }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareNO }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareBG }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_ExtractionShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_ExtractionWealth value = 45 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_ExtractionWealth value = 50 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Extraction_100 = {
	cost = 100
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Extraction value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Extraction which = Building_ExtractionMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Extraction_100
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_ExtractionShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Extraction value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Extraction } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_ExtractionShareSF }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareRE }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareNM }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareNO }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareBG }
				change_key = { lhs = Tmp_1 which = Building_ExtractionShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_ExtractionShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_ExtractionWealth value = 95 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_ExtractionWealth value = 100 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}


give_Fishery_10 = {
	cost = 10
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Fishery value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Fishery which = Building_FisheryMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}			
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Fishery_10
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_FisheryShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Fishery value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Fishery } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_FisheryShareSF }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareRE }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareNM }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareNO }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareBG }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_FisheryShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_FisheryWealth value = 5 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_FisheryWealth value = 10 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Fishery_50 = {
	cost = 50
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Fishery value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Fishery which = Building_FisheryMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Fishery_50
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_FisheryShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Fishery value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Fishery } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_FisheryShareSF }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareRE }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareNM }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareNO }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareBG }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_FisheryShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_FisheryWealth value = 45 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_FisheryWealth value = 50 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Fishery_100 = {
	cost = 100
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Fishery value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}	
		custom_trigger_tooltip = {
			NOT = { is_key_equal = { lhs = Building_Fishery which = Building_FisheryMax } }
			tooltip = Prov_Full_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Fishery_100
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_FisheryShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Fishery value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Fishery } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_FisheryShareSF }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareRE }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareNM }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareNO }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareBG }
				change_key = { lhs = Tmp_1 which = Building_FisheryShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_FisheryShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_FisheryWealth value = 95 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_FisheryWealth value = 100 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}


give_Commercial_10 = {
	cost = 10
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Commercial value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Commercial_10
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_CommercialShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Commercial value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Commercial } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_CommercialShareSF }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareRE }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareNM }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareNO }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareBG }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_CommercialShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_CommercialWealth value = 5 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_CommercialWealth value = 10 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Commercial_50 = {
	cost = 50
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Commercial value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Commercial_50
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_CommercialShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Commercial value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Commercial } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_CommercialShareSF }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareRE }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareNM }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareNO }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareBG }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_CommercialShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_CommercialWealth value = 45 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_CommercialWealth value = 50 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Commercial_100 = {
	cost = 100
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Commercial value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Commercial_100
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_CommercialShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Commercial value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Commercial } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_CommercialShareSF }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareRE }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareNM }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareNO }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareBG }
				change_key = { lhs = Tmp_1 which = Building_CommercialShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_CommercialShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_CommercialWealth value = 95 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_CommercialWealth value = 100 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}


give_Industrial_10 = {
	cost = 10
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Industrial value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Industrial_10
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_IndustrialShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Industrial value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Industrial } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_IndustrialShareSF }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareRE }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareNM }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareNO }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareBG }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_IndustrialShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_IndustrialWealth value = 5 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_IndustrialWealth value = 10 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Industrial_50 = {
	cost = 50
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Industrial value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Industrial_50
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_IndustrialShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Industrial value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Industrial } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_IndustrialShareSF }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareRE }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareNM }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareNO }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareBG }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_IndustrialShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_IndustrialWealth value = 45 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_IndustrialWealth value = 50 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Industrial_100 = {
	cost = 100
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Industrial value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Industrial_100
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_IndustrialShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Industrial value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Industrial } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_IndustrialShareSF }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareRE }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareNM }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareNO }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareBG }
				change_key = { lhs = Tmp_1 which = Building_IndustrialShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_IndustrialShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_IndustrialWealth value = 95 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_IndustrialWealth value = 100 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}


give_Academic_10 = {
	cost = 10
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Academic value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Academic_10
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_AcademicShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Academic value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Academic } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_AcademicShareSF }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareRE }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareNM }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareNO }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareBG }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_AcademicShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_AcademicWealth value = 5 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_AcademicWealth value = 10 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Academic_50 = {
	cost = 50
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Academic value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Academic_50
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_AcademicShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Academic value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Academic } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_AcademicShareSF }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareRE }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareNM }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareNO }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareBG }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_AcademicShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_AcademicWealth value = 45 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_AcademicWealth value = 50 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
give_Academic_100 = {
	cost = 100
	time = 0
	
	potential = {
		always = yes
	}
	
	build_trigger = {
		custom_trigger_tooltip = {
			check_key = { lhs = Prov_BUPow value = 2.5 }
			tooltip = Prov_State_Reach_BuildingGive_tt
		}
		custom_trigger_tooltip = {
			check_key = { lhs = Building_Academic value = 0.001 }
			tooltip = Prov_Unopened_BuildingGive_tt
		}		
		OR = {
			owner = {
				ai = no
			}
			owner = {
				overlord = {
					ai = no
				}
			}
		}
	}
	
	modifier = {
	}
	
	ai_will_do = {
		factor = 0
	}
	
	on_built = {
		hidden_effect = {
			remove_building = give_Academic_100
	
			if = { # check if the state owns property of this kind in this province already
				limit = {
					NOT = { check_key = { lhs = Building_AcademicShareBU value = 0.001 } }
				}
				#if not, add 5 property size and give it to the state, rest goes into investment pool
				change_key = { lhs = Building_Academic value = 5 } # increase total property size by 5
				set_key = { lhs = Tmp_0 value = 5 }  
				divide_key = { lhs = Tmp_0 which = Building_Academic } # how much % are the 5 units of the total existing property

				# get the sum of existing shares for the property
				set_key = { lhs = Tmp_1 which = Building_AcademicShareSF }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareRE }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareNM }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareNO }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareBG }
				change_key = { lhs = Tmp_1 which = Building_AcademicShareCL }

				multiply_key = { lhs = Tmp_1 which = Tmp_0 }  # how many shares are the percentage of the 5 units of total property? 
				change_key = { lhs = Building_AcademicShareBU which = Tmp_1 } # give this amount of shares to the state

				change_key = { lhs = Building_AcademicWealth value = 95 } # rest of the money goes into investment pool

				#cleanup
				set_key = { lhs = Tmp_0 value = 0 }  
				set_key = { lhs = Tmp_1 value = 0 }
			}
			else = {
				change_key = { lhs = Building_AcademicWealth value = 100 }  # if state already owns this property here, everything goes into investment pool
			}  
		}
	}
	on_obsolete = {
	}
	on_destroyed = {
	}
}
